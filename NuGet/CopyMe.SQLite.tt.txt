<#@ template language="C#" debug="True" hostSpecific="True"                                  #>
<#@ output extension=".generated.cs"                                                         #>
<#@ assembly name="$(SolutionDir)packages\linq2db.SQLite.0.0.4\tools\System.Data.SQLite.dll" #>
<#@ include file="$(ProjectDir)LinqToDB.Templates\LinqToDB.ttinclude"                        #>
<#@ include file="$(ProjectDir)LinqToDB.Templates\PluralizationService.ttinclude"            #>
<#
	/*
		1. Copy this file to a folder where you would like to generate your data model,
		   rename it, and delete .txt extension. For example:

			MyProject
				DataModel
					MyDatabase.tt

		2. Modify the connectionString below to connect to your database.

		3. Add connection string to the web/app.config file:

			<connectionStrings>
				<add name="MyDatabase" connectionString="Data Source=MyDatabase.sqlite" providerName="SQLite" />
			</connectionStrings>

		4. To access your database use the following code:

		using (var db = new MyDatabaseDB())
		{
			var q =
				from c in db.Customers
				select c;

			foreach (var c in q)
				Console.WriteLine(c.ContactName);
		}
	*/

	LinqToDB.DataProvider.SQLite.SQLiteFactory.ResolveSQLite(
		typeof(System.Data.SQLite.SQLiteConnection).Assembly);

	NamespaceName = "DataContext";

	var connectionString = @"Data Source=MyDatabase.sqlite";
	var dataConnection   = LinqToDB.DataProvider.SQLite.SQLiteFactory.CreateDataConnection(connectionString);

	LoadMetadata(dataConnection);

	foreach (var t in Tables.Values)
		foreach (var fk in t.ForeignKeys.Values)
			if (fk.MemberName.Length == 0 || char.IsDigit(fk.MemberName[0]))
				fk.MemberName = "FK_" + fk.MemberName;

	GenerateModel();
#>
