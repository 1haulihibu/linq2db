<?xml version="1.0" encoding="utf-8"?>
<tables>
  <table name="sys.all_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-columns-transact-sql?view=sql-server-ver15">
    <description>Shows the union of all columns belonging to user-defined objects and system objects.</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br&gt;&lt;br&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system-type of the column.</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the column.&lt;br&gt;&lt;br&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; For &lt;strong&gt;text&lt;/strong&gt; columns, the max_length value will be 16 or the value set by sp_tableoption 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise, NULL.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br&gt;&lt;br&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is declared to use filestream storage.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br&gt;&lt;br&gt; 0 = Content is a document fragment, or the column data type is not XML.</column>
    <column name="xml_collection_id" type="int">Non-zero if the column's data type is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the column's validating XML schema namespace&lt;br&gt;&lt;br&gt; 0 = no XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone &lt;a href="../system-stored-procedures/sp-bindefault-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.sp_bindefault&lt;/a&gt;, or an in-line, column-level DEFAULT constraint. The parent_object_id column of an inline column-level default object is a reference back to the table itself.&lt;br&gt;&lt;br&gt; 0 = No default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using sys.sp_bindrule.&lt;br&gt;&lt;br&gt; 0 = No stand-alone rule.&lt;br&gt;&lt;br&gt; For column-level CHECK constraints, see &lt;a href="sys-check-constraints-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href="../tables/use-sparse-columns?view=sql-server-ver15" data-linktype="relative-path"&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href="../tables/use-column-sets?view=sql-server-ver15" data-linktype="relative-path"&gt;Use Column Sets&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br&gt;&lt;br&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br&gt;&lt;br&gt; 0 = NOT_APPLICABLE&lt;br&gt; 1 = AS_ROW_START&lt;br&gt; 2 = AS_ROW_END&lt;br&gt;7 = AS_TRANSACTION_ID_START&lt;br&gt;8 = AS_TRANSACTION_ID_END&lt;br&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../tables/temporal-tables?view=sql-server-ver15" data-linktype="relative-path"&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Textual description of &lt;code&gt;generated_always_type&lt;/code&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br&gt;&lt;br&gt; NOT_APPLICABLE&lt;br&gt; AS_ROW_START&lt;br&gt; AS_ROW_END&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br&gt;&lt;br&gt;AS_TRANSACTION_ID_START&lt;br&gt;AS_TRANSACTION_ID_END&lt;br&gt;AS_SEQUENCE_NUMBER_START&lt;br&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br&gt;&lt;br&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br&gt;&lt;br&gt; 1 = TRANSACTION_ID&lt;br&gt; 2 = SEQUENCE_NUMBER&lt;br&gt; 3 = OPERATION_TYPE&lt;br&gt; 4 = OPERATION_TYPE_DESC&lt;br&gt;&lt;br&gt;For more information on database ledger, see &lt;a href="/en-us/azure/azure-sql/database/ledger-overview" data-linktype="absolute-path"&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br&gt;&lt;br&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br&gt;&lt;br&gt; TRANSACTION_ID&lt;br&gt; SEQUENCE_NUMBER&lt;br&gt; OPERATION_TYPE&lt;br&gt; OPERATION_TYPE_DESC</column>
  </table>
  <table name="sys.all_objects" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-objects-transact-sql?view=sql-server-ver15">
    <description>Shows the UNION of all schema-scoped user-defined objects and system objects.</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, another owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br&gt;&lt;br&gt; Is NULL if there is no alternative individual owner.&lt;br&gt;&lt;br&gt; Is NULL if the object type is one of the following:&lt;br&gt;&lt;br&gt; C = CHECK constraint&lt;br&gt;&lt;br&gt; D = DEFAULT (constraint or stand-alone)&lt;br&gt;&lt;br&gt; F = FOREIGN KEY constraint&lt;br&gt;&lt;br&gt; PK = PRIMARY KEY constraint&lt;br&gt;&lt;br&gt; R = Rule (old-style, stand-alone)&lt;br&gt;&lt;br&gt; TA = Assembly (CLR) trigger&lt;br&gt;&lt;br&gt; TR = SQL trigger&lt;br&gt;&lt;br&gt; UQ = UNIQUE constraint</column>
    <column name="schema_id" type="int">ID of the schema that contains the object.&lt;br&gt;&lt;br&gt; For all schema scoped system objects that are included with SQL Server, this value is always in (schema_id('sys'), schema_id('INFORMATION_SCHEMA')).</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br&gt;&lt;br&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br&gt;&lt;br&gt; AF = Aggregate function (CLR)&lt;br&gt;&lt;br&gt; C = CHECK constraint&lt;br&gt;&lt;br&gt; D = DEFAULT (constraint or stand-alone)&lt;br&gt;&lt;br&gt; F = FOREIGN KEY constraint&lt;br&gt;&lt;br&gt; FN = SQL scalar function&lt;br&gt;&lt;br&gt; FS = Assembly (CLR) scalar-function&lt;br&gt;&lt;br&gt; FT = Assembly (CLR) table-valued function&lt;br&gt;&lt;br&gt; IF = SQL inline table-valued function&lt;br&gt;&lt;br&gt; IT = Internal table&lt;br&gt;&lt;br&gt; P = SQL Stored Procedure&lt;br&gt;&lt;br&gt; PC = Assembly (CLR) stored-procedure&lt;br&gt;&lt;br&gt; PG = Plan guide&lt;br&gt;&lt;br&gt; PK = PRIMARY KEY constraint&lt;br&gt;&lt;br&gt; R = Rule (old-style, stand-alone)&lt;br&gt;&lt;br&gt; RF = Replication-filter-procedure&lt;br&gt;&lt;br&gt; S = System base table&lt;br&gt;&lt;br&gt; SN = Synonym&lt;br&gt;&lt;br&gt; SO = Sequence object&lt;br&gt;&lt;br&gt; SQ = Service queue&lt;br&gt;&lt;br&gt; TA = Assembly (CLR) DML trigger&lt;br&gt;&lt;br&gt; TF = SQL table-valued-function&lt;br&gt;&lt;br&gt; TR = SQL DML trigger&lt;br&gt;&lt;br&gt; TT = Table type&lt;br&gt;&lt;br&gt; U = Table (user-defined)&lt;br&gt;&lt;br&gt; UQ = UNIQUE constraint&lt;br&gt;&lt;br&gt; V = View&lt;br&gt;&lt;br&gt; X = Extended stored procedure</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type. AGGREGATE_FUNCTION&lt;br&gt;&lt;br&gt; CHECK_CONSTRAINT&lt;br&gt;&lt;br&gt; DEFAULT_CONSTRAINT&lt;br&gt;&lt;br&gt; FOREIGN_KEY_CONSTRAINT&lt;br&gt;&lt;br&gt; SQL_SCALAR_FUNCTION&lt;br&gt;&lt;br&gt; CLR_SCALAR_FUNCTION&lt;br&gt;&lt;br&gt; CLR_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; INTERNAL_TABLE&lt;br&gt;&lt;br&gt; SQL_STORED_PROCEDURE&lt;br&gt;&lt;br&gt; CLR_STORED_PROCEDURE&lt;br&gt;&lt;br&gt; PLAN_GUIDE&lt;br&gt;&lt;br&gt; PRIMARY_KEY_CONSTRAINT&lt;br&gt;&lt;br&gt; RULE&lt;br&gt;&lt;br&gt; REPLICATION_FILTER_PROCEDURE&lt;br&gt;&lt;br&gt; SYSTEM_TABLE&lt;br&gt;&lt;br&gt; SYNONYM&lt;br&gt;&lt;br&gt; SERVICE_QUEUE&lt;br&gt;&lt;br&gt; CLR_TRIGGER&lt;br&gt;&lt;br&gt; SQL_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; SQL_TRIGGER&lt;br&gt;&lt;br&gt; TABLE_TYPE&lt;br&gt;&lt;br&gt; USER_TABLE&lt;br&gt;&lt;br&gt; UNIQUE_CONSTRAINT&lt;br&gt;&lt;br&gt; VIEW&lt;br&gt;&lt;br&gt; EXTENDED_STORED_PROCEDURE</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or modified.</column>
    <column name="is_ms_shipped" type="bit">Object created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
  </table>
  <table name="sys.all_parameters" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-parameters-transact-sql?view=sql-server-ver15">
    <description>Shows the union of all parameters that belong to user-defined or system objects.</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="name" type="sysname">Name of parameter. Is unique within the object. If the object is a scalar function, the parameter name is an empty string in the row representing the return value.</column>
    <column name="parameter_id" type="int">ID of parameter. Is unique within the object. If the object is a scalar function, &lt;strong&gt;parameter_id&lt;/strong&gt; = 0 represents the return value.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter.</column>
    <column name="user_type_id" type="int">ID of the type of the parameter as defined by the user.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter, in bytes.&lt;br&gt;&lt;br&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="precision" type="tinyint">Precision of the parameter if it is numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if it is numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is output (or return); otherwise, 0.</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor reference parameter.</column>
    <column name="has_default_value" type="bit">1 = Parameter has a default value.&lt;br&gt;&lt;br&gt; SQL Server only maintains default values for CLR objects in this catalog view; therefore, this column will always have a value of 0 for Transact-SQL objects. To view the default value of a parameter in a Transact-SQL object, query the &lt;strong&gt;definition&lt;/strong&gt; column of the &lt;a href="sys-sql-modules-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.sql_modules&lt;/a&gt; catalog view, or use the &lt;a href="../../t-sql/functions/object-definition-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;OBJECT_DEFINITION&lt;/a&gt; system function.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br&gt;&lt;br&gt; 0 = Content is a document fragment or the data type of the column is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="default_value" type="sql_variant">If &lt;strong&gt;has_default_value&lt;/strong&gt; is 1, the value of this column is the value of the default for the parameter; otherwise &lt;code&gt;NULL&lt;/code&gt;.</column>
    <column name="xml_collection_id" type="int">Is the ID of the XML schema collection used to validate the parameter.&lt;br&gt;&lt;br&gt; Nonzero if the data type of the parameter is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed.&lt;br&gt;&lt;br&gt; 0 = There is no XML schema collection, or the parameter is not XML.</column>
    <column name="is_readonly" type="bit">1 =  Parameter is READONLY; otherwise, 0.</column>
    <column name="is_nullable" type="bit">1 = Parameter is nullable. (the default).&lt;br&gt;&lt;br&gt; 0 = Parameter is not nullable, for more efficient execution of natively-compiled stored procedures.</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type:&lt;br&gt;&lt;br&gt; 1 = Deterministic encryption&lt;br&gt;&lt;br&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type description:&lt;br&gt;&lt;br&gt; RANDOMIZED&lt;br&gt;&lt;br&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Name of encryption algorithm.&lt;br&gt;&lt;br&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; The name of the database where the column encryption key exists if different than the database of the column. Is &lt;code&gt;NULL&lt;/code&gt; if the key exists in the same database as the column.</column>
  </table>
  <table name="sys.all_sql_modules" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-sql-modules-transact-sql?view=sql-server-ver15">
    <description>Returns the union of &lt;strong&gt;sys.sql_modules&lt;/strong&gt; and &lt;strong&gt;sys.system_sql_modules&lt;/strong&gt;.</description>
    <column name="object_id" type="int">ID of the object of the containing object. Is unique within a database.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module.&lt;br&gt;&lt;br&gt; NULL = Encrypted</column>
    <column name="uses_ansi_nulls" type="bit">Module was created with SET ANSI_NULLS ON.</column>
    <column name="uses_quoted_identifier" type="bit">Module was created with SET QUOTED_IDENTIFIER ON.</column>
    <column name="is_schema_bound" type="bit">Module was created with the SCHEMABINDING option.</column>
    <column name="uses_database_collation" type="bit">1 = Schema-bound module definition depends on the default-collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the default collation of the database.</column>
    <column name="is_recompiled" type="bit">Procedure was created using the WITH RECOMPILE option.</column>
    <column name="null_on_null_input" type="bit">Module was declared to produce a NULL output on any NULL input.</column>
    <column name="execute_as_principal_id" type="int">ID of the EXECUTE AS database principal.&lt;br&gt;&lt;br&gt; NULL by default or if EXECUTE AS CALLER.&lt;br&gt;&lt;br&gt; ID of the specified principal if EXECUTE AS SELF or EXECUTE AS &amp;lt;principal&amp;gt;.&lt;br&gt;&lt;br&gt; -2 = EXECUTE AS OWNER.</column>
    <column name="uses_native_compilation" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br&gt;&lt;br&gt; 0 = not natively compiled&lt;br&gt;&lt;br&gt; 1 = is natively compiled&lt;br&gt;&lt;br&gt; The default value is 0.</column>
  </table>
  <table name="sys.all_views" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-views-transact-sql?view=sql-server-ver15">
    <description>Shows the UNION of all user-defined and system views.</description>
    <column name="&amp;lt;inherited columns&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_replicated" type="bit">1 = View is replicated.</column>
    <column name="has_replication_filter" type="bit">1 = View has a replication filter.</column>
    <column name="has_opaque_metadata" type="bit">1 = VIEW_METADATA option specified for view. For more information, see &lt;a href="../../t-sql/statements/create-view-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE VIEW (Transact-SQL)&lt;/a&gt;.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = Table contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Resets to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="with_check_option" type="bit">1 = WITH CHECK OPTION was specified in the view definition.</column>
    <column name="is_date_correlation_view" type="bit">1 = View was created automatically by the system to store correlation information between datetime columns. Creation of this view was enabled by setting DATE_CORRELATION_OPTIMIZATION to &lt;strong&gt;ON&lt;/strong&gt;.</column>
  </table>
  <table name="sys.allocation_units" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-allocation-units-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each allocation unit in the database.</description>
    <column name="allocation_unit_id" type="bigint">ID of the allocation unit. Is unique within a database.</column>
    <column name="type" type="tinyint">Type of allocation unit:&lt;br&gt;&lt;br&gt; 0 = Dropped&lt;br&gt;&lt;br&gt; 1 = In-row data (all data types, except LOB data types)&lt;br&gt;&lt;br&gt; 2 = Large object (LOB) data (&lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;ntext&lt;/strong&gt;, &lt;strong&gt;image&lt;/strong&gt;, &lt;strong&gt;xml&lt;/strong&gt;, large value types, and CLR user-defined types)&lt;br&gt;&lt;br&gt; 3 = Row-overflow data</column>
    <column name="type_desc" type="nvarchar(60)">Description of the allocation unit type:&lt;br&gt;&lt;br&gt; &lt;strong&gt;DROPPED&lt;/strong&gt;&lt;br&gt;&lt;br&gt; &lt;strong&gt;IN_ROW_DATA&lt;/strong&gt;&lt;br&gt;&lt;br&gt; &lt;strong&gt;LOB_DATA&lt;/strong&gt;&lt;br&gt;&lt;br&gt; &lt;strong&gt;ROW_OVERFLOW_DATA&lt;/strong&gt;</column>
    <column name="container_id" type="bigint">ID of the storage container associated with the allocation unit.&lt;br&gt;&lt;br&gt; If type = 1 or 3 in a rowstore index container_id = sys.partitions.hobt_id.&lt;br&gt;&lt;br&gt; If type = 1 or 3 in a columnstore index, container_id = sys.column_store_row_groups.delta_store_hobt_id.&lt;br&gt;&lt;br&gt; If type is 2, then container_id = sys.partitions.partition_id.&lt;br&gt;&lt;br&gt; 0 = Allocation unit marked for deferred drop</column>
    <column name="data_space_id" type="int">ID of the filegroup in which this allocation unit resides.</column>
    <column name="total_pages" type="bigint">Total number of pages allocated or reserved by this allocation unit.</column>
    <column name="used_pages" type="bigint">Number of total pages actually in use.</column>
    <column name="data_pages" type="bigint">Number of used pages that have:&lt;br&gt;&lt;br&gt; In-row data&lt;br&gt;&lt;br&gt; LOB data&lt;br&gt;&lt;br&gt; Row-overflow data&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; Note that the value returned excludes internal index pages and allocation-management pages.</column>
  </table>
  <table name="sys.assembly_modules" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-modules-transact-sql?view=sql-server-ver15">
    <description>Returns one row for each function, procedure or trigger that is defined by a common language runtime (CLR) assembly. This catalog view maps CLR stored procedures, CLR triggers, or CLR functions to their underlying implementation. Objects of type TA, AF, PC, FS, and FT have an associated assembly module. To find the association between the object and the assembly, you can join this catalog view to other catalog views. For example, when you create a CLR stored procedure, it is represented by one row in &lt;strong&gt;sys.objects&lt;/strong&gt;, one row in &lt;strong&gt;sys.procedures&lt;/strong&gt; (which inherits from &lt;strong&gt;sys.objects&lt;/strong&gt;), and one row in &lt;strong&gt;sys.assembly_modules&lt;/strong&gt;. The stored procedure itself is represented by the metadata in &lt;strong&gt;sys.objects&lt;/strong&gt; and &lt;strong&gt;sys.procedures&lt;/strong&gt;. References to the procedure's underlying CLR implementation are found in &lt;strong&gt;sys.assembly_modules&lt;/strong&gt;.</description>
    <column name="object_id" type="int">Object identification number of the SQL object. Is unique within a database.</column>
    <column name="assembly_id" type="int">ID of the assembly from which this module was created.</column>
    <column name="assembly_class" type="sysname">Name of the class within the assembly that defines this module.</column>
    <column name="assembly_method" type="sysname">Name of the method within the &lt;strong&gt;assembly_class&lt;/strong&gt; that defines this module.&lt;br&gt;&lt;br&gt; NULL for aggregate functions (AF).</column>
    <column name="null_on_null_input" type="bit">Module was declared to produce a NULL output for any NULL input.</column>
    <column name="execute_as_principal_id" type="int">ID of the database principal under which the context execution occurs, as specified by the EXECUTE AS clause of the CLR function, stored procedure, or trigger.&lt;br&gt;&lt;br&gt; NULL = EXECUTE AS CALLER. This is the default.&lt;br&gt;&lt;br&gt; ID of the specified database principal = EXECUTE AS SELF, EXECUTE AS &lt;em&gt;user_name&lt;/em&gt;, or EXECUTE AS &lt;em&gt;login_name&lt;/em&gt;.&lt;br&gt;&lt;br&gt; -2 = EXECUTE AS OWNER.</column>
  </table>
  <table name="sys.check_constraints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each object that is a CHECK constraint, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = 'C'.</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_disabled" type="bit">CHECK constraint is disabled.</column>
    <column name="is_not_for_replication" type="bit">CHECK constraint was created with the NOT FOR REPLICATION option.</column>
    <column name="is_not_trusted" type="bit">CHECK constraint has not been verified by the system for all rows.</column>
    <column name="parent_column_id" type="int">0 indicates a table-level CHECK constraint.&lt;br&gt;&lt;br&gt; Non-zero value indicates that this is a column-level CHECK constraint defined on the column with the specified ID value.</column>
    <column name="definition" type="nvarchar(max)">SQL expression that defines this CHECK constraint.</column>
    <column name="uses_database_collation" type="bit">1 = The constraint definition depends on the default collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the database default collation.</column>
    <column name="is_system_named" type="bit">1 = Name was generated by system.&lt;br&gt;&lt;br&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.column_store_dictionaries" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-dictionaries-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each dictionary used in xVelocity memory optimized columnstore indexes. Dictionaries are used to encode some, but not all data types, therefore not all columns in a columnstore index have dictionaries. A dictionary can exist as a primary dictionary (for all segments) and possibly for other secondary dictionaries used for a subset of the column's segments.</description>
    <column name="hobt_id" type="bigint">ID of the heap or B-tree index (HoBT) for the table that has this columnstore index.</column>
    <column name="column_id" type="int">ID of the columnstore column starting with 1. The first column has ID = 1, the second column has ID = 2, etc.</column>
    <column name="dictionary_id" type="int">There can be two kinds of dictionaries, global and local, associated with a column segment. A dictionary_id of 0 represents the global dictionary that is shared across all column segments (one for each row group) for that column.</column>
    <column name="version" type="int">Version of the dictionary format.</column>
    <column name="type" type="int">Dictionary type:&lt;br&gt;&lt;br&gt; 1 - Hash dictionary containing &lt;strong&gt;int&lt;/strong&gt; values&lt;br&gt;&lt;br&gt; 2 - Not used&lt;br&gt;&lt;br&gt; 3 - Hash dictionary containing string values&lt;br&gt;&lt;br&gt; 4 - Hash dictionary containing &lt;strong&gt;float&lt;/strong&gt; values&lt;br&gt;&lt;br&gt; For more information about dictionaries, see &lt;a href="../indexes/columnstore-indexes-overview?view=sql-server-ver15" data-linktype="relative-path"&gt;Columnstore Indexes Guide&lt;/a&gt;.</column>
    <column name="last_id" type="int">The last data ID in the dictionary.</column>
    <column name="entry_count" type="bigint">Number of entries in the dictionary.</column>
    <column name="on_disk_size" type="bigint">Size of dictionary in bytes.</column>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
  </table>
  <table name="sys.column_store_row_groups" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-row-groups-transact-sql?view=sql-server-ver15">
    <description>Provides clustered columnstore index information on a per-segment basis to help the administrator make system management decisions. &lt;strong&gt;sys.column_store_row_groups&lt;/strong&gt; has a column for the total number of rows physically stored (including those marked as deleted) and a column for the number of rows marked as deleted. Use &lt;strong&gt;sys.column_store_row_groups&lt;/strong&gt; to determine which row groups have a high percentage of deleted rows and should be rebuilt.</description>
    <column name="object_id" type="int">The id of the table on which this index is defined.</column>
    <column name="index_id" type="int">ID of the index for the table that has this columnstore index.</column>
    <column name="partition_number" type="int">ID of the table partition that holds row group row_group_id. You can use partition_number to join this DMV to sys.partitions.</column>
    <column name="row_group_id" type="int">The row group number associated with this row group. This is unique within the partition.&lt;br&gt;&lt;br&gt; -1 = tail of an in-memory table.</column>
    <column name="delta_store_hobt_id" type="bigint">The hobt_id for OPEN row group in the delta store.&lt;br&gt;&lt;br&gt; NULL if the row group is not in the delta store.&lt;br&gt;&lt;br&gt; NULL for the tail of an in-memory table.</column>
    <column name="state" type="tinyint">ID number associated with the state_description.&lt;br&gt;&lt;br&gt; 0 = INVISIBLE&lt;br&gt;&lt;br&gt; 1 = OPEN&lt;br&gt;&lt;br&gt; 2 = CLOSED&lt;br&gt;&lt;br&gt; 3 = COMPRESSED &lt;br&gt;&lt;br&gt; 4 = TOMBSTONE</column>
    <column name="state_description" type="nvarchar(60)">Description of the persistent state of the row group:&lt;br&gt;&lt;br&gt; INVISIBLE -A hidden compressed segment in the process of being built from data in a delta store. Read actions will use the delta store until the invisible compressed segment is completed. Then the new segment is made visible, and the source delta store is removed.&lt;br&gt;&lt;br&gt; OPEN - A read/write row group that is accepting new records. An open row group is still in rowstore format and has not been compressed to columnstore format.&lt;br&gt;&lt;br&gt; CLOSED - A row group that has been filled, but not yet compressed by the tuple mover process.&lt;br&gt;&lt;br&gt; COMPRESSED - A row group that has filled and compressed.</column>
    <column name="total_rows" type="bigint">Total rows physically stored in the row group. Some may have been deleted but they are still stored. The maximum number of rows in a row group is 1,048,576 (hexadecimal FFFFF).</column>
    <column name="deleted_rows" type="bigint">Total rows in the row group marked deleted. This is always 0 for DELTA row groups.</column>
    <column name="size_in_bytes" type="bigint">Size in bytes of all the data in this row group (not including metadata or shared dictionaries), for both DELTA and COLUMNSTORE rowgroups.</column>
  </table>
  <table name="sys.column_store_segments" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-segments-transact-sql?view=sql-server-ver15">
    <description>Returns one row for each column segment in a columnstore index. There is one column segment per column per rowgroup. For example, a table with 10 rowgroups and 34 columns returns 340 rows.</description>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
    <column name="hobt_id" type="bigint">ID of the heap or B-tree index (HoBT) for the table that has this columnstore index.</column>
    <column name="column_id" type="int">ID of the columnstore column.</column>
    <column name="segment_id" type="int">ID of the rowgroup. For backward compatibility, the column name continues to be called segment_id even though this is the rowgroup ID. You can uniquely identify a segment using &amp;lt;hobt_id, partition_id, column_id&amp;gt;, &amp;lt;segment_id&amp;gt;.</column>
    <column name="version" type="int">Version of the column segment format.</column>
    <column name="encoding_type" type="int">Type of encoding used for that segment:&lt;br&gt;&lt;br&gt; 1 = VALUE_BASED - non-string/binary with no dictionary (similar to 4 with some internal variations)&lt;br&gt;&lt;br&gt; 2 = VALUE_HASH_BASED - non-string/binary column with common values in dictionary&lt;br&gt;&lt;br&gt; 3 = STRING_HASH_BASED - string/binary column with common values in dictionary&lt;br&gt;&lt;br&gt; 4 = STORE_BY_VALUE_BASED - non-string/binary with no dictionary&lt;br&gt;&lt;br&gt; 5 = STRING_STORE_BY_VALUE_BASED - string/binary with no dictionary&lt;br&gt;&lt;br&gt; For more information, see the &lt;a href="#remarks" data-linktype="self-bookmark"&gt;Remarks&lt;/a&gt; section.</column>
    <column name="row_count" type="int">Number of rows in the row group.</column>
    <column name="has_nulls" type="int">1 if the column segment has null values.</column>
    <column name="base_id" type="bigint">Base value ID if encoding type 1 is being used. If encoding type 1 is not being used, base_id is set to -1.</column>
    <column name="magnitude" type="float">Magnitude if encoding type 1 is being used. If encoding type 1 is not being used, magnitude is set to -1.</column>
    <column name="primary_dictionary_id" type="int">A value of 0 represents the global dictionary. A value of -1 indicates that there is no global dictionary created for this column.</column>
    <column name="secondary_dictionary_id" type="int">A non-zero value points to the local dictionary for this column in the current segment (i.e. the rowgroup). A value of -1 indicates that there is no local dictionary for this segment.</column>
    <column name="min_data_id" type="bigint">Minimum data ID in the column segment.</column>
    <column name="max_data_id" type="bigint">Maximum data ID in the column segment.</column>
    <column name="null_value" type="bigint">Value used to represent nulls.</column>
    <column name="on_disk_size" type="bigint">Size of segment in bytes.</column>
  </table>
  <table name="sys.columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-columns-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each column of an object that has columns, such as views or tables. The following is a list of object types that have columns:</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br&gt;&lt;br&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the column.</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the column.&lt;br&gt;&lt;br&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; For &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;ntext&lt;/strong&gt;, and &lt;strong&gt;image&lt;/strong&gt; columns, the max_length value will be 16 (representing the 16-byte pointer only) or the value set by sp_tableoption 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise &lt;code&gt;NULL&lt;/code&gt;.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br&gt;&lt;br&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is a FILESTREAM column.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br&gt;&lt;br&gt; 0 = Content is a document fragment or the column data type is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="xml_collection_id" type="int">Nonzero if the data type of the column is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the validating XML schema namespace of the column.&lt;br&gt;&lt;br&gt; 0 = No XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone object &lt;a href="../system-stored-procedures/sp-bindefault-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.sp_bindefault&lt;/a&gt;, or an inline, column-level DEFAULT constraint. The parent_object_id column of an inline column-level default object is a reference back to the table itself.&lt;br&gt;&lt;br&gt; 0 = No default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using sys.sp_bindrule.&lt;br&gt;&lt;br&gt; 0 = No stand-alone rule. For column-level CHECK constraints, see &lt;a href="sys-check-constraints-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href="../tables/use-sparse-columns?view=sql-server-ver15" data-linktype="relative-path"&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href="../tables/use-sparse-columns?view=sql-server-ver15" data-linktype="relative-path"&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br&gt;&lt;br&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br&gt;&lt;br&gt; 0 = NOT_APPLICABLE&lt;br&gt; 1 = AS_ROW_START&lt;br&gt; 2 = AS_ROW_END&lt;br&gt;7 = AS_TRANSACTION_ID_START&lt;br&gt;8 = AS_TRANSACTION_ID_END&lt;br&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../tables/temporal-tables?view=sql-server-ver15" data-linktype="relative-path"&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Textual description of &lt;code&gt;generated_always_type&lt;/code&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br&gt;&lt;br&gt; NOT_APPLICABLE&lt;br&gt; AS_ROW_START&lt;br&gt; AS_ROW_END&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br&gt;&lt;br&gt;AS_TRANSACTION_ID_START&lt;br&gt;AS_TRANSACTION_ID_END&lt;br&gt;AS_SEQUENCE_NUMBER_START&lt;br&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type:&lt;br&gt;&lt;br&gt; 1 = Deterministic encryption&lt;br&gt;&lt;br&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type description:&lt;br&gt;&lt;br&gt; RANDOMIZED&lt;br&gt;&lt;br&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Name of encryption algorithm.&lt;br&gt;&lt;br&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; The name of the database where the column encryption key exists if different than the database of the column. &lt;code&gt;NULL&lt;/code&gt; if the key exists in the same database as the column.</column>
    <column name="is_hidden" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Indicates if the column is hidden:&lt;br&gt;&lt;br&gt; 0 = regular, not-hidden, visible column&lt;br&gt;&lt;br&gt; 1 = hidden column</column>
    <column name="is_masked" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Indicates if the column is masked by a dynamic data masking:&lt;br&gt;&lt;br&gt; 0 = regular, not-masked column&lt;br&gt;&lt;br&gt; 1 = column is masked</column>
    <column name="graph_type" type="int">Internal column with a set of values. The values are between 1-8 for graph columns and &lt;code&gt;NULL&lt;/code&gt; for others.</column>
    <column name="graph_type_desc" type="nvarchar(60)">internal column with a set of values</column>
    <column name="is_data_deletion_filter_column" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database Edge. Indicates if the column is the data retention filter column for the table.</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br&gt;&lt;br&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br&gt;&lt;br&gt; 1 = TRANSACTION_ID&lt;br&gt; 2 = SEQUENCE_NUMBER&lt;br&gt; 3 = OPERATION_TYPE&lt;br&gt; 4 = OPERATION_TYPE_DESC&lt;br&gt;&lt;br&gt;For more information on database ledger, see &lt;a href="/en-us/azure/azure-sql/database/ledger-overview" data-linktype="absolute-path"&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br&gt;&lt;br&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br&gt;&lt;br&gt; TRANSACTION_ID&lt;br&gt; SEQUENCE_NUMBER&lt;br&gt; OPERATION_TYPE&lt;br&gt; OPERATION_TYPE_DESC</column>
  </table>
  <table name="sys.computed_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-computed-columns-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each column found in &lt;strong&gt;sys.columns&lt;/strong&gt; that is a computed-column.</description>
    <column name="&amp;lt;Inherited columns&amp;gt;" type="">The &lt;strong&gt;sys.computed_columns&lt;/strong&gt; view returns all columns in the &lt;strong&gt;sys.columns&lt;/strong&gt; view. It also returns the additional columns described below. For a description of the columns that the &lt;strong&gt;sys.computed_columns&lt;/strong&gt; view inherits from &lt;strong&gt;sys.columns&lt;/strong&gt;, see &lt;a href="sys-columns-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.columns (Transact-SQL)&lt;/a&gt;. The value of the &lt;strong&gt;is_computed&lt;/strong&gt; column is always set to 1 in the &lt;strong&gt;sys.computed_columns&lt;/strong&gt; view.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this computed-column.</column>
    <column name="uses_database_collation" type="bit">1 = The column definition depends on the default collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the database default collation.</column>
    <column name="is_persisted" type="bit">Computed column is persisted.</column>
  </table>
  <table name="sys.default_constraints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-default-constraints-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each object that is a default definition (created as part of a CREATE TABLE or ALTER TABLE statement instead of a CREATE DEFAULT statement), with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = D.</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="parent_column_id" type="int">ID of the column in &lt;strong&gt;parent_object_id&lt;/strong&gt; to which this default belongs.</column>
    <column name="definition" type="nvarchar(max)">SQL expression that defines this default.</column>
    <column name="is_system_named" type="bit">1 = Name was generated by system.&lt;br&gt;&lt;br&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.events" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-events-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each event for which a trigger or event notification fires. These events represent the event types that are specified when the trigger or event notification is created by using &lt;a href="../../t-sql/statements/create-trigger-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE TRIGGER&lt;/a&gt; or &lt;a href="../../t-sql/statements/create-event-notification-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE EVENT NOTIFICATION&lt;/a&gt;.</description>
    <column name="object_id" type="int">ID of the trigger or event notification. This value, together with &lt;strong&gt;type&lt;/strong&gt;, uniquely identifies the row.</column>
    <column name="type" type="int">Event that causes the trigger to fire.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the event that causes the trigger to fire.</column>
    <column name="is_trigger_event" type="bit">1 = Trigger event.&lt;br&gt;&lt;br&gt; 0 = Notification event.</column>
    <column name="event_group_type" type="int">Event group on which the trigger or event notification is created, or null if not created on an event group.</column>
    <column name="event_group_type_desc" type="nvarchar(60)">Description of the event group on which the trigger or event notification is created, or null if not created on an event group.</column>
  </table>
  <table name="sys.event_notifications" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-notifications-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each object that is an event notification, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = EN.</description>
    <column name="name" type="sysname">Event notification name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="parent_class" type="tinyint">Class of parent.&lt;br&gt;&lt;br&gt; 0 = Database&lt;br&gt;&lt;br&gt; 1 = Object or Column</column>
    <column name="parent_class_desc" type="nvarchar(60)">DATABASE&lt;br&gt;&lt;br&gt; OBJECT_OR_COLUMN</column>
    <column name="parent_id" type="int">Non-zero ID of the parent object.&lt;br&gt;&lt;br&gt; 0 = The parent class is the database.</column>
    <column name="create_date" type="datetime">Date created.</column>
    <column name="modify_date" type="datetime">Always equals &lt;strong&gt;create_date&lt;/strong&gt;.</column>
    <column name="service_name" type="nvarchar(256)">Name of the target service to which the notification is sent.</column>
    <column name="broker_instance" type="nvarchar(128)">Broker instance to which the notification is sent.</column>
    <column name="principal_id" type="int">ID of the database principal that owns this event notification.</column>
    <column name="creator_sid" type="varbinary(85)">SID of the login who created the event notification.&lt;br&gt;&lt;br&gt; Is NULL if the FAN_IN option is not specified.</column>
  </table>
  <table name="sys.event_notification_event_types" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-notification-event-types-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each event or event group on which an event notification can fire.</description>
    <column name="type" type="int">Type of event or event group that causes an event notification to fire.</column>
    <column name="type_name" type="nvarchar(128)">Name of an event or event group. This can be specified in the FOR clause of a &lt;a href="../../t-sql/statements/create-event-notification-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE EVENT NOTIFICATION&lt;/a&gt; statement.</column>
    <column name="parent_type" type="int">Type of event group that is the parent of the event or event group.</column>
  </table>
  <table name="sys.extended_procedures" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-extended-procedures-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each object that is an extended stored procedure, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = X. Because extended stored procedures are installed into the &lt;strong&gt;master&lt;/strong&gt; database, they are only visible from that database context. Selecting from the &lt;strong&gt;sys.extended_procedures&lt;/strong&gt; view in any other database context will return an empty result set.</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="dll_name" type="nvarchar(260)">Name, including path, of the DLL for this extended stored procedure.</column>
  </table>
  <table name="sys.external_language_files" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-language-files-transact-sql?view=sql-server-ver15">
    <description>This catalog view provides a list of the external language extension files in the database. &lt;strong&gt;R&lt;/strong&gt; and &lt;strong&gt;Python&lt;/strong&gt; are reserved names and no external language can be created with those specific names.</description>
    <column name="external_language_id" type="int">ID of the external language</column>
    <column name="content" type="varbinary(max)">Content of the external language extension file</column>
    <column name="file_name" type="sysname">Name of the language extension file</column>
    <column name="platform" type="tinyint">ID of the host platform on which SQL Server is installed</column>
    <column name="platform_desc" type="nvarchar(60)">Name of the host platform. Valid values are &lt;code&gt;WINDOWS&lt;/code&gt;, &lt;code&gt;LINUX&lt;/code&gt;.</column>
    <column name="parameters" type="sysname">External language parameters</column>
    <column name="environment_variables" type="sysname">External language environment variables</column>
  </table>
  <table name="sys.external_languages" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-languages-transact-sql?view=sql-server-ver15">
    <description>This catalog view provides a list of the external languages in the database. &lt;strong&gt;R&lt;/strong&gt; and &lt;strong&gt;Python&lt;/strong&gt; are reserved names and no external language can be created with those specific names.</description>
    <column name="external_language_id" type="int">ID of the external language</column>
    <column name="language" type="sysname">Name of the external language. Is unique within the database. R and Python are reserved names per instance</column>
    <column name="create_date" type="datetime2">Date and time of creation</column>
    <column name="principal_id" type="int">ID of the principal that owns this external library</column>
  </table>
  <table name="sys.external_libraries" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-libraries-transact-sql?view=sql-server-ver15">
    <description>Supports the management of package libraries related to external runtimes such as R, Python, and Java.</description>
    <column name="external_library_id" type="int">ID of the external library object.</column>
    <column name="name" type="sysname">Name of the external library. Is unique within the database per owner.</column>
    <column name="principal_id" type="int">ID of the principal that owns this external library.</column>
    <column name="language" type="sysname">Name of the language or runtime that supports the external library. Valid values are 'R', 'Python', and 'Java'. Additional runtimes might be added in future.</column>
    <column name="scope" type="int">0 for public scope; 1 for private scope</column>
    <column name="scope_desc" type="varchar(7)">Indicates whether the package is public or private</column>
  </table>
  <table name="sys.external_library_files" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-library-files-transact-sql?view=sql-server-ver15">
    <description>Lists a row for each file that makes up an external library.</description>
    <column name="external_library_id" type="int">ID of the external library object.</column>
    <column name="content" type="varbinary(max)">Content of the external library file artifact.</column>
    <column name="platform" type="tinyint">ID of the host platform on which SQL Server is installed.</column>
    <column name="platform_desc" type="nvarchar(60)">Name of the host platform. Valid values are &lt;code&gt;WINDOWS&lt;/code&gt;, &lt;code&gt;LINUX&lt;/code&gt;.</column>
  </table>
  <table name="sys.foreign_keys" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-foreign-keys-transact-sql?view=sql-server-ver15">
    <description>Contains a row per object that is a FOREIGN KEY constraint, with &lt;strong&gt;sys.object.type&lt;/strong&gt; = F.</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="referenced_object_id" type="int">ID of the referenced object.</column>
    <column name="key_index_id" type="int">ID of the key index within the referenced object.</column>
    <column name="is_disabled" type="bit">FOREIGN KEY constraint is disabled.</column>
    <column name="is_not_for_replication" type="bit">FOREIGN KEY constraint was created by using the NOT FOR REPLICATION option.</column>
    <column name="is_not_trusted" type="bit">FOREIGN KEY constraint has not been verified by the system.</column>
    <column name="delete_referential_action" type="tinyint">The referential action that was declared for this FOREIGN KEY when a delete happens.&lt;br&gt;&lt;br&gt; 0 = No action&lt;br&gt;&lt;br&gt; 1 = Cascade&lt;br&gt;&lt;br&gt; 2 = Set null&lt;br&gt;&lt;br&gt; 3 = Set default</column>
    <column name="delete_referential_action_desc" type="nvarchar(60)">Description of the referential action that was declared for this FOREIGN KEY when a delete occurs:&lt;br&gt;&lt;br&gt; NO_ACTION&lt;br&gt;&lt;br&gt; CASCADE&lt;br&gt;&lt;br&gt; SET_NULL&lt;br&gt;&lt;br&gt; SET_DEFAULT</column>
    <column name="update_referential_action" type="tinyint">The referential action that was declared for this FOREIGN KEY when an update happens.&lt;br&gt;&lt;br&gt; 0 = No action&lt;br&gt;&lt;br&gt; 1 = Cascade&lt;br&gt;&lt;br&gt; 2 = Set null&lt;br&gt;&lt;br&gt; 3 = Set default</column>
    <column name="update_referential_action_desc" type="nvarchar(60)">Description of the referential action that was declared for this FOREIGN KEY when an update happens:&lt;br&gt;&lt;br&gt; NO_ACTION&lt;br&gt;&lt;br&gt; CASCADE&lt;br&gt;&lt;br&gt; SET_NULL&lt;br&gt;&lt;br&gt; SET_DEFAULT</column>
    <column name="is_system_named" type="bit">1 = Name was generated by the system.&lt;br&gt;&lt;br&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.foreign_key_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-foreign-key-columns-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each column, or set of columns, that comprise a foreign key.</description>
    <column name="constraint_object_id" type="int">ID of the FOREIGN KEY constraint.</column>
    <column name="constraint_column_id" type="int">ID of the column, or set of columns, that comprise the FOREIGN KEY (&lt;em&gt;1..n&lt;/em&gt; where n=number of columns).</column>
    <column name="parent_object_id" type="int">ID of the parent of the constraint, which is the referencing object.</column>
    <column name="parent_column_id" type="int">ID of the parent column, which is the referencing column.</column>
    <column name="referenced_object_id" type="int">ID of the referenced object, which has the candidate key.</column>
    <column name="referenced_column_id" type="int">ID of the referenced column (candidate key column).</column>
  </table>
  <table name="sys.function_order_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-function-order-columns-transact-sql?view=sql-server-ver15">
    <description>Returns one row per column that is a part of an &lt;strong&gt;ORDER&lt;/strong&gt; expression of a common language runtime (CLR) table-valued function.</description>
    <column name="object_id" type="int">ID of the object (CLR table-valued function) the order is defined on.</column>
    <column name="order_column_id" type="int">ID of the order column. &lt;strong&gt;order_column_id&lt;/strong&gt; is unique only within &lt;strong&gt;object_id&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; &lt;strong&gt;order_column_id&lt;/strong&gt; represents the position of this column in the ordering.</column>
    <column name="column_id" type="int">ID of the column in &lt;strong&gt;object_id&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; &lt;strong&gt;column_id&lt;/strong&gt; is unique only within &lt;strong&gt;object_id&lt;/strong&gt;.</column>
    <column name="is_descending" type="bit">1 = order column has a descending sort direction.&lt;br&gt;&lt;br&gt; 0 = order column has an ascending sort direction.</column>
  </table>
  <table name="sys.hash_indexes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql?view=sql-server-ver15">
    <description>Shows the current hash indexes and the hash index properties. Hash indexes are supported only on &lt;a href="../in-memory-oltp/overview-and-usage-scenarios?view=sql-server-ver15" data-linktype="relative-path"&gt;In-Memory OLTP (In-Memory Optimization)&lt;/a&gt;.</description>
    <column name="&amp;lt;inherited columns&amp;gt;" type="">Inherits columns from &lt;a href="sys-indexes-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.indexes (Transact-SQL)&lt;/a&gt;.</column>
    <column name="bucket_count" type="int">Count of hash buckets for hash indexes.&lt;br&gt;&lt;br&gt; For more information about the bucket_count value, including guidelines for setting the value, see &lt;a href="../../t-sql/statements/create-table-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE TABLE (Transact-SQL)&lt;/a&gt;.</column>
  </table>
  <table name="sys.identity_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-identity-columns-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each column that is an identity column.</description>
    <column name="&amp;lt;columns inherited from sys.columns&amp;gt;" type="">The &lt;strong&gt;sys.identity_columns&lt;/strong&gt; view returns all columns in the &lt;strong&gt;sys.columns&lt;/strong&gt; view. It also returns the additional columns described below. For a description of the columns that the &lt;strong&gt;sys.identity_columns&lt;/strong&gt; view inherits from &lt;strong&gt;sys.columns&lt;/strong&gt;, see &lt;a href="sys-columns-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.columns (Transact-SQL)&lt;/a&gt;.</column>
    <column name="seed_value" type="sql_variant">Seed value for this identity column. The data type of the seed value is the same as the data type of the column itself.</column>
    <column name="increment_value" type="sql_variant">Increment value for this identity column. The data type of the seed value is the same as the data type of the column itself.</column>
    <column name="last_value" type="sql_variant">Last value generated for this identity column. The data type of the seed value is the same as the data type of the column itself.</column>
    <column name="is_not_for_replication" type="bit">Identity column is declared NOT FOR REPLICATION. &lt;strong&gt;Note:&lt;/strong&gt; This column does not apply to Azure Synapse Analytics.</column>
  </table>
  <table name="sys.indexes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql?view=sql-server-ver15">
    <description>Contains a row per index or heap of a tabular object, such as a table, view, or table-valued function.</description>
    <column name="object_id" type="int">ID of the object to which this index belongs.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.&lt;br&gt;&lt;br&gt; NULL = Heap</column>
    <column name="index_id" type="int">ID of the index. &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.&lt;br&gt;&lt;br&gt; 0 = Heap&lt;br&gt;&lt;br&gt; 1 = Clustered index&lt;br&gt;&lt;br&gt; &amp;gt; 1 = Nonclustered index</column>
    <column name="type" type="tinyint">Type of index:&lt;br&gt;&lt;br&gt; 0 = Heap&lt;br&gt;&lt;br&gt; 1 = Clustered rowstore (b-tree)&lt;br&gt;&lt;br&gt; 2 = Nonclustered rowstore (b-tree)&lt;br&gt;&lt;br&gt; 3 = XML&lt;br&gt;&lt;br&gt; 4 = Spatial&lt;br&gt;&lt;br&gt; 5 = Clustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br&gt;&lt;br&gt; 6 = Nonclustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br&gt;&lt;br&gt; 7 = Nonclustered hash index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="type_desc" type="nvarchar(60)">Description of index type:&lt;br&gt;&lt;br&gt; HEAP&lt;br&gt;&lt;br&gt; CLUSTERED&lt;br&gt;&lt;br&gt; NONCLUSTERED&lt;br&gt;&lt;br&gt; XML&lt;br&gt;&lt;br&gt; SPATIAL&lt;br&gt;&lt;br&gt; CLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br&gt;&lt;br&gt; NONCLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br&gt;&lt;br&gt; NONCLUSTERED HASH : NONCLUSTERED HASH indexes are supported only on memory-optimized tables. The sys.hash_indexes view shows the current hash indexes and the hash properties. For more information, see &lt;a href="sys-hash-indexes-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.hash_indexes (Transact-SQL)&lt;/a&gt;. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="is_unique" type="bit">1 = Index is unique.&lt;br&gt;&lt;br&gt; 0 = Index is not unique.&lt;br&gt;&lt;br&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="data_space_id" type="int">ID of the data space for this index. Data space is either a filegroup or partition scheme.&lt;br&gt;&lt;br&gt; 0 = &lt;strong&gt;object_id&lt;/strong&gt; is a table-valued function or in-memory index.</column>
    <column name="ignore_dup_key" type="bit">1 = IGNORE_DUP_KEY is ON.&lt;br&gt;&lt;br&gt; 0 = IGNORE_DUP_KEY is OFF.</column>
    <column name="is_primary_key" type="bit">1 = Index is part of a PRIMARY KEY constraint.&lt;br&gt;&lt;br&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_unique_constraint" type="bit">1 = Index is part of a UNIQUE constraint.&lt;br&gt;&lt;br&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="fill_factor" type="tinyint">&amp;gt; 0 = FILLFACTOR percentage used when the index was created or rebuilt.&lt;br&gt;&lt;br&gt; 0 = Default value&lt;br&gt;&lt;br&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_padded" type="bit">1 = PADINDEX is ON.&lt;br&gt;&lt;br&gt; 0 = PADINDEX is OFF.&lt;br&gt;&lt;br&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_disabled" type="bit">1 = Index is disabled.&lt;br&gt;&lt;br&gt; 0 = Index is not disabled.</column>
    <column name="is_hypothetical" type="bit">1 = Index is hypothetical and cannot be used directly as a data access path. Hypothetical indexes hold column-level statistics.&lt;br&gt;&lt;br&gt; 0 = Index is not hypothetical.</column>
    <column name="allow_row_locks" type="bit">1 = Index allows row locks.&lt;br&gt;&lt;br&gt; 0 = Index does not allow row locks.&lt;br&gt;&lt;br&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="allow_page_locks" type="bit">1 = Index allows page locks.&lt;br&gt;&lt;br&gt; 0 = Index does not allow page locks.&lt;br&gt;&lt;br&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="has_filter" type="bit">1 = Index has a filter and only contains rows that satisfy the filter definition.&lt;br&gt;&lt;br&gt; 0 = Index does not have a filter.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in the filtered index.&lt;br&gt;&lt;br&gt; NULL for heap, non-filtered index, or insufficient permissions on the table.</column>
    <column name="compression_delay" type="int">&amp;gt; 0 = Columnstore index compression delay specified in minutes.&lt;br&gt;&lt;br&gt; NULL = Columnstore index rowgroup compression delay is managed automatically.</column>
    <column name="suppress_dup_key_messages" type="bit">1 = Index is configured to suppress duplicate key messages during an index rebuild operation.&lt;br&gt;&lt;br&gt; &lt;strong&gt;0&lt;/strong&gt; = Index is not configured to suppress duplicate key messages during an index rebuild operation.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="auto_created" type="bit">1 = Index was created by the automatic tuning.&lt;br&gt;&lt;br&gt;0 = Index was created by the user.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Index has last-page insert optimization enabled.&lt;br&gt;&lt;br&gt;0 = Default value. Index has last-page insert optimization disabled.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2019 (15.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
  </table>
  <table name="sys.index_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-index-columns-transact-sql?view=sql-server-ver15">
    <description>Contains one row per column that is part of a &lt;strong&gt;sys.indexes&lt;/strong&gt; index or unordered table (heap).</description>
    <column name="object_id" type="int">ID of the object the index is defined on.</column>
    <column name="index_id" type="int">ID of the index in which the column is defined.</column>
    <column name="index_column_id" type="int">ID of the index column. &lt;strong&gt;index_column_id&lt;/strong&gt; is unique only within &lt;strong&gt;index_id&lt;/strong&gt;.</column>
    <column name="column_id" type="int">ID of the column in &lt;strong&gt;object_id&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; 0 = Row Identifier (RID) in a nonclustered index.&lt;br&gt;&lt;br&gt; &lt;strong&gt;column_id&lt;/strong&gt; is unique only within &lt;strong&gt;object_id&lt;/strong&gt;.</column>
    <column name="key_ordinal" type="tinyint">Ordinal (1-based) within set of key-columns.&lt;br&gt;&lt;br&gt; 0 = Not a key column, or is an XML index, a columnstore index, or a spatial index.&lt;br&gt;&lt;br&gt; Note: An XML or spatial index cannot be a key because the underlying columns are not comparable, meaning that their values cannot be ordered.</column>
    <column name="partition_ordinal" type="tinyint">Ordinal (1-based) within set of partitioning columns. A clustered columnstore index can have at most 1 partitioning column.&lt;br&gt;&lt;br&gt; 0 = Not a partitioning column.</column>
    <column name="is_descending_key" type="bit">1 = Index key column has a descending sort direction.&lt;br&gt;&lt;br&gt; 0 = Index key column has an ascending sort direction, or the column is part of a columnstore or hash index.</column>
    <column name="is_included_column" type="bit">1 = Column is a nonkey column added to the index by using the CREATE INDEX INCLUDE clause, or the column is part of a columnstore index.&lt;br&gt;&lt;br&gt; 0 = Column is not an included column.&lt;br&gt;&lt;br&gt; Columns implicitly added because they are part of the clustering key are not listed in &lt;strong&gt;sys.index_columns&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; Columns implicitly added because they are a partitioning column are returned as 0.</column>
    <column name="column_store_order_ordinal" type="tinyint">Ordinal (1-based) within set of order columns in an ordered clustered columnstore index.</column>
  </table>
  <table name="sys.internal_partitions" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-internal-partitions-transact-sql?view=sql-server-ver15">
    <description>Returns one row for each rowset that tracks internal data for columnstore indexes on disk-based tables. These rowsets are internal to columnstore indexes and track deleted rows, rowgroup mappings, and delta store rowgroups. They track data for each for each table partition; every table has at least one partition. SQL Server re-creates the rowsets each time it rebuilds the columnstore index.</description>
    <column name="partition_id" type="bigint">Partition ID for this partition. This is unique within a database.</column>
    <column name="object_id" type="int">Object ID for the table that contains the partition.</column>
    <column name="index_id" type="int">Index ID for the columnstore index defined on the table.&lt;br&gt;&lt;br&gt; 1 = clustered columnstore index&lt;br&gt;&lt;br&gt; 2 = nonclustered columnstore index</column>
    <column name="partition_number" type="int">The partition number.&lt;br&gt;&lt;br&gt; 1 = first partition of a partitioned table, or the single partition of a nonpartitioned table.&lt;br&gt;&lt;br&gt; 2 = second partition, and so on.</column>
    <column name="internal_object_type" type="tinyint">Rowset objects that track internal data for the columnstore index.&lt;br&gt;&lt;br&gt; 2 = COLUMN_STORE_DELETE_BITMAP&lt;br&gt;&lt;br&gt; 3 = COLUMN_STORE_DELTA_STORE&lt;br&gt;&lt;br&gt; 4 = COLUMN_STORE_DELETE_BUFFER&lt;br&gt;&lt;br&gt; 5 = COLUMN_STORE_MAPPING_INDEX</column>
    <column name="internal_object_type_desc" type="nvarchar(60)">COLUMN_STORE_DELETE_BITMAP - This bitmap index tracks rows that are marked as deleted from the columnstore. The bitmap is for every rowgroup since partitions can have rows in multiple rowgroups. The rows are that are still physically present and taking up space in the columnstore.&lt;br&gt;&lt;br&gt; COLUMN_STORE_DELTA_STORE - Stores groups of rows, called rowgroups, that have not been compressed into columnar storage. Each table partition can have zero or more deltastore rowgroups.&lt;br&gt;&lt;br&gt; COLUMN_STORE_DELETE_BUFFER - For maintaining deletes to updateable nonclustered columnstore indexes. When a query deletes a row from the underlying rowstore table, the delete buffer tracks the deletion from the columnstore. When the number of deleted rows exceed 1048576, they are merged back into the delete bitmap by background Tuple Mover thread or by an explicit Reorganize command.  At any given point in time, the union of the delete bitmap and the delete buffer represents all deleted rows.&lt;br&gt;&lt;br&gt; COLUMN_STORE_MAPPING_INDEX - Used only when the clustered columnstore index has a secondary nonclustered index. This maps nonclustered index keys to the correct rowgroup and row ID in the columnstore. It only stores keys for rows that move to a different rowgroup; this occurs when a delta rowgroup is compressed into the columnstore, and when a merge operation merges rows from two different rowgroups.</column>
    <column name="Row_group_id" type="int">ID for the deltastore rowgroup. Each table partition can have zero or more deltastore rowgroups.</column>
    <column name="hobt_id" type="bigint">ID of the internal rowset object (HoBT). This is a good key for joining with other DMVs to get more information about the physical characteristics of the internal rowset.</column>
    <column name="rows" type="bigint">Approximate number of rows in this partition.</column>
    <column name="data_compression" type="tinyint">The state of compression for the rowset:&lt;br&gt;&lt;br&gt; 0 = NONE&lt;br&gt;&lt;br&gt; 1 = ROW&lt;br&gt;&lt;br&gt; 2 = PAGE</column>
    <column name="data_compression_desc" type="nvarchar(60)">The state of compression for each partition. Possible values for rowstore tables are NONE, ROW, and PAGE. Possible values for columnstore tables are COLUMNSTORE and COLUMNSTORE_ARCHIVE.</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Partition has last-page insert optimization enabled.&lt;br&gt;&lt;br&gt;0 = Default value. Partition has last-page insert optimization disabled.</column>
  </table>
  <table name="sys.internal_tables" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-internal-tables-transact-sql?view=sql-server-ver15">
    <description>Returns one row for each object that is an internal table. Internal tables are automatically generated by SQL Server to support various features. For example, when you create a primary XML index, SQL Server automatically creates an internal table to persist the shredded XML document data. Internal tables appear in the &lt;strong&gt;sys&lt;/strong&gt; schema of every database and have unique, system-generated names that indicate their function, for example, &lt;strong&gt;xml_index_nodes_2021582240_32001&lt;/strong&gt; or &lt;strong&gt;queue_messages_1977058079&lt;/strong&gt;</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="internal_type" type="tinyint">Type of the internal table:&lt;br&gt;&lt;br&gt; 3 = &lt;strong&gt;query_disk_store_query_hints&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 4 = &lt;strong&gt;query_disk_store_query_template_parameterization&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 6 = &lt;strong&gt;query_disk_store_wait_stats&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 201 = &lt;strong&gt;queue_messages&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 202 = &lt;strong&gt;xml_index_nodes&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 203 = &lt;strong&gt;fulltext_catalog_freelist&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 205 = &lt;strong&gt;query_notification&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 206 = &lt;strong&gt;service_broker_map&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 207 = &lt;strong&gt;extended_indexes&lt;/strong&gt; (such as a spatial index)&lt;br&gt;&lt;br&gt; 208 = &lt;strong&gt;filestream_tombstone&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 209 = &lt;strong&gt;change_tracking&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 210 = &lt;strong&gt;tracked_committed_transactions&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 220 = &lt;strong&gt;contained_features&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 225 = &lt;strong&gt;filetable_updates&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 236 = &lt;strong&gt;selective_xml_index_node_table&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 240 = &lt;strong&gt;query_disk_store_query_text&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 241 = &lt;strong&gt;query_disk_store_query&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 242 = &lt;strong&gt;query_disk_store_plan&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 243 = &lt;strong&gt;query_disk_store_runtime_stats&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 244 = &lt;strong&gt;query_disk_store_runtime_stats_interval&lt;/strong&gt;&lt;br&gt;&lt;br&gt; 245 = &lt;strong&gt;query_context_settings&lt;/strong&gt;</column>
    <column name="internal_type_desc" type="nvarchar(60)">Description of the type of internal table:&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_QUERY_HINTS&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_QUERY_TEMPLATE_PARAMETERIZATION&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_WAIT_STATS&lt;br&gt;&lt;br&gt; QUEUE_MESSAGES&lt;br&gt;&lt;br&gt; XML_INDEX_NODES&lt;br&gt;&lt;br&gt; FULLTEXT_CATALOG_FREELIST&lt;br&gt;&lt;br&gt; FULLTEXT_CATALOG_MAP&lt;br&gt;&lt;br&gt; QUERY_NOTIFICATION&lt;br&gt;&lt;br&gt; SERVICE_BROKER_MAP&lt;br&gt;&lt;br&gt; EXTENDED_INDEXES&lt;br&gt;&lt;br&gt; FILESTREAM_TOMBSTONE&lt;br&gt;&lt;br&gt; CHANGE_TRACKING&lt;br&gt;&lt;br&gt; TRACKED_COMMITTED_TRANSACTIONS&lt;br&gt;&lt;br&gt; CONTAINED_FEATURES&lt;br&gt;&lt;br&gt; FILETABLE_UPDATES&lt;br&gt;&lt;br&gt; SELECTIVE_XML_INDEX_NODE_TABLE&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_QUERY_TEXT&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_QUERY&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_PLAN&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_RUNTIME_STATS&lt;br&gt;&lt;br&gt; QUERY_DISK_STORE_RUNTIME_STATS_INTERVAL&lt;br&gt;&lt;br&gt; QUERY_CONTEXT_SETTINGS</column>
    <column name="parent_id" type="int">ID of the parent, regardless of whether it is schema-scoped or not. Otherwise, 0 if there is no parent.&lt;br&gt;&lt;br&gt; &lt;strong&gt;queue_messages&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of queue&lt;br&gt;&lt;br&gt; &lt;strong&gt;xml_index_nodes&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of the xml index&lt;br&gt;&lt;br&gt; &lt;strong&gt;fulltext_catalog_freelist&lt;/strong&gt; = &lt;strong&gt;fulltext_catalog_id&lt;/strong&gt; of the full-text catalog&lt;br&gt;&lt;br&gt; &lt;strong&gt;fulltext_index_map&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of the full-text index&lt;br&gt;&lt;br&gt; &lt;strong&gt;query_notification&lt;/strong&gt;, or &lt;strong&gt;service_broker_map&lt;/strong&gt; = 0&lt;br&gt;&lt;br&gt; &lt;strong&gt;extended_indexes&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of an extended index, such as a spatial index&lt;br&gt;&lt;br&gt; &lt;strong&gt;object_id&lt;/strong&gt; of the table for which table tracking is enabled = &lt;strong&gt;change_tracking&lt;/strong&gt;</column>
    <column name="parent_minor_id" type="int">Minor ID of the parent.&lt;br&gt;&lt;br&gt; &lt;strong&gt;xml_index_nodes&lt;/strong&gt; = &lt;strong&gt;index_id&lt;/strong&gt; of the XML index&lt;br&gt;&lt;br&gt; &lt;strong&gt;extended_indexes&lt;/strong&gt; = &lt;strong&gt;index_id&lt;/strong&gt; of an extended index, such as a spatial index&lt;br&gt;&lt;br&gt; 0 = &lt;strong&gt;queue_messages&lt;/strong&gt;, &lt;strong&gt;fulltext_catalog_freelist&lt;/strong&gt;, &lt;strong&gt;fulltext_index_map&lt;/strong&gt;, &lt;strong&gt;query_notification&lt;/strong&gt;, &lt;strong&gt;service_broker_map&lt;/strong&gt;, or &lt;strong&gt;change_tracking&lt;/strong&gt;</column>
    <column name="lob_data_space_id" type="int">Non-zero value is the ID of data space (filegroup or partition-scheme) that holds the large object (LOB) data for this table.</column>
    <column name="filestream_data_space_id" type="int">Reserved for future use.</column>
  </table>
  <table name="sys.key_constraints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-key-constraints-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each object that is a primary key or unique constraint. Includes &lt;strong&gt;sys.objects.type&lt;/strong&gt; PK and UQ.</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="unique_index_id" type="int">ID of the corresponding unique index in the parent object that was created to enforce this constraint.</column>
    <column name="is_system_named" type="bit">1 = Name was generated by system.&lt;br&gt;&lt;br&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.masked_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-masked-columns-transact-sql?view=sql-server-ver15">
    <description>Use the &lt;strong&gt;sys.masked_columns&lt;/strong&gt; view to query for table-columns that have a dynamic data masking function applied to them. This view inherits from the &lt;strong&gt;sys.columns&lt;/strong&gt; view. It returns all columns in the &lt;strong&gt;sys.columns&lt;/strong&gt; view, plus the &lt;strong&gt;is_masked&lt;/strong&gt; and &lt;strong&gt;masking_function&lt;/strong&gt; columns, indicating if the column is masked, and if so, what masking function is defined. This view only shows the columns on which there is a masking function applied.</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br&gt;&lt;br&gt; Column IDs might not be sequential.</column>
    <column name="sys.masked_columns" type="various">See &lt;a href="sys-columns-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.columns (Transact-SQL)&lt;/a&gt; for more column definitions.</column>
    <column name="is_masked" type="bit">Indicates if the column is masked. 1 indicates masked.</column>
    <column name="masking_function" type="nvarchar(4000)">The masking function for the column.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br&gt;&lt;br&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br&gt;&lt;br&gt; 0 = NOT_APPLICABLE&lt;br&gt; 1 = AS_ROW_START&lt;br&gt; 2 = AS_ROW_END&lt;br&gt;7 = AS_TRANSACTION_ID_START&lt;br&gt;8 = AS_TRANSACTION_ID_END&lt;br&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../tables/temporal-tables?view=sql-server-ver15" data-linktype="relative-path"&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
  </table>
  <table name="sys.memory_optimized_tables_internal_attributes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-memory-optimized-tables-internal-attributes-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each internal memory-optimized table used for storing user memory-optimized tables. Each user table corresponds to one or more internal tables. A single table is used for the core data storage. Additional internal tables are used to support features such as temporal, columnstore index and off-row (LOB) storage for memory-optimized tables.</description>
    <column name="r&gt;&#xA;&lt;td style=&quot;text-align: left;&quot;&gt;object_id" type="int">d style="text-align: left;"&gt;ID of the user table. Internal memory-optimized tables that exist to support a user table (such as off-row storage or deleted rows in case of Hk/Columnstore combinations) have the same object_id as their parent.</column>
    <column name="r&gt;&#xA;&lt;td style=&quot;text-align: left;&quot;&gt;xtp_object_id" type="bigint">d style="text-align: left;"&gt;In-Memory OLTP object ID corresponding to the internal memory-optimized table that is used to support the user table. It is unique within the database and it can change over the lifetime of the object.</column>
    <column name="r&gt;&#xA;&lt;td style=&quot;text-align: left;&quot;&gt;type" type="int">d style="text-align: left;"&gt;Type of internal table.&lt;br&gt;&lt;br&gt; 0 =&amp;gt; DELETED_ROWS_TABLE &lt;br&gt; 1 =&amp;gt; USER_TABLE &lt;br&gt; 2 =&amp;gt; DICTIONARIES_TABLE&lt;br&gt;3 =&amp;gt; SEGMENTS_TABLE&lt;br&gt;4 =&amp;gt; ROW_GROUPS_INFO_TABLE&lt;br&gt;5 =&amp;gt; INTERNAL OFF-ROW DATA TABLE&lt;br&gt;252 =&amp;gt; INTERNAL_TEMPORAL_HISTORY_TABLE</column>
    <column name="r&gt;&#xA;&lt;td style=&quot;text-align: left;&quot;&gt;type_desc" type="nvarchar(60)">d style="text-align: left;"&gt;Description of the type&lt;br&gt;&lt;br&gt;DELETED_ROWS_TABLE -&amp;gt; Internal table tracking deleted rows for a columnstore index&lt;br&gt;USER_TABLE -&amp;gt; Table containing the in-row user data&lt;br&gt;DICTIONARIES_TABLE -&amp;gt; Dictionaries for a columnstore index&lt;br&gt;SEGMENTS_TABLE -&amp;gt; Compressed segments for a columnstore index&lt;br&gt;ROW_GROUPS_INFO_TABLE -&amp;gt; Metadata about compressed row groups of a columnstore index&lt;br&gt;INTERNAL OFF-ROW DATA TABLE -&amp;gt; Internal table used for storage of an off-row column. In this case, minor_id reflects the column_id.&lt;br&gt;INTERNAL_TEMPORAL_HISTORY_TABLE -&amp;gt; Hot tail of the disk-based history table. Rows inserted into the history are inserted into this internal memory-optimized table first. There is a background task that asynchronously moves rows from this internal table to the disk-based history table.</column>
    <column name="r&gt;&#xA;&lt;td style=&quot;text-align: left;&quot;&gt;minor_id" type="int">d style="text-align: left;"&gt;0 indicates a user or internal table&lt;br&gt;&lt;br&gt;Non-0 indicates the ID of a column stored off-row. Joins with column_id in sys.columns.&lt;br&gt;&lt;br&gt;Each column stored off-row has a corresponding row in this system view.</column>
  </table>
  <table name="sys.module_assembly_usages" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-module-assembly-usages-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each module-to-assembly reference.</description>
    <column name="object_id" type="int">Object identification number of the SQL object. Is unique within a database.</column>
    <column name="assembly_id" type="int">ID of the assembly from which this module was created.</column>
  </table>
  <table name="sys.numbered_procedures" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-numbered-procedures-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each SQL Server stored procedure that was created as a numbered procedure. This does not show a row for the base (number = 1) stored procedure. Entries for the base stored procedures can be found in views such as &lt;strong&gt;sys.objects&lt;/strong&gt; and &lt;strong&gt;sys.procedures&lt;/strong&gt;.</description>
    <column name="object_id" type="int">ID of the object of the stored procedure.</column>
    <column name="procedure_number" type="smallint">Number of this procedure within the object, 2 or greater.</column>
    <column name="definition" type="nvarchar(max)">The SQL Server text that defines this procedure.&lt;br&gt;&lt;br&gt; NULL = encrypted.</column>
  </table>
  <table name="sys.numbered_procedure_parameters" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-numbered-procedure-parameters-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each parameter of a numbered procedure. When you create a numbered stored procedure, the base procedure is number 1. All subsequent procedures have numbers 2, 3, and so forth. &lt;strong&gt;sys.numbered_procedure_parameters&lt;/strong&gt; contains the parameter definitions for all subsequent procedures, numbered 2 and greater. This view does not show parameters for the base stored procedure (number = 1). The base stored procedure is similar to a nonnumbered stored procedure. Therefore, its parameters are represented in &lt;a href="sys-parameters-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.parameters (Transact-SQL)&lt;/a&gt;.</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="procedure_number" type="smallint">Number of this procedure within the object, 2 or greater.</column>
    <column name="name" type="sysname">Name of the parameter. Is unique within &lt;strong&gt;procedure_number&lt;/strong&gt;.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the &lt;strong&gt;procedure_number&lt;/strong&gt;.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter</column>
    <column name="user_type_id" type="int">ID of the type, as defined by user, of the parameter.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter in bytes.&lt;br&gt;&lt;br&gt; -1 = Column data type is varchar(max), nvarchar(max), or varbinary(max).</column>
    <column name="precision" type="tinyint">Precision of the parameter if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is output or return; otherwise, 0</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor-reference parameter.</column>
  </table>
  <table name="sys.objects" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each user-defined, schema-scoped object that is created within a database, including natively compiled scalar user-defined function.</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br&gt;&lt;br&gt; Is NULL if there is no alternate individual owner.&lt;br&gt;&lt;br&gt; Is NULL if the object type is one of the following:&lt;br&gt;&lt;br&gt; C = CHECK constraint&lt;br&gt;&lt;br&gt; D = DEFAULT (constraint or stand-alone)&lt;br&gt;&lt;br&gt; F = FOREIGN KEY constraint&lt;br&gt;&lt;br&gt; PK = PRIMARY KEY constraint&lt;br&gt;&lt;br&gt; R = Rule (old-style, stand-alone)&lt;br&gt;&lt;br&gt; TA = Assembly (CLR-integration) trigger&lt;br&gt;&lt;br&gt; TR = SQL trigger&lt;br&gt;&lt;br&gt; UQ = UNIQUE constraint&lt;br&gt;&lt;br&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br&gt;&lt;br&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br&gt;&lt;br&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br&gt;&lt;br&gt; AF = Aggregate function (CLR)&lt;br&gt;&lt;br&gt; C = CHECK constraint&lt;br&gt;&lt;br&gt; D = DEFAULT (constraint or stand-alone)&lt;br&gt;&lt;br&gt; F = FOREIGN KEY constraint&lt;br&gt;&lt;br&gt; FN = SQL scalar function&lt;br&gt;&lt;br&gt; FS = Assembly (CLR) scalar-function&lt;br&gt;&lt;br&gt; FT = Assembly (CLR) table-valued function&lt;br&gt;&lt;br&gt; IF = SQL inline table-valued function&lt;br&gt;&lt;br&gt; IT = Internal table&lt;br&gt;&lt;br&gt; P = SQL Stored Procedure&lt;br&gt;&lt;br&gt; PC = Assembly (CLR) stored-procedure&lt;br&gt;&lt;br&gt; PG = Plan guide&lt;br&gt;&lt;br&gt; PK = PRIMARY KEY constraint&lt;br&gt;&lt;br&gt; R = Rule (old-style, stand-alone)&lt;br&gt;&lt;br&gt; RF = Replication-filter-procedure&lt;br&gt;&lt;br&gt; S = System base table&lt;br&gt;&lt;br&gt; SN = Synonym&lt;br&gt;&lt;br&gt; SO = Sequence object&lt;br&gt;&lt;br&gt; U = Table (user-defined)&lt;br&gt;&lt;br&gt; V = View&lt;br&gt;&lt;br&gt; EC = Edge constraint &lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br&gt;&lt;br&gt; SQ = Service queue&lt;br&gt;&lt;br&gt; TA = Assembly (CLR) DML trigger&lt;br&gt;&lt;br&gt; TF = SQL table-valued-function&lt;br&gt;&lt;br&gt; TR = SQL DML trigger&lt;br&gt;&lt;br&gt; TT = Table type&lt;br&gt;&lt;br&gt; UQ = UNIQUE constraint&lt;br&gt;&lt;br&gt; X = Extended stored procedure&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br&gt;&lt;br&gt; ST = STATS_TREE&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br&gt;&lt;br&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br&gt;&lt;br&gt; AGGREGATE_FUNCTION&lt;br&gt;&lt;br&gt; CHECK_CONSTRAINT&lt;br&gt;&lt;br&gt; CLR_SCALAR_FUNCTION&lt;br&gt;&lt;br&gt; CLR_STORED_PROCEDURE&lt;br&gt;&lt;br&gt; CLR_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; CLR_TRIGGER&lt;br&gt;&lt;br&gt; DEFAULT_CONSTRAINT&lt;br&gt;&lt;br&gt; EXTENDED_STORED_PROCEDURE&lt;br&gt;&lt;br&gt; FOREIGN_KEY_CONSTRAINT&lt;br&gt;&lt;br&gt; INTERNAL_TABLE&lt;br&gt;&lt;br&gt; PLAN_GUIDE&lt;br&gt;&lt;br&gt; PRIMARY_KEY_CONSTRAINT&lt;br&gt;&lt;br&gt; REPLICATION_FILTER_PROCEDURE&lt;br&gt;&lt;br&gt; RULE&lt;br&gt;&lt;br&gt; SEQUENCE_OBJECT&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br&gt;&lt;br&gt;  SERVICE_QUEUE&lt;br&gt;&lt;br&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; SQL_SCALAR_FUNCTION&lt;br&gt;&lt;br&gt; SQL_STORED_PROCEDURE&lt;br&gt;&lt;br&gt; SQL_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; SQL_TRIGGER&lt;br&gt;&lt;br&gt; SYNONYM&lt;br&gt;&lt;br&gt; SYSTEM_TABLE&lt;br&gt;&lt;br&gt; TABLE_TYPE&lt;br&gt;&lt;br&gt; UNIQUE_CONSTRAINT&lt;br&gt;&lt;br&gt; USER_TABLE&lt;br&gt;&lt;br&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
  </table>
  <table name="sys.parameters" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameters-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each parameter of an object that accepts parameters. If the object is a scalar function, there is also a single row describing the return value. That row will have a &lt;strong&gt;parameter_id&lt;/strong&gt; value of 0.</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="name" type="sysname">Name of the parameter. Is unique within the object.&lt;br&gt;&lt;br&gt; If the object is a scalar function, the parameter name is an empty string in the row representing the return value.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the object.&lt;br&gt;&lt;br&gt; If the object is a scalar function, &lt;strong&gt;parameter_id&lt;/strong&gt; = 0 represents the return value.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter.</column>
    <column name="user_type_id" type="int">ID of the type of the parameter as defined by the user.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter, in bytes.&lt;br&gt;&lt;br&gt; Value = -1 when the column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="precision" type="tinyint">Precision of the parameter if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is OUTPUT or RETURN; otherwise, 0.</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor-reference parameter.</column>
    <column name="has_default_value" type="bit">1 = Parameter has default value.&lt;br&gt;&lt;br&gt; SQL Server only maintains default values for CLR objects in this catalog view; therefore, this column has a value of 0 for Transact-SQL objects. To view the default value of a parameter in a Transact-SQL object, query the &lt;strong&gt;definition&lt;/strong&gt; column of the &lt;a href="sys-sql-modules-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.sql_modules&lt;/a&gt; catalog view, or use the &lt;a href="../../t-sql/functions/object-definition-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;OBJECT_DEFINITION&lt;/a&gt; system function.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br&gt;&lt;br&gt; 0 = Content is a document fragment, or the data type of the column is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="default_value" type="sql_variant">If &lt;strong&gt;has_default_value&lt;/strong&gt; is 1, the value of this column is the value of the default for the parameter; otherwise &lt;code&gt;NULL&lt;/code&gt;.</column>
    <column name="xml_collection_id" type="int">Non-zero if the data type of the parameter is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value is the ID of the collection containing the validating XML schema namespace of the parameter.&lt;br&gt;&lt;br&gt; 0 = No XML schema collection.</column>
    <column name="is_readonly" type="bit">1 = Parameter is  READONLY; otherwise, 0.</column>
    <column name="is_nullable" type="bit">1 = Parameter is nullable. (the default).&lt;br&gt;&lt;br&gt; 0 = Parameter is not nullable, for more efficient execution of natively-compiled stored procedures.</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type:&lt;br&gt;&lt;br&gt; 1 = Deterministic encryption&lt;br&gt;&lt;br&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type description:&lt;br&gt;&lt;br&gt; RANDOMIZED&lt;br&gt;&lt;br&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Name of encryption algorithm.&lt;br&gt;&lt;br&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; The name of the database where the column encryption key exists if different than the database of the column. Is &lt;code&gt;NULL&lt;/code&gt; if the key exists in the same database as the column.</column>
  </table>
  <table name="sys.partitions" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partitions-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each partition of all the tables and most types of indexes in the database. Special index types such as Full-Text, Spatial, and XML are not included in this view. All tables and indexes in SQL Server contain at least one partition, whether or not they are explicitly partitioned.</description>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
    <column name="object_id" type="int">Indicates the ID of the object to which this partition belongs. Every table or view is composed of at least one partition.</column>
    <column name="index_id" type="int">Indicates the ID of the index within the object to which this partition belongs.&lt;br&gt;&lt;br&gt; 0 = heap&lt;br&gt;1 = clustered index&lt;br&gt;2 or greater = nonclustered index</column>
    <column name="partition_number" type="int">Is a 1-based partition number within the owning index or heap. For non-partitioned tables and indexes, the value of this column is 1.</column>
    <column name="hobt_id" type="bigint">Indicates the ID of the data heap or B-tree (HoBT) that contains the rows for this partition.</column>
    <column name="rows" type="bigint">Indicates the approximate number of rows in this partition.</column>
    <column name="filestream_filegroup_id" type="smallint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br&gt;&lt;br&gt; Indicates the ID of the FILESTREAM filegroup stored on this partition.</column>
    <column name="data_compression" type="tinyint">Indicates the state of compression for each partition:&lt;br&gt;&lt;br&gt; 0 = NONE &lt;br&gt;1 = ROW &lt;br&gt;2 = PAGE &lt;br&gt;3 = COLUMNSTORE : &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later&lt;br&gt;4 = COLUMNSTORE_ARCHIVE : &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later&lt;br&gt;&lt;br&gt; &lt;strong&gt;Note:&lt;/strong&gt; Full text indexes will be compressed in any edition of SQL Server.</column>
    <column name="data_compression_desc" type="nvarchar(60)">Indicates the state of compression for each partition. Possible values for rowstore tables are NONE, ROW, and PAGE. Possible values for columnstore tables are COLUMNSTORE and COLUMNSTORE_ARCHIVE.</column>
  </table>
  <table name="sys.periods" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-periods-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each table for which periods have been defined.</description>
    <column name="name" type="sysname">Name of the period</column>
    <column name="period_type" type="tinyint">The numeric value representing the type of period:&lt;br&gt;&lt;br&gt; 1 = system-time period</column>
    <column name="period_type_desc" type="nvarchar(60)">The text description of the type of column:&lt;br&gt;&lt;br&gt; SYSTEM_TIME_PERIOD</column>
    <column name="object_id" type="int">The id of the table containing the period_type column</column>
    <column name="start_column_id" type="int">The id of the column that defines the lower period boundary</column>
    <column name="end_column_id" type="int">The id of the column that defines the upper period boundary</column>
  </table>
  <table name="sys.plan_guides" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-plan-guides-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each plan guide in the database.</description>
    <column name="plan_guide_id" type="int">Unique identifier of the plan guide in the database.</column>
    <column name="name" type="sysname">Name of the plan guide.</column>
    <column name="create_date" type="datetime">Date and time the plan guide was created.</column>
    <column name="modify_date" type="Datetime">Date the plan guide was last modified.</column>
    <column name="is_disabled" type="bit">1 = Plan guide is disabled.&lt;br&gt;&lt;br&gt; 0 = Plan guide is enabled.</column>
    <column name="query_text" type="nvarchar(max)">Text of the query on which the plan guide is created.</column>
    <column name="scope_type" type="tinyint">Identifies the scope of the plan guide.&lt;br&gt;&lt;br&gt; 1 = OBJECT&lt;br&gt;&lt;br&gt; 2 = SQL&lt;br&gt;&lt;br&gt; 3 = TEMPLATE</column>
    <column name="scope_type_desc" type="nvarchar(60)">Description of scope of the plan guide.&lt;br&gt;&lt;br&gt; OBJECT&lt;br&gt;&lt;br&gt; SQL&lt;br&gt;&lt;br&gt; TEMPLATE</column>
    <column name="scope_object_id" type="Int">object_id of the object defining the scope of the plan guide, if the scope is OBJECT.&lt;br&gt;&lt;br&gt; NULL if the plan guide is not scoped to OBJECT.</column>
    <column name="scope_batch" type="nvarchar(max)">Batch text, if &lt;strong&gt;scope_type&lt;/strong&gt; is SQL.&lt;br&gt;&lt;br&gt; NULL if batch type is not SQL.&lt;br&gt;&lt;br&gt; If NULL and &lt;strong&gt;scope_type&lt;/strong&gt; is SQL, the value of &lt;strong&gt;query_text&lt;/strong&gt; applies.</column>
    <column name="parameters" type="nvarchar(max)">The string defining the list of parameters associated with the plan guide.&lt;br&gt;&lt;br&gt; NULL = No parameter list is associated with the plan guide.</column>
    <column name="hints" type="nvarchar(max)">The OPTION clause hints associated with the plan guide.</column>
  </table>
  <table name="sys.procedures" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-procedures-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each object that is a procedure of some kind, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = P, X, RF, and PC.</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;</column>
    <column name="is_auto_executed" type="bit">1 = Procedure is auto-executed at the server startup; otherwise, 0. Can only be set for procedures in the master database.</column>
    <column name="is_execution_replicated" type="bit">Execution of this procedure is replicated.</column>
    <column name="is_repl_serializable_only" type="bit">Replication of the procedure execution is done only when the transaction can be serialized.</column>
    <column name="skips_repl_constraints" type="bit">During execution, the procedure skips constraints marked NOT FOR REPLICATION.</column>
  </table>
  <table name="sys.sequences" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sequences-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each sequence object in a database.</description>
    <column name="&amp;lt;inherited columns&amp;gt;" type="">Inherits all columns from &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects&lt;/a&gt;.</column>
    <column name="start_value" type="sql_variant NOT NULL">The starting value for the sequence object. If the sequence object is restarted by using ALTER SEQUENCE it will restart at this value. When the sequence object cycles it proceeds to the &lt;strong&gt;minimum_value&lt;/strong&gt; or &lt;strong&gt;maximum_value&lt;/strong&gt;, not the &lt;strong&gt;start_value&lt;/strong&gt;.</column>
    <column name="increment" type="sql_variant NOT NULL">The value that is used to increment the sequence object after each generated value.</column>
    <column name="minimum_value" type="sql_variant NULL">The minimum value that can be generated by the sequence object. After this value is reached, the sequence object will either return an error when trying to generate more values or restart if the CYCLE option is specified. If no MINVALUE has been specified, this column returns the minimum value supported by the sequence generator's data type.</column>
    <column name="maximum_value" type="sql_variant NULL">The maximum value that can be generated by the sequence object. After this value is reached the sequence object will either start returning an error when trying to generate more values or restart if the CYCLE option is specified. If no MAXVALUE has been specified this column returns the maximum value supported by the sequence object's data type.</column>
    <column name="is_cycling" type="bit NOT NULL">Returns 0 if NO CYCLE has been specified for the sequence object and 1 if CYCLE has been specified.</column>
    <column name="is_cached" type="bit NOT NULL">Returns 0 if NO CACHE has been specified for the sequence object and 1 if CACHE has been specified.</column>
    <column name="cache_size" type="int NULL">Returns the specified cache size for the sequence object. This column contains NULL if the sequence was created with the NO CACHE option or if CACHE was specified without specifying a cache size. If the value specified by the cache size is larger than the maximum number of values that can be returned by the sequence object, that unobtainable cache size is still displayed.</column>
    <column name="system_type_id" type="tinyint NOT NULL">ID of the system type for sequence object's data type.</column>
    <column name="user_type_id" type="int NOT NULL">ID of the data type for the sequence object as defined by the user.</column>
    <column name="precision" type="tinyint NOT NULL">Max precision of the data type.</column>
    <column name="scale" type="tinyint NOT NULL">Max scale of the type. Scale is returned together with precision to give users complete metadata. Scale is always 0 for sequence objects because only integer types are allowed.</column>
    <column name="current_value" type="sql_variant NOT NULL">The last value obligated. That is, the value returned from the most recent execution of the NEXT VALUE FOR function or the last value from executing the &lt;strong&gt;sp_sequence_get_range&lt;/strong&gt; procedure. Returns the START WITH value if the sequence has never been used.</column>
    <column name="is_exhausted" type="bit NOT NULL">0 indicates that more values can be generated from the sequence. 1 indicates that the sequence object has reached the MAXVALUE parameter and the sequence is not set to CYCLE. The NEXT VALUE FOR function returns an error until the sequence is restarted by using ALTER SEQUENCE.</column>
    <column name="last_used_value" type="sql_variant NULL">Returns the last value generated by the &lt;a href="../../t-sql/functions/next-value-for-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;Next Value For&lt;/a&gt; function. Applies to SQL Server 2017 and later.</column>
  </table>
  <table name="sys.server_assembly_modules" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-assembly-modules-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each assembly module for the server-level triggers of type TA. This view maps assembly triggers to the underlying CLR implementation. You can join this relation to &lt;strong&gt;sys.server_triggers&lt;/strong&gt;. The assembly must be loaded into the &lt;strong&gt;master&lt;/strong&gt; database. The tuple (object_id) is the key for the relation.</description>
    <column name="object_id" type="int">This is a FOREIGN KEY reference back to the object upon which this assembly module is defined.</column>
    <column name="assembly_id" type="int">ID of the assembly from which this module was created. The assembly must be loaded into the master database.</column>
    <column name="assembly_class" type="sysname">Name of the class within assembly that defines this module.</column>
    <column name="assembly_method" type="sysname">Name of the method within the class that defines this module. Is NULL for aggregate functions (AF).</column>
    <column name="execute_as_principal_id" type="int">ID of the EXECUTE AS server principal.&lt;br&gt;&lt;br&gt; NULL by default or if EXECUTE AS CALLER.&lt;br&gt;&lt;br&gt; ID of the specified principal if EXECUTE AS SELF EXECUTE AS &amp;lt;principal&amp;gt;.&lt;br&gt;&lt;br&gt; -2 = EXECUTE AS OWNER.</column>
  </table>
  <table name="sys.server_events" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-events-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each event for which a server-level event-notification or server-level DDL trigger fires. The columns &lt;strong&gt;object_id&lt;/strong&gt; and &lt;strong&gt;type&lt;/strong&gt; uniquely identify the server event.</description>
    <column name="object_id" type="int">ID of the server-level event notification or server-level DDL trigger to fire.</column>
    <column name="type" type="int">Type of the event that causes the event notification or DDL trigger to fire.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the event that causes the DDL trigger or event notification to fire.</column>
    <column name="event_group_type" type="int">Event group on which the trigger or event notification is created, or null if not created on an event group.</column>
    <column name="event_group_type_desc" type="nvarchar(60)">Description of the event group on which the trigger or event notification is created, or null if not created on an event group</column>
  </table>
  <table name="sys.server_event_notifications" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-notifications-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each server-level event notification object.</description>
    <column name="name" type="sysname">Server event notification name. Is unique across all server-level event notifications.</column>
    <column name="object_id" type="int">Object identification number. Is unique within the &lt;strong&gt;master&lt;/strong&gt; database.</column>
    <column name="parent_class" type="tinyint">Class of parent. Is always 100 = Server.</column>
    <column name="parent_class_desc" type="nvarchar(60)">Description of class of parent. Is always SERVER.</column>
    <column name="parent_id" type="int">Is always 0.</column>
    <column name="create_date" type="datetime">Date created.</column>
    <column name="modify_date" type="datetime">Date object was last modified by using an ALTER statement.</column>
    <column name="service_name" type="nvarchar(256)">Name of the target service to which the notification is sent.</column>
    <column name="broker_instance" type="nvarchar(128)">The service broker where the named target service is defined.</column>
    <column name="creator_sid" type="varbinary(85)">SID of the login executing the statement that creates the event notification. NULL if WITH FAN_IN is not specified in the event notification definition.</column>
    <column name="principal_id" type="int">ID of the server principal that owns this.</column>
  </table>
  <table name="sys.server_sql_modules" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-sql-modules-transact-sql?view=sql-server-ver15">
    <description>Contains the set of SQL modules for server-level triggers of type TR. You can join this relation to sys.server_triggers. The tuple (object_id) is the key of the relation.</description>
    <column name="object_id" type="int">This is a FOREIGN KEY reference back to the server-level trigger where this module is defined.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module.&lt;br&gt;&lt;br&gt; NULL = Encrypted.</column>
    <column name="uses_ansi_nulls" type="bit">Module was created with ANSI NULLS set option set to ON.</column>
    <column name="uses_quoted_identifier" type="bit">Module was created with QUOTED IDENTIFIER set option set to ON.</column>
    <column name="execute_as_principal_id" type="int">ID of the EXECUTE AS server principal.&lt;br&gt;&lt;br&gt; NULL by default or if EXECUTE AS CALLER&lt;br&gt;&lt;br&gt; ID of the specified principal if EXECUTE AS SELF EXECUTE AS principal-2 = EXECUTE AS OWNER.</column>
  </table>
  <table name="sys.server_triggers" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-triggers-transact-sql?view=sql-server-ver15">
    <description>Contains the set of all server-level DDL triggers with object_type of TR or TA. In the case of CLR triggers, the assembly must be loaded into the &lt;strong&gt;master&lt;/strong&gt; database. All server-level DDL trigger names exist in a single, global scope.</description>
    <column name="name" type="sysname">Name of the trigger.</column>
    <column name="object_id" type="int">ID of the object.</column>
    <column name="parent_class" type="tinyint">Class of parent. Is always:&lt;br&gt;&lt;br&gt; 100 = Server</column>
    <column name="parent_class_desc" type="nvarchar(60)">Description of class of parent. Is always:&lt;br&gt;&lt;br&gt; SERVER.</column>
    <column name="parent_id" type="int">Always 0 for triggers on the SERVER.</column>
    <column name="type" type="char(2)">Object type:&lt;br&gt;&lt;br&gt; TA = Assembly (CLR) trigger&lt;br&gt;&lt;br&gt; TR = SQL trigger</column>
    <column name="type_desc" type="nvarchar(60)">Description of the class of the object type.&lt;br&gt;&lt;br&gt; CLR_TRIGGER&lt;br&gt;&lt;br&gt; SQL_TRIGGER</column>
    <column name="create_date" type="datetime">Date the trigger was created.</column>
    <column name="modify_date" type="datetime">Date the trigger was last modified by using an ALTER statement.</column>
    <column name="is_ms_shipped" type="bit">Trigger created on behalf of the user by an internal SQL Server component.</column>
    <column name="is_disabled" type="bit">1 = Trigger is disabled.</column>
  </table>
  <table name="sys.server_trigger_events" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-trigger-events-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each event for which a server-level (synchronous) trigger fires.</description>
    <column name="inherited columns" type="">Inherits all columns from &lt;a href="sys-server-events-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.server_events&lt;/a&gt;.</column>
    <column name="is_first" type="bit">Trigger is marked to be the first to fire for this event.</column>
    <column name="is_last" type="bit">Trigger is marked to be the last to fire for this event.</column>
  </table>
  <table name="sys.sql_dependencies" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-dependencies-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each dependency on a referenced entity as referenced in the Transact-SQL expression or statements that define some other referencing object.</description>
    <column name="class" type="tinyint">Identifies the class of the referenced entity:&lt;br&gt;&lt;br&gt; 0 = Object or column (non-schema-bound references only)&lt;br&gt;&lt;br&gt; 1 = Object or column (schema-bound references)&lt;br&gt;&lt;br&gt; 2 = Types (schema-bound references)&lt;br&gt;&lt;br&gt; 3 = XML Schema collections (schema-bound references)&lt;br&gt;&lt;br&gt; 4 = Partition function (schema-bound references)</column>
    <column name="class_desc" type="nvarchar(60)">Description of class of referenced entity:&lt;br&gt;&lt;br&gt; &lt;strong&gt;OBJECT_OR_COLUMN_REFERENCE_NON_SCHEMA_BOUND&lt;/strong&gt;&lt;br&gt;&lt;br&gt; &lt;strong&gt;OBJECT_OR_COLUMN_REFERENCE_SCHEMA_BOUND&lt;/strong&gt;&lt;br&gt;&lt;br&gt; &lt;strong&gt;TYPE_REFERENCE&lt;/strong&gt;&lt;br&gt;&lt;br&gt; &lt;strong&gt;XML_SCHEMA_COLLECTION_REFERENCE&lt;/strong&gt;&lt;br&gt;&lt;br&gt; &lt;strong&gt;PARTITION_FUNCTION_REFERENCE&lt;/strong&gt;</column>
    <column name="object_id" type="int">ID of the referencing object.</column>
    <column name="column_id" type="int">If the referencing ID is a column, ID of referencing column; otherwise, 0.</column>
    <column name="referenced_major_id" type="int">ID of the referenced entity, interpreted by value of class, according to:&lt;br&gt;&lt;br&gt; 0, 1 = Object ID of object or column.&lt;br&gt;&lt;br&gt; 2 = Type ID.&lt;br&gt;&lt;br&gt; 3 = XML Schema collection ID.</column>
    <column name="referenced_minor_id" type="int">Minor-ID of the referenced entity, interpreted by value of class, as shown in the following.&lt;br&gt;&lt;br&gt; When class =:&lt;br&gt;&lt;br&gt; 0, &lt;strong&gt;referenced_minor_id&lt;/strong&gt; is a column ID; or if not a column, it is 0.&lt;br&gt;&lt;br&gt; 1, &lt;strong&gt;referenced_minor_id&lt;/strong&gt; is a column ID; or if not a column, it is 0.&lt;br&gt;&lt;br&gt; Otherwise, &lt;strong&gt;referenced_minor_id&lt;/strong&gt; = 0.</column>
    <column name="is_selected" type="bit">Object or column is selected.</column>
    <column name="is_updated" type="bit">Object or column is updated.</column>
    <column name="is_select_all" type="bit">Object is used in SELECT * clause (object-level only).</column>
  </table>
  <table name="sys.sql_expression_dependencies" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-expression-dependencies-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each by-name dependency on a user-defined entity in the current database. This includes dependences between natively compiled, scalar user-defined functions and other SQL Server modules. A dependency between two entities is created when one entity, called the &lt;em&gt;referenced entity&lt;/em&gt;, appears by name in a persisted SQL expression of another entity, called the &lt;em&gt;referencing entity&lt;/em&gt;. For example, when a table is referenced in the definition of a view, the view, as the referencing entity, depends on the table, the referenced entity. If the table is dropped, the view is unusable.</description>
    <column name="referencing_id" type="int">ID of the referencing entity. Is not nullable.</column>
    <column name="referencing_minor_id" type="int">Column ID when the referencing entity is a column; otherwise 0. Is not nullable.</column>
    <column name="referencing_class" type="tinyint">Class of the referencing entity.&lt;br&gt;&lt;br&gt; 1 = Object or column&lt;br&gt;&lt;br&gt; 12 = Database DDL trigger&lt;br&gt;&lt;br&gt; 13 = Server DDL trigger&lt;br&gt;&lt;br&gt; Is not nullable.</column>
    <column name="referencing_class_desc" type="nvarchar(60)">Description of the class of referencing entity.&lt;br&gt;&lt;br&gt; OBJECT_OR_COLUMN&lt;br&gt;&lt;br&gt; DATABASE_DDL_TRIGGER&lt;br&gt;&lt;br&gt; SERVER_DDL_TRIGGER&lt;br&gt;&lt;br&gt; Is not nullable.</column>
    <column name="is_schema_bound_reference" type="bit">1 = Referenced entity is schema-bound.&lt;br&gt;&lt;br&gt; 0 = Referenced entity is non-schema-bound.&lt;br&gt;&lt;br&gt; Is not nullable.</column>
    <column name="referenced_class" type="tinyint">Class of the referenced entity.&lt;br&gt;&lt;br&gt; 1 = Object or column&lt;br&gt;&lt;br&gt; 6 = Type&lt;br&gt;&lt;br&gt; 10 = XML schema collection&lt;br&gt;&lt;br&gt; 21 = Partition function&lt;br&gt;&lt;br&gt; Is not nullable.</column>
    <column name="referenced_class_desc" type="nvarchar(60)">Description of class of referenced entity.&lt;br&gt;&lt;br&gt; OBJECT_OR_COLUMN&lt;br&gt;&lt;br&gt; TYPE&lt;br&gt;&lt;br&gt; XML_SCHEMA_COLLECTION&lt;br&gt;&lt;br&gt; PARTITION_FUNCTION&lt;br&gt;&lt;br&gt; Is not nullable.</column>
    <column name="referenced_server_name" type="sysname">Name of the server of the referenced entity.&lt;br&gt;&lt;br&gt; This column is populated for cross-server dependencies that are made by specifying a valid four-part name. For information about multipart names, see &lt;a href="../../t-sql/language-elements/transact-sql-syntax-conventions-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;Transact-SQL Syntax Conventions (Transact-SQL)&lt;/a&gt;.&lt;br&gt;&lt;br&gt; NULL for non-schema-bound entities for which the entity was referenced without specifying a four-part name.&lt;br&gt;&lt;br&gt; NULL for schema-bound entities because they must be in the same database and therefore can only be defined using a two-part (&lt;em&gt;schema.object&lt;/em&gt;) name.</column>
    <column name="referenced_database_name" type="sysname">Name of the database of the referenced entity.&lt;br&gt;&lt;br&gt; This column is populated for cross-database or cross-server references that are made by specifying a valid three-part or four-part name.&lt;br&gt;&lt;br&gt; NULL for non-schema-bound references when specified using a one-part or two-part name.&lt;br&gt;&lt;br&gt; NULL for schema-bound entities because they must be in the same database and therefore can only be defined using a two-part (&lt;em&gt;schema.object&lt;/em&gt;) name.</column>
    <column name="referenced_schema_name" type="sysname">Schema in which the referenced entity belongs.&lt;br&gt;&lt;br&gt; NULL for non-schema-bound references in which the entity was referenced without specifying the schema name.&lt;br&gt;&lt;br&gt; Never NULL for schema-bound references because schema-bound entities must be defined and referenced by using a two-part name.</column>
    <column name="referenced_entity_name" type="sysname">Name of the referenced entity. Is not nullable.</column>
    <column name="referenced_id" type="int">ID of the referenced entity. The value of this column is never NULL for schema-bound references. The value of this column is always NULL for cross-server and cross-database references.&lt;br&gt;&lt;br&gt; NULL for references within the database if the ID cannot be determined. For non-schema-bound references, the ID cannot be resolved in the following cases:&lt;br&gt;&lt;br&gt; The referenced entity does not exist in the database.&lt;br&gt;&lt;br&gt; The schema of the referenced entity depends on the schema of the caller and is resolved at run time. In this case, is_caller_dependent is set to 1.</column>
    <column name="referenced_minor_id" type="int">ID of the referenced column when the referencing entity is a column; otherwise 0. Is not nullable.&lt;br&gt;&lt;br&gt; A referenced entity is a column when a column is identified by name in the referencing entity, or when the parent entity is used in a SELECT * statement.</column>
    <column name="is_caller_dependent" type="bit">Indicates that schema binding for the referenced entity occurs at runtime; therefore, resolution of the entity ID depends on the schema of the caller. This occurs when the referenced entity is a stored procedure, extended stored procedure, or a non-schema-bound user-defined function called in an EXECUTE statement.&lt;br&gt;&lt;br&gt; 1 = The referenced entity is caller dependent and is resolved at runtime. In this case, referenced_id is NULL.&lt;br&gt;&lt;br&gt; 0 = The referenced entity ID is not caller dependent.&lt;br&gt;&lt;br&gt; Always 0 for schema-bound references and for cross-database and cross-server references that explicitly specify a schema name. For example, a reference to an entity in the format &lt;code&gt;EXEC MyDatabase.MySchema.MyProc&lt;/code&gt; is not caller dependent. However, a reference in the format &lt;code&gt;EXEC MyDatabase..MyProc&lt;/code&gt; is caller dependent.</column>
    <column name="is_ambiguous" type="bit">Indicates the reference is ambiguous and can resolve at run time to a user-defined function, a user-defined type (UDT), or an xquery reference to a column of type &lt;strong&gt;xml&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; For example, assume that the statement &lt;code&gt;SELECT Sales.GetOrder() FROM Sales.MySales&lt;/code&gt; is defined in a stored procedure. Until the stored procedure is executed, it is not known whether &lt;code&gt;Sales.GetOrder()&lt;/code&gt; is a user-defined function in the &lt;code&gt;Sales&lt;/code&gt; schema or column named &lt;code&gt;Sales&lt;/code&gt; of type UDT with a method named &lt;code&gt;GetOrder()&lt;/code&gt;.&lt;br&gt;&lt;br&gt; 1 = Reference is ambiguous.&lt;br&gt;&lt;br&gt; 0 = Reference is unambiguous or the entity can be successfully bound when the view is called.&lt;br&gt;&lt;br&gt; Always 0 for schema bound references.</column>
  </table>
  <table name="sys.sql_modules" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each object that is an SQL language-defined module in SQL Server, including natively compiled scalar user-defined function. Objects of type P, RF, V, TR, FN, IF, TF, and R have an associated SQL module. Stand-alone defaults, objects of type D, also have an SQL module definition in this view. For a description of these types, see the &lt;code&gt;type&lt;/code&gt; column in the &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects&lt;/a&gt; catalog view.</description>
    <column name="object_id" type="int">ID of the object of the containing object. Is unique within a database.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module. This value can also be obtained using the &lt;a href="../../t-sql/functions/object-definition-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;OBJECT_DEFINITION&lt;/a&gt; built-in function.&lt;br&gt;&lt;br&gt; NULL = Encrypted.</column>
    <column name="uses_ansi_nulls" type="bit">Module was created with SET ANSI_NULLS ON.&lt;br&gt;&lt;br&gt; Will always be = 0 for rules and defaults.</column>
    <column name="uses_quoted_identifier" type="bit">Module was created with SET QUOTED_IDENTIFIER ON.</column>
    <column name="is_schema_bound" type="bit">Module was created with SCHEMABINDING option.&lt;br&gt;&lt;br&gt; Always contains a value of 1 for natively compiled stored procedures.</column>
    <column name="uses_database_collation" type="bit">1 = Schema-bound module definition depends on the default-collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the database's default collation.</column>
    <column name="is_recompiled" type="bit">Procedure was created WITH RECOMPILE option.</column>
    <column name="null_on_null_input" type="bit">Module was declared to produce a &lt;code&gt;NULL&lt;/code&gt; output on any &lt;code&gt;NULL&lt;/code&gt; input.</column>
    <column name="execute_as_principal_id" type="Int">ID of the EXECUTE AS database principal.&lt;br&gt;&lt;br&gt; &lt;code&gt;NULL&lt;/code&gt; by default or if EXECUTE AS CALLER.&lt;br&gt;&lt;br&gt; ID of the specified principal if EXECUTE AS SELF or EXECUTE AS &amp;lt;principal&amp;gt;.&lt;br&gt;&lt;br&gt; -2 = EXECUTE AS OWNER.</column>
    <column name="uses_native_compilation" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) through SQL Server 2014 (12.x).&lt;br&gt;&lt;br&gt; 0 = not natively compiled&lt;br&gt;&lt;br&gt; 1 = is natively compiled&lt;br&gt;&lt;br&gt; The default value is 0.</column>
    <column name="is_inlineable" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.&lt;br&gt;&lt;br&gt;Indicates whether the module is inlineable or not. Inlineability is based on the conditions specified &lt;a href="../user-defined-functions/scalar-udf-inlining?view=sql-server-ver15#inlineable-scalar-udfs-requirements" data-linktype="relative-path"&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt; 0 = not inlineable&lt;br&gt;&lt;br&gt; 1 = is inlineable. &lt;br&gt;&lt;br&gt; For scalar user-defined functions (UDFs), the value will be 1 if the UDF is inlineable, and 0 otherwise. It always contains a value of 1 for inline table-valued functions (TVFs), and 0 for all other module types.&lt;br&gt;</column>
    <column name="inline_type" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.&lt;br&gt;&lt;br&gt;Indicates whether inlining is turned on for the module currently. &lt;br&gt;&lt;br&gt;0 = inlining is turned off&lt;br&gt;&lt;br&gt; 1 = inlining is turned on.&lt;br&gt;&lt;br&gt; For scalar user-defined functions (UDFs), the value will be 1 if inlining is turned on (explicitly or implicitly). The value will always be 1 for inline table-valued functions (TVFs), and 0 for other module types.&lt;br&gt;</column>
  </table>
  <table name="sys.stats" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each statistics object that exists for the tables, indexes, and indexed views in the database in SQL Server. Every index will have a corresponding statistics row with the same name and ID (&lt;strong&gt;index_id&lt;/strong&gt; = &lt;strong&gt;stats_id&lt;/strong&gt;), but not every statistics row has a corresponding index.</description>
    <column name="object_id" type="int">ID of the object to which these statistics belong.</column>
    <column name="name" type="sysname">Name of the statistics. Is unique within the object.</column>
    <column name="stats_id" type="int">ID of the statistics. Is unique within the object.&lt;br&gt;&lt;br&gt;If statistics correspond to an index, the &lt;em&gt;stats_id&lt;/em&gt; value is the same as the &lt;em&gt;index_id&lt;/em&gt; value in the &lt;a href="sys-indexes-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.indexes&lt;/a&gt; catalog view.</column>
    <column name="auto_created" type="bit">Indicates whether the statistics were automatically created by SQL Server.&lt;br&gt;&lt;br&gt; 0 = Statistics were not automatically created by SQL Server.&lt;br&gt;&lt;br&gt; 1 = Statistics were automatically created by SQL Server.</column>
    <column name="user_created" type="bit">Indicates whether the statistics were created by a user.&lt;br&gt;&lt;br&gt; 0 = Statistics were not created by a user.&lt;br&gt;&lt;br&gt; 1 = Statistics were created by a user.</column>
    <column name="no_recompute" type="bit">Indicates whether the statistics were created with the &lt;strong&gt;NORECOMPUTE&lt;/strong&gt; option.&lt;br&gt;&lt;br&gt; 0 = Statistics were not created with the &lt;strong&gt;NORECOMPUTE&lt;/strong&gt; option.&lt;br&gt;&lt;br&gt; 1 = Statistics were created with the &lt;strong&gt;NORECOMPUTE&lt;/strong&gt; option.</column>
    <column name="has_filter" type="bit">0 = Statistics do not have a filter and are computed on all rows.&lt;br&gt;&lt;br&gt; 1 = Statistics have a filter and are computed only on rows that satisfy the filter definition.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in filtered statistics.&lt;br&gt;&lt;br&gt; NULL = Non-filtered statistics.</column>
    <column name="is_temporary" type="bit">Indicates whether the statistics is temporary. Temporary statistics support Always On availability groups secondary databases that are enabled for read-only access.&lt;br&gt;&lt;br&gt; 0 = The statistics is not temporary.&lt;br&gt;&lt;br&gt; 1 = The statistics is temporary.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2012 (11.x))</column>
    <column name="is_incremental" type="bit">Indicate whether the statistics are created as incremental statistics.&lt;br&gt;&lt;br&gt; 0 = The statistics are not incremental.&lt;br&gt;&lt;br&gt; 1 = The statistics are incremental.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2014 (12.x))</column>
    <column name="has_persisted_sample" type="bit">Indicates whether the statistics were created or updated with the PERSIST_SAMPLE_PERCENT option.&lt;br&gt;&lt;br&gt; &lt;strong&gt;0&lt;/strong&gt; = Statistics are not persisting the sample percentage.&lt;br&gt;&lt;br&gt; 1 = Statistics were created or updated with the PERSIST_SAMPLE_PERCENT option.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2019 (15.x))</column>
    <column name="stats_generation_method" type="int">Indicates the method by which statistics are created.&lt;br&gt;&lt;br&gt;&lt;strong&gt;0&lt;/strong&gt; = Sort based statistics&lt;br&gt;&lt;br&gt;1 = Internal use only&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2019 (15.x))</column>
    <column name="stats_generation_method_desc" type="varchar(255)">The text description of the method by which statistics are created.&lt;br&gt;&lt;br&gt;Sort based statistics&lt;br&gt;&lt;br&gt;Internal use only&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2019 (15.x))</column>
  </table>
  <table name="sys.stats_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-columns-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each column that is part of &lt;strong&gt;sys.stats&lt;/strong&gt; statistics.</description>
    <column name="object_id" type="int">ID of the object of which this column is part.</column>
    <column name="stats_id" type="int">ID of the statistics of which this column is part.&lt;br&gt;&lt;br&gt;If statistics correspond to an index, the &lt;em&gt;stats_id&lt;/em&gt; value is the same as the &lt;em&gt;index_id&lt;/em&gt; value in the &lt;a href="sys-indexes-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.indexes&lt;/a&gt; catalog view.</column>
    <column name="stats_column_id" type="int">1-based ordinal within set of stats columns.</column>
    <column name="column_id" type="int">ID of the column from &lt;strong&gt;sys.columns&lt;/strong&gt;.</column>
  </table>
  <table name="sys.synonyms" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-synonyms-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each synonym object that is &lt;strong&gt;sys.objects.type&lt;/strong&gt; = SN.</description>
    <column name="&amp;lt;Columns inherited from sys.objects&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="base_object_name" type="nvarchar(1035)">Fully quoted name of the object to which the user of this synonym is redirected.</column>
  </table>
  <table name="sys.system_columns" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-columns-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each column of system objects that have columns.</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br&gt;&lt;br&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system-type of the column</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of column.&lt;br&gt;&lt;br&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; For &lt;strong&gt;text&lt;/strong&gt; columns, the &lt;strong&gt;max_length&lt;/strong&gt; value will be 16 or the value set by &lt;strong&gt;sp_tableoption&lt;/strong&gt; 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise, NULL.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br&gt;&lt;br&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values.</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is declared to use filestream storage.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br&gt;&lt;br&gt; 0 = Content is a document fragment, or the column data type is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="xml_collection_id" type="int">Non-zero if the column data type is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the validating XML schema namespace of the column.&lt;br&gt;&lt;br&gt; 0 = No XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone &lt;a href="../system-stored-procedures/sp-bindefault-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.sp_bindefault&lt;/a&gt;, or an inline, column-level DEFAULT constraint. The &lt;strong&gt;parent_object_id&lt;/strong&gt; column of an inline column-level default object is a reference back to the table itself. Or, 0 if there is no default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using &lt;strong&gt;sys.sp_bindrule&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; 0 = No stand-alone rule.&lt;br&gt;&lt;br&gt; For column-level CHECK constraints, see &lt;a href="sys-check-constraints-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href="../tables/use-sparse-columns?view=sql-server-ver15" data-linktype="relative-path"&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href="../tables/use-column-sets?view=sql-server-ver15" data-linktype="relative-path"&gt;Use Column Sets&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br&gt;&lt;br&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br&gt;&lt;br&gt; 0 = NOT_APPLICABLE&lt;br&gt; 1 = AS_ROW_START&lt;br&gt; 2 = AS_ROW_END&lt;br&gt;7 = AS_TRANSACTION_ID_START&lt;br&gt;8 = AS_TRANSACTION_ID_END&lt;br&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../tables/temporal-tables?view=sql-server-ver15" data-linktype="relative-path"&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Textual description of &lt;code&gt;generated_always_type&lt;/code&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br&gt;&lt;br&gt; NOT_APPLICABLE&lt;br&gt; AS_ROW_START&lt;br&gt; AS_ROW_END&lt;br&gt;&lt;br&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br&gt;&lt;br&gt;AS_TRANSACTION_ID_START&lt;br&gt;AS_TRANSACTION_ID_END&lt;br&gt;AS_SEQUENCE_NUMBER_START&lt;br&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br&gt;&lt;br&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br&gt;&lt;br&gt; 1 = TRANSACTION_ID&lt;br&gt; 2 = SEQUENCE_NUMBER&lt;br&gt; 3 = OPERATION_TYPE&lt;br&gt; 4 = OPERATION_TYPE_DESC&lt;br&gt;&lt;br&gt;For more information on database ledger, see &lt;a href="/en-us/azure/azure-sql/database/ledger-overview" data-linktype="absolute-path"&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br&gt;&lt;br&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br&gt;&lt;br&gt; TRANSACTION_ID&lt;br&gt; SEQUENCE_NUMBER&lt;br&gt; OPERATION_TYPE&lt;br&gt; OPERATION_TYPE_DESC</column>
  </table>
  <table name="sys.system_objects" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-objects-transact-sql?view=sql-server-ver15">
    <description>Contains one row for all schema-scoped system objects that are included with Microsoft SQL Server. All system objects are contained in the schemas named sys or INFORMATION_SCHEMA.</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, another owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br&gt;&lt;br&gt; Is NULL if there is no other individual owner.&lt;br&gt;&lt;br&gt; Is NULL if the object type is one of the following:&lt;br&gt;&lt;br&gt; C = CHECK constraint&lt;br&gt;&lt;br&gt; D = DEFAULT (constraint or stand-alone)&lt;br&gt;&lt;br&gt; F = FOREIGN KEY constraint&lt;br&gt;&lt;br&gt; PK = PRIMARY KEY constraint&lt;br&gt;&lt;br&gt; R = Rule (old-style, stand-alone)&lt;br&gt;&lt;br&gt; TA = Assembly (CLR) trigger&lt;br&gt;&lt;br&gt; TR = SQL trigger&lt;br&gt;&lt;br&gt; UQ = UNIQUE constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br&gt;&lt;br&gt; For all schema-scoped system objects that included with SQL Server, this value will always be in (schema_id('sys'), schema_id('INFORMATION_SCHEMA'))</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br&gt;&lt;br&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br&gt;&lt;br&gt; AF = Aggregate function (CLR)&lt;br&gt;&lt;br&gt; C = CHECK constraint&lt;br&gt;&lt;br&gt; D = DEFAULT (constraint or stand-alone)&lt;br&gt;&lt;br&gt; F = FOREIGN KEY constraint&lt;br&gt;&lt;br&gt; FN = SQL scalar function&lt;br&gt;&lt;br&gt; FS = Assembly (CLR) scalar-function&lt;br&gt;&lt;br&gt; FT = Assembly (CLR) table-valued function&lt;br&gt;&lt;br&gt; IF = SQL inline table-valued function&lt;br&gt;&lt;br&gt; IT = Internal table&lt;br&gt;&lt;br&gt; P = SQL Stored Procedure&lt;br&gt;&lt;br&gt; PC = Assembly (CLR) stored-procedure&lt;br&gt;&lt;br&gt; PG = Plan guide&lt;br&gt;&lt;br&gt; PK = PRIMARY KEY constraint&lt;br&gt;&lt;br&gt; R = Rule (old-style, stand-alone)&lt;br&gt;&lt;br&gt; RF = Replication-filter-procedure&lt;br&gt;&lt;br&gt; S = System base table&lt;br&gt;&lt;br&gt; SN = Synonym&lt;br&gt;&lt;br&gt; SQ = Service queue&lt;br&gt;&lt;br&gt; TA = Assembly (CLR) DML trigger&lt;br&gt;&lt;br&gt; TF = SQL table-valued-function&lt;br&gt;&lt;br&gt; TR = SQL DML trigger&lt;br&gt;&lt;br&gt; TT = Table type&lt;br&gt;&lt;br&gt; U = Table (user-defined)&lt;br&gt;&lt;br&gt; UQ = UNIQUE constraint&lt;br&gt;&lt;br&gt; V = View&lt;br&gt;&lt;br&gt; X = Extended stored procedure</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type. AGGREGATE_FUNCTION&lt;br&gt;&lt;br&gt; CHECK_CONSTRAINT&lt;br&gt;&lt;br&gt; DEFAULT_CONSTRAINT&lt;br&gt;&lt;br&gt; FOREIGN_KEY_CONSTRAINT&lt;br&gt;&lt;br&gt; SQL_SCALAR_FUNCTION&lt;br&gt;&lt;br&gt; CLR_SCALAR_FUNCTION&lt;br&gt;&lt;br&gt; CLR_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; INTERNAL_TABLE&lt;br&gt;&lt;br&gt; SQL_STORED_PROCEDURE&lt;br&gt;&lt;br&gt; CLR_STORED_PROCEDURE&lt;br&gt;&lt;br&gt; PLAN_GUIDE&lt;br&gt;&lt;br&gt; PRIMARY_KEY_CONSTRAINT&lt;br&gt;&lt;br&gt; RULE&lt;br&gt;&lt;br&gt; REPLICATION_FILTER_PROCEDURE&lt;br&gt;&lt;br&gt; SYSTEM_TABLE&lt;br&gt;&lt;br&gt; SYNONYM&lt;br&gt;&lt;br&gt; SERVICE_QUEUE&lt;br&gt;&lt;br&gt; CLR_TRIGGER&lt;br&gt;&lt;br&gt; SQL_TABLE_VALUED_FUNCTION&lt;br&gt;&lt;br&gt; SQL_TRIGGER&lt;br&gt;&lt;br&gt; TABLE_TYPE&lt;br&gt;&lt;br&gt; USER_TABLE&lt;br&gt;&lt;br&gt; UNIQUE_CONSTRAINT&lt;br&gt;&lt;br&gt; VIEW&lt;br&gt;&lt;br&gt; EXTENDED_STORED_PROCEDURE</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when a clustered index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal Microsoft SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
  </table>
  <table name="sys.system_parameters" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-parameters-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each system object that has parameters.</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="name" type="sysname">Name of the parameter. Is unique within the object.&lt;br&gt;&lt;br&gt; If the object is a scalar function, the parameter name is an empty string in the row representing the return value.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the object. If the object is a scalar function, &lt;strong&gt;parameter_id&lt;/strong&gt; = 0 represents the return value.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter.</column>
    <column name="user_type_id" type="int">ID of the type of the parameter as defined by the user.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter, in bytes. Value will be -1 for when column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="precision" type="tinyint">Precision of the parameter if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is output (or return); otherwise, 0.</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor-reference parameter.</column>
    <column name="has_default_value" type="bit">1 = Parameter has default value.&lt;br&gt;&lt;br&gt; SQL Server only maintains default values for CLR objects in this catalog view; therefore, this column will always have a value of 0 for Transact-SQL objects. To view the default value of a parameter in a Transact-SQL object, query the &lt;strong&gt;definition&lt;/strong&gt; column of the &lt;a href="sys-sql-modules-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.sql_modules&lt;/a&gt; catalog view, or use the &lt;a href="../../t-sql/functions/object-definition-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;OBJECT_DEFINITION&lt;/a&gt; system function.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br&gt;&lt;br&gt; 0 = Content is a document fragment or the data type of the column is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="default_value" type="sql_variant">If &lt;strong&gt;has_default_value&lt;/strong&gt; is 1, the value of this column is the value of the default for the parameter; otherwise &lt;code&gt;NULL&lt;/code&gt;.</column>
    <column name="xml_collection_id" type="int">Non-zero if the data type of the parameter is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value is the ID of the collection that contains the validating XML schema namespace for the parameter.&lt;br&gt;&lt;br&gt; 0 = There is no XML schema collection.</column>
    <column name="is_readonly" type="bit">1 =  Parameter is READONLY; otherwise, 0.</column>
    <column name="is_nullable" type="bit">1 = Parameter is nullable. (the default).&lt;br&gt;&lt;br&gt; 0 = Parameter is not nullable, for more efficient execution of natively-compiled stored procedures.</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type:&lt;br&gt;&lt;br&gt; 1 = Deterministic encryption&lt;br&gt;&lt;br&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Encryption type description:&lt;br&gt;&lt;br&gt; RANDOMIZED&lt;br&gt;&lt;br&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; Name of encryption algorithm.&lt;br&gt;&lt;br&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br&gt;&lt;br&gt; The name of the database where the column encryption key exists if different than the database of the column. &lt;code&gt;NULL&lt;/code&gt; if the key exists in the same database as the column.</column>
  </table>
  <table name="sys.system_sql_modules" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-sql-modules-transact-sql?view=sql-server-ver15">
    <description>Returns one row per system object that contains an SQL language-defined module. System objects of type FN, IF, P, PC, TF, V have an associated SQL module. To identify the containing object, you can join this view to &lt;a href="sys-system-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.system_objects&lt;/a&gt;.</description>
    <column name="object_id" type="int">Object identification number of the containing object, unique within a database.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module.</column>
    <column name="uses_ansi_nulls" type="bit">1 = Module was created with the SET ANSI_NULLS database option ON.&lt;br&gt;&lt;br&gt; Always returns 1.</column>
    <column name="uses_quoted_identifier" type="bit">1 = Module was created with SET QUOTED_IDENTIFIER ON.&lt;br&gt;&lt;br&gt; Always returns 1.</column>
    <column name="is_schema_bound" type="bit">0 = Module was not created with the SCHEMABINDING option.&lt;br&gt;&lt;br&gt; Always returns 0.</column>
    <column name="uses_database_collation" type="bit">0 = Module does not depend on the default collation of the database.&lt;br&gt;&lt;br&gt; Always returns 0.</column>
    <column name="is_recompiled" type="bit">0 = Procedure was not created by using the WITH RECOMPILE option.&lt;br&gt;&lt;br&gt; Always returns 0.</column>
    <column name="null_on_null_input" type="bit">0 = Module was not created to produce a NULL output on any NULL input.&lt;br&gt;&lt;br&gt; Always returns 0.</column>
    <column name="execute_as_principal_id" type="int">Always returns NULL</column>
  </table>
  <table name="sys.system_views" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-views-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each system view that is shipped with SQL Server. All system views are contained in the schemas named &lt;strong&gt;sys&lt;/strong&gt; or &lt;strong&gt;INFORMATION_SCHEMA&lt;/strong&gt;.</description>
    <column name="&amp;lt;inherited columns&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_replicated" type="bit">1 = View is replicated.</column>
    <column name="has_replication_filter" type="bit">1 = View has a replication filter.</column>
    <column name="has_opaque_metadata" type="bit">1 = VIEW_METADATA option specified for view. For more information, see &lt;a href="../../t-sql/statements/create-view-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE VIEW (Transact-SQL)&lt;/a&gt;.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = Table contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Will be reset to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="with_check_option" type="bit">1 = WITH CHECK OPTION was specified in the view definition.</column>
    <column name="is_date_correlation_view" type="bit">1 = View was created automatically by the system to store correlation information between &lt;strong&gt;datetime&lt;/strong&gt; columns. Creation of this view was enabled by setting DATE_CORRELATION_OPTIMIZATION to ON.</column>
  </table>
  <table name="sys.table_types" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-table-types-transact-sql?view=sql-server-ver15">
    <description>Displays properties of user-defined table types in SQL Server. A table type is a type from which table variables or table-valued parameters could be declared. Each table type has a &lt;strong&gt;type_table_object_id&lt;/strong&gt; that is a foreign key into the &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects&lt;/a&gt; catalog view. You can use this ID column to query various catalog views, in a way that is similar to an &lt;strong&gt;object_id&lt;/strong&gt; column of a regular table, to discover the structure of the table type such as its columns and constraints.</description>
    <column name="&lt;em&gt;&amp;lt;inherited columns&amp;gt;&lt;/em&gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types (Transact-SQL)&lt;/a&gt;.</column>
    <column name="type_table_object_id" type="int">Object identification number. This number is unique within a database.</column>
    <column name="is_memory_optimized" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br&gt;&lt;br&gt; The following are the possible values:&lt;br&gt;&lt;br&gt; 0 = is not memory optimized&lt;br&gt;&lt;br&gt; 1 = is memory optimized&lt;br&gt;&lt;br&gt; A value of 0 is the default value.&lt;br&gt;&lt;br&gt; Table types are always created with DURABILITY = SCHEMA_ONLY. Only the schema is persisted on disk.</column>
  </table>
  <table name="sys.tables" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-tables-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each user table in SQL Server.</description>
    <column name="&amp;lt;inherited columns&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="lob_data_space_id" type="int">A nonzero value is the ID of the data space (filegroup or partition scheme) that holds the large object binary (LOB) data for this table. Examples of LOB data types include &lt;strong&gt;varbinary(max)&lt;/strong&gt;, &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;geography&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; 0 = The table does not LOB data.</column>
    <column name="filestream_data_space_id" type="int">Is the data space ID for a FILESTREAM filegroup or a partition scheme that consists of FILESTREAM filegroups.&lt;br&gt;&lt;br&gt; To report the name of a FILESTREAM filegroup, execute the query &lt;code&gt;SELECT FILEGROUP_NAME (filestream_data_space_id) FROM sys.tables&lt;/code&gt;.&lt;br&gt;&lt;br&gt; sys.tables can be joined to the following views on filestream_data_space_id = data_space_id.&lt;br&gt;&lt;br&gt; - sys.filegroups&lt;br&gt;&lt;br&gt; - sys.partition_schemes&lt;br&gt;&lt;br&gt; - sys.indexes&lt;br&gt;&lt;br&gt; - sys.allocation_units&lt;br&gt;&lt;br&gt; - sys.fulltext_catalogs&lt;br&gt;&lt;br&gt; - sys.data_spaces&lt;br&gt;&lt;br&gt; - sys.destination_data_spaces&lt;br&gt;&lt;br&gt; - sys.master_files&lt;br&gt;&lt;br&gt; - sys.database_files&lt;br&gt;&lt;br&gt; - backupfilegroup (join on filegroup_id)</column>
    <column name="max_column_id_used" type="int">Maximum column ID ever used by this table.</column>
    <column name="lock_on_bulk_load" type="bit">Table is locked on bulk load. For more information, see &lt;a href="../system-stored-procedures/sp-tableoption-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sp_tableoption (Transact-SQL)&lt;/a&gt;.</column>
    <column name="uses_ansi_nulls" type="bit">Table was created with the SET ANSI_NULLS database option ON.</column>
    <column name="is_replicated" type="bit">1 = Table is published using snapshot replication or transactional replication.</column>
    <column name="has_replication_filter" type="bit">1 = Table has a replication filter.</column>
    <column name="is_merge_published" type="bit">1 = Table is published using merge replication.</column>
    <column name="is_sync_tran_subscribed" type="bit">1 = Table is subscribed using an immediate updating subscription.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = Table contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Will be reset to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="text_in_row_limit" type="int">The maximum bytes allowed for text in row.&lt;br&gt;&lt;br&gt; 0 = Text in row option is not set. For more information, see &lt;a href="../system-stored-procedures/sp-tableoption-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sp_tableoption (Transact-SQL)&lt;/a&gt;.</column>
    <column name="large_value_types_out_of_row" type="bit">1 = Large value types are stored out-of-row. For more information, see &lt;a href="../system-stored-procedures/sp-tableoption-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sp_tableoption (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_tracked_by_cdc" type="bit">1 = Table is enabled for change data capture. For more information, see &lt;a href="../system-stored-procedures/sys-sp-cdc-enable-table-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.sp_cdc_enable_table (Transact-SQL)&lt;/a&gt;.</column>
    <column name="lock_escalation" type="tinyint">The value of the LOCK_ESCALATION option for the table:&lt;br&gt;&lt;br&gt; 0 = TABLE&lt;br&gt;&lt;br&gt; 1 = DISABLE&lt;br&gt;&lt;br&gt; 2 = AUTO</column>
    <column name="lock_escalation_desc" type="nvarchar(60)">A text description of the lock_escalation option for the table. Possible values are: TABLE, AUTO, and DISABLE.</column>
    <column name="is_filetable" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later and Azure SQL Database.&lt;br&gt;&lt;br&gt; 1 = Table is a FileTable.&lt;br&gt;&lt;br&gt; For more information about FileTables, see &lt;a href="../blob/filetables-sql-server?view=sql-server-ver15" data-linktype="relative-path"&gt;FileTables (SQL Server)&lt;/a&gt;.</column>
    <column name="durability" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later and Azure SQL Database.&lt;br&gt;&lt;br&gt; The following are possible values:&lt;br&gt;&lt;br&gt; 0 = SCHEMA_AND_DATA&lt;br&gt;&lt;br&gt; 1 = SCHEMA_ONLY&lt;br&gt;&lt;br&gt; The value of 0 is the default value.</column>
    <column name="durability_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later and Azure SQL Database.&lt;br&gt;&lt;br&gt; The following are the possible values:&lt;br&gt;&lt;br&gt; SCHEMA_ONLY&lt;br&gt;&lt;br&gt; SCHEMA_AND_DATA&lt;br&gt;&lt;br&gt; The value of SCHEMA_AND_DATA indicates that the table is a durable, in-memory table. SCHEMA_AND_DATA is the default value for memory optimized tables. The value of SCHEMA_ONLY indicates that the table data will not be persisted upon restart of the database with memory optimized objects.</column>
    <column name="is_memory_optimized" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later and Azure SQL Database.&lt;br&gt;&lt;br&gt; The following are the possible values:&lt;br&gt;&lt;br&gt; 0 = not memory optimized.&lt;br&gt;&lt;br&gt; 1 = is memory optimized.&lt;br&gt;&lt;br&gt; A value of 0 is the default value.&lt;br&gt;&lt;br&gt; Memory optimized tables are in-memory user tables, the schema of which is persisted on disk similar to other user tables. Memory optimized tables can be accessed from natively compiled stored procedures.</column>
    <column name="temporal_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database.&lt;br&gt;&lt;br&gt; The numeric value representing the type of table:&lt;br&gt;&lt;br&gt; 0 = NON_TEMPORAL_TABLE&lt;br&gt;&lt;br&gt; 1 = HISTORY_TABLE (associated with a temporal table)&lt;br&gt;&lt;br&gt; 2 = SYSTEM_VERSIONED_TEMPORAL_TABLE</column>
    <column name="temporal_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database.&lt;br&gt;&lt;br&gt; The text description of the type of table:&lt;br&gt;&lt;br&gt; NON_TEMPORAL_TABLE&lt;br&gt;&lt;br&gt; HISTORY_TABLE&lt;br&gt;&lt;br&gt; SYSTEM_VERSIONED_TEMPORAL_TABLE</column>
    <column name="history_table_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database.&lt;br&gt;&lt;br&gt; When temporal_type = 2 or ledger_type = 2 returns object_id of the table that maintains historical data for a temporal table, otherwise returns NULL.</column>
    <column name="is_remote_data_archive_enabled" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database&lt;br&gt;&lt;br&gt; Indicates whether the table is Stretch-enabled.&lt;br&gt;&lt;br&gt; 0 = The table is not Stretch-enabled.&lt;br&gt;&lt;br&gt; 1 = The table is Stretch-enabled.&lt;br&gt;&lt;br&gt; For more info, see &lt;a href="../../sql-server/stretch-database/stretch-database?view=sql-server-ver15" data-linktype="relative-path"&gt;Stretch Database&lt;/a&gt;.</column>
    <column name="is_external" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, and Azure Synapse Analytics.&lt;br&gt;&lt;br&gt; Indicates table is an external table.&lt;br&gt;&lt;br&gt; 0 = The table is not an external table.&lt;br&gt;&lt;br&gt; 1 = The table is an external table.</column>
    <column name="history_retention_period" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;The numeric value representing duration of the temporal history retention period in units specified with history_retention_period_unit.</column>
    <column name="history_retention_period_unit" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;The numeric value representing type of temporal history retention period unit. &lt;br&gt;&lt;br&gt;-1: INFINITE &lt;br&gt;&lt;br&gt;3: DAY &lt;br&gt;&lt;br&gt;4: WEEK &lt;br&gt;&lt;br&gt;5: MONTH &lt;br&gt;&lt;br&gt;6: YEAR</column>
    <column name="history_retention_period_unit_desc" type="nvarchar(10)">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;The text description of type of temporal history retention period unit. &lt;br&gt;&lt;br&gt;INFINITE &lt;br&gt;&lt;br&gt;DAY &lt;br&gt;&lt;br&gt;WEEK &lt;br&gt;&lt;br&gt;MONTH &lt;br&gt;&lt;br&gt;YEAR</column>
    <column name="is_node" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2017 (14.x) and Azure SQL Database. &lt;br&gt;&lt;br&gt;1 = This is a graph Node table. &lt;br&gt;&lt;br&gt;0 = This is not a graph Node table.</column>
    <column name="is_edge" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;1 = This is a graph Edge table. &lt;br&gt;&lt;br&gt;0 = This is not a graph Edge table.</column>
    <column name="ledger_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;The numeric value indicates if the table is a ledger table.&lt;br&gt;&lt;br&gt;0 = NON_LEDGER_TABLE&lt;br&gt;1 = HISTORY_TABLE (associated with an updatable ledger table)&lt;br&gt;2 = UPDATABLE_LEDGER_TABLE&lt;br&gt;3 = APPEND_ONLY_LEDGER_TABLE&lt;br&gt;&lt;br&gt;For more information on database ledger, see &lt;a href="/en-us/azure/azure-sql/database/ledger-overview" data-linktype="absolute-path"&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;The text description of a value in the ledger_type column:&lt;br&gt;&lt;br&gt;NON_LEDGER_TABLE&lt;br&gt;HISTORY_TABLE&lt;br&gt;UPDATABLE_LEDGER_TABLE&lt;br&gt;APPEND_ONLY_LEDGER_TABLE</column>
    <column name="ledger_view_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;When ledger_type IN (2,3) returns object_id of the ledger view, otherwise returns NULL.</column>
    <column name="is_dropped_ledger_table" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;Indicates a ledger table that has been dropped.</column>
  </table>
  <table name="sys.trigger_event_types" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trigger-event-types-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each event or event group on which a trigger can fire.</description>
    <column name="type" type="int">Type of event or event group that causes a trigger to fire.</column>
    <column name="type_name" type="nvarchar(64)">Name of an event or event group. This can be specified in the FOR clause of a &lt;a href="../../t-sql/statements/create-trigger-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE TRIGGER&lt;/a&gt; statement.</column>
    <column name="parent_type" type="int">Type of event group that is the parent of the event or event group.</column>
  </table>
  <table name="sys.trigger_events" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trigger-events-transact-sql?view=sql-server-ver15">
    <description>Contains a row per event for which a trigger fires.</description>
    <column name="&amp;lt;Columns inherited from sys.events&amp;gt;" type="Not applicable">Inherits the &lt;strong&gt;object_id&lt;/strong&gt;, &lt;strong&gt;type&lt;/strong&gt;, &lt;strong&gt;type_desc&lt;/strong&gt; columns from &lt;a href="sys-events-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.events&lt;/a&gt;.</column>
    <column name="is_first" type="bit">Trigger is marked to be the first to fire for this event.</column>
    <column name="is_last" type="bit">Trigger is marked to be the last to fire for this event.</column>
    <column name="event_group_type" type="int">Event group on which the trigger is created, or null if not created on an event group.</column>
    <column name="event_group_type_desc" type="nvarchar(60)">Description of the event group on which the trigger is created, or null if not created on an event group.</column>
  </table>
  <table name="sys.triggers" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-triggers-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each object that is a trigger, with a type of TR or TA. DML trigger names are schema-scoped and, therefore, are visible in &lt;strong&gt;sys.objects&lt;/strong&gt;. DDL trigger names are scoped by the parent entity and are only visible in this view.</description>
    <column name="name" type="sysname">Trigger name. DML trigger names are schema-scoped. DDL trigger names are scoped with respect to the parent entity.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="parent_class" type="tinyint">Class of the parent of the trigger.&lt;br&gt;&lt;br&gt; 0 = Database, for the DDL triggers.&lt;br&gt;&lt;br&gt; 1 = Object or column for the DML triggers.</column>
    <column name="parent_class_desc" type="nvarchar(60)">Description of the parent class of the trigger.&lt;br&gt;&lt;br&gt; DATABASE&lt;br&gt;&lt;br&gt; OBJECT_OR_COLUMN</column>
    <column name="parent_id" type="int">ID of the parent of the trigger, as follows:&lt;br&gt;&lt;br&gt; 0 = Triggers that are database-parented triggers.&lt;br&gt;&lt;br&gt; For DML triggers, this is the &lt;strong&gt;object_id&lt;/strong&gt; of the table or view on which the DML trigger is defined.</column>
    <column name="type" type="char(2)">Object type:&lt;br&gt;&lt;br&gt; TA = Assembly (CLR) trigger&lt;br&gt;&lt;br&gt; TR = SQL trigger</column>
    <column name="type_desc" type="nvarchar(60)">Description of object type.&lt;br&gt;&lt;br&gt; CLR_TRIGGER&lt;br&gt;&lt;br&gt; SQL_TRIGGER</column>
    <column name="create_date" type="datetime">Date the trigger was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement.</column>
    <column name="is_ms_shipped" type="bit">Trigger created on behalf of the user by an internal SQL Server component.</column>
    <column name="is_disabled" type="bit">Trigger is disabled.</column>
    <column name="is_not_for_replication" type="bit">Trigger was created as NOT FOR REPLICATION.</column>
    <column name="is_instead_of_trigger" type="bit">1 = INSTEAD OF triggers&lt;br&gt;&lt;br&gt; 0 = AFTER triggers.</column>
  </table>
  <table name="sys.views" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-views-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each view object, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = V.</description>
    <column name="&amp;lt;inherited columns&amp;gt;" type="">For a list of columns that this view inherits, see &lt;a href="sys-objects-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.objects (Transact-SQL)&lt;/a&gt;</column>
    <column name="is_replicated" type="bit">1 = View is replicated.</column>
    <column name="has_replication_filter" type="bit">1 = View has a replication filter.</column>
    <column name="has_opaque_metadata" type="bit">1 = VIEW_METADATA option specified for view. For more information, see &lt;a href="../../t-sql/statements/create-view-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE VIEW (Transact-SQL)&lt;/a&gt;.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = View contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Resets to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="with_check_option" type="bit">1 = WITH CHECK OPTION was specified in the view definition.</column>
    <column name="is_date_correlation_view" type="bit">1 = View was created automatically by the system to store correlation information between datetime columns. Creation of this view was enabled by setting DATE_CORRELATION_OPTIMIZATION to ON.</column>
    <column name="ledger_view_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;The numeric value indicating if a view is a ledger view for an updatable ledger table.&lt;br&gt;&lt;br&gt;0 = NON_LEDGER_VIEW&lt;br&gt;1 = LEDGER_VIEW&lt;br&gt;&lt;br&gt;For more information on database ledger, see &lt;a href="/en-us/azure/azure-sql/database/ledger-overview" data-linktype="absolute-path"&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;The text description of a value in the ledger_view_type column:&lt;br&gt;&lt;br&gt;NON_LEDGER_VIEW&lt;br&gt;LEDGER_VIEW</column>
    <column name="is_dropped_ledger_view" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br&gt;&lt;br&gt;Indicates a ledger view that has been dropped.</column>
  </table>
  <table name="sys.availability_databases_cluster" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-databases-cluster-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each availability database on the instance of SQL Server that is hosting an availability replica for any Always On availability group in the Windows Server Failover Clustering (WSFC) cluster, regardless of whether the local copy database has been joined to the availability group yet.</description>
    <column name="group_id" type="uniqueidentifier">Unique identifier of the availability group in which the availability group, if any, in which the database is participating.&lt;br&gt;&lt;br&gt; NULL = database is not part of an availability replica of in availability group.</column>
    <column name="group_database_id" type="uniqueidentifier">Unique identifier of the database within the availability group, if any, in which the database is participating. &lt;strong&gt;group_database_id&lt;/strong&gt; is the same for this database on the primary replica and on every secondary replica on which the database has been joined to the availability group.&lt;br&gt;&lt;br&gt; NULL = database is not part of an availability replica in any availability group.</column>
    <column name="database_name" type="sysname">Name of the database that was added to the availability group.</column>
  </table>
  <table name="sys.availability_group_listener_ip_addresses" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-group-listener-ip-addresses-transact-sql?view=sql-server-ver15">
    <description>Returns a row for every IP address that is associated with any Always On availability group listener in the Windows Server Failover Clustering (WSFC) cluster.</description>
    <column name="listener_id" type="nvarchar(36)">Resource GUID from Windows Server Failover Clustering (WSFC) cluster.</column>
    <column name="ip_address" type="nvarchar(48)">Configured virtual IP address of the availability group listener. Returns a single IPv4 or IPv6 address.</column>
    <column name="ip_subnet_mask" type="nvarchar(15)">Configured IP subnet mask for the IPv4 address, if any, that is configured for the availability group listener.&lt;br&gt;&lt;br&gt; NULL = IPv6 subnet</column>
    <column name="is_dhcp" type="bit">Whether the IP address is configured by DHCP, one of:&lt;br&gt;&lt;br&gt; 0 = IP address is not configured by DHCP.&lt;br&gt;&lt;br&gt; 1 = IP address is configured by DHCP</column>
    <column name="network_subnet_ip" type="nvarchar(48)">Network subnet IP address that specifies the subnet to which the IP address belongs.</column>
    <column name="network_subnet_prefix_length" type="int">Network subnet prefix length of the subnet to which the IP address belongs.</column>
    <column name="network_subnet_ipv4_mask" type="nvarchar(45)">Network subnet mask of the subnet to which the IP address belongs. &lt;strong&gt;network_subnet_ipv4_mask&lt;/strong&gt; to specify the DHCP &amp;lt;network_subnet_option&amp;gt; options in a WITH DHCP clause of the &lt;a href="../../t-sql/statements/create-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE AVAILABILITY GROUP&lt;/a&gt; or &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.&lt;br&gt;&lt;br&gt; NULL = IPv6 subnet</column>
    <column name="state" type="tinyint">IP resource ONLINE/OFFLINE state from the WSFC cluster, one of:&lt;br&gt;&lt;br&gt; 1 = Online. IP resource is online.&lt;br&gt;&lt;br&gt; 0 = Offline. IP resource is offline.&lt;br&gt;&lt;br&gt; 2 = Online Pending. IP resource is offline but is being brought online.&lt;br&gt;&lt;br&gt; 3 = Failed. IP resource was being brought online but failed.</column>
    <column name="state_desc" type="nvarchar(60)">Description of &lt;strong&gt;state&lt;/strong&gt;, one of:&lt;br&gt;&lt;br&gt; ONLINE&lt;br&gt;&lt;br&gt; OFFLINE&lt;br&gt;&lt;br&gt; ONLINE_PENDING&lt;br&gt;&lt;br&gt; FAILED</column>
  </table>
  <table name="sys.availability_group_listeners" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-group-listeners-transact-sql?view=sql-server-ver15">
    <description>For each Always On availability group, returns either zero rows indicating that no network name is associated with the availability group, or returns a row for each availability-group listener configuration in the Windows Server Failover Clustering (WSFC) cluster. This view displays the real-time configuration gathered from cluster.</description>
    <column name="group_id" type="uniqueidentifier">Availability group ID (&lt;strong&gt;group_id&lt;/strong&gt;) from &lt;a href="sys-availability-groups-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.availability_groups&lt;/a&gt;.</column>
    <column name="listener_id" type="nvarchar(36)">GUID from the cluster resource ID.</column>
    <column name="dns_name" type="nvarchar(63)">Configured network name (hostname) of the availability group listener.</column>
    <column name="port" type="int">The TCP port number configured for the availability group listener.&lt;br&gt;&lt;br&gt; NULL = Listener was configured outside SQL Server and its port number has not been added to the availability group. To add the port, pleaseuse the MODIFY LISTENER  option of the &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="is_conformant" type="bit">Whether this IP configuration is conformant, one of:&lt;br&gt;&lt;br&gt; 1 = Listener is conformant. Only &amp;quot;OR&amp;quot; relations exist among its Internet Protocol (IP) addresses. &lt;em&gt;Conformant&lt;/em&gt; encompasses every an IP configuration that was created by the &lt;a href="../../t-sql/statements/create-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CREATE AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement. In addition, if an IP configuration that was created outside of SQL Server, for example by using the WSFC Failover Cluster Manager, but can be modified by the ALTER AVAILABILITY GROUP tsql statement, the IP configuration qualifies as conformant.&lt;br&gt;&lt;br&gt; 0 = Listener is nonconformant. Typically, this indicates  an IP address that could not be configured by using SQL Server commands and, instead, was defined directly in the WSFC cluster.</column>
    <column name="ip_configuration_string_from_cluster" type="nvarchar(max)">Cluster IP configuration strings, if any, for this listener. NULL = Listener has no virtual IP addresses. For example:&lt;br&gt;&lt;br&gt; IPv4 address:  &lt;code&gt;65.55.39.10&lt;/code&gt;.&lt;br&gt;&lt;br&gt; IPv6 address:  &lt;code&gt;2001::4898:23:1002:20f:1fff:feff:b3a3&lt;/code&gt;</column>
  </table>
  <table name="sys.availability_groups" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-groups-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each availability group for which the local instance of SQL Server hosts an availability replica. Each row contains a cached copy of the availability group metadata.</description>
    <column name="group_id" type="uniqueidentifier">Unique identifier (GUID) of the availability group.</column>
    <column name="name" type="sysname">Name of the availability group. This is a user-specified name that must be unique within the Windows Server Failover Cluster (WSFC).</column>
    <column name="resource_id" type="nvarchar(40)">Resource ID for the WSFC cluster resource.</column>
    <column name="resource_group_id" type="nvarchar(40)">Resource Group ID for the WSFC cluster resource group of the availability group.</column>
    <column name="failure_condition_level" type="int">User-defined failure condition level under which an automatic failover must be triggered, one of the integer values shown in the table immediately below this table.&lt;br&gt;&lt;br&gt; The failure-condition levels (1-5) range from the least restrictive, level 1, to the most restrictive, level 5. A given condition level encompasses all of the less restrictive levels. Thus, the strictest condition level, 5, includes the four less restrictive condition levels (1-4), level 4 includes levels 1-3, and so forth.&lt;br&gt;&lt;br&gt; To change this value, use the FAILURE_CONDITION_LEVEL option of the &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="health_check_timeout" type="int">Wait time (in milliseconds) for the &lt;a href="../system-stored-procedures/sp-server-diagnostics-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sp_server_diagnostics&lt;/a&gt; system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding. The default value is 30000 milliseconds (30 seconds).&lt;br&gt;&lt;br&gt; To change this value, use the HEALTH_CHECK_TIMEOUT option of the &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="automated_backup_preference" type="tinyint">Preferred location for performing backups on the availability databases in this availability group. The following are the possible values and their descriptions.&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; 0 : Primary. Backups should always occur on the primary replica.&lt;br&gt;&lt;br&gt; 1 : Secondary only. Performing backups on a secondary replica is preferable.&lt;br&gt;&lt;br&gt; 2 : Prefer Secondary. Performing backups on a secondary replica preferable, but performing backups on the primary replica is acceptable if no secondary replica is available for backup operations. This is the default behavior.&lt;br&gt;&lt;br&gt; 3 : Any Replica. No preference about whether backups are performed on the primary replica or on a secondary replica.&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../../database-engine/availability-groups/windows/active-secondaries-backup-on-secondary-replicas-always-on-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;Active Secondaries: Backup on Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="automated_backup_preference_desc" type="nvarchar(60)">Description of &lt;strong&gt;automated_backup_preference&lt;/strong&gt;, one of:&lt;br&gt;&lt;br&gt; PRIMARY&lt;br&gt;&lt;br&gt; SECONDARY_ONLY&lt;br&gt;&lt;br&gt; SECONDARY&lt;br&gt;&lt;br&gt; NONE</column>
    <column name="version" type="smallint">The version of the availability group metadata stored in the Windows Failover Cluster. This version number is incremented when new features are added.</column>
    <column name="basic_features" type="bit">Specifies whether this is a Basic availability group. For more information, see &lt;a href="../../database-engine/availability-groups/windows/basic-availability-groups-always-on-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;Basic Availability Groups (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="dtc_support" type="bit">Specifies whether DTC support has been enabled for this availability group. The &lt;strong&gt;DTC_SUPPORT&lt;/strong&gt; option of &lt;strong&gt;CREATE AVAILABILITY GROUP&lt;/strong&gt; controls this setting.</column>
    <column name="db_failover" type="bit">Specifies whether the availability group supports failover for database health conditions. The &lt;strong&gt;DB_FAILOVER&lt;/strong&gt; option of &lt;strong&gt;CREATE AVAILABILITY GROUP&lt;/strong&gt; controls this setting.</column>
    <column name="is_distributed" type="bit">Specifies whether this is a distributed availability group. For more information, see &lt;a href="../../database-engine/availability-groups/windows/distributed-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;Distributed Availability Groups (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="cluster_type" type="tinyint">0: Windows Server failover cluster &lt;br&gt;&lt;br&gt;1: External cluster (for example, Linux Pacemaker)&lt;br&gt;&lt;br&gt;2: None</column>
    <column name="cluster_type_desc" type="nvarchar(60)">Text description of cluster type</column>
    <column name="required_synchronized_secondaries_to_commit" type="int">The number of secondary replicas that must be in a synchronized state for a commit  to complete</column>
    <column name="sequence_number" type="bigint">Identifies the availability group configuration sequence. Incrementally increases every time the availability group primary replica updates the configuration of the group.</column>
    <column name="is_contained" type="bit">1: Big data cluster master instance configured for high-availability. &lt;br&gt;&lt;br&gt; 0: all other.</column>
  </table>
  <table name="sys.availability_groups_cluster" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-groups-cluster-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each Always On availability group in the Windows Server Failover Clustering (WSFC) . Each row contains the availability group metadata from the WSFC cluster.</description>
    <column name="group_id" type="uniqueidentifier">Unique identifier (GUID) of the availability group.</column>
    <column name="name" type="sysname">Name of the availability group. This is a user-specified name that must be unique within the Windows Server Failover Cluster (WSFC).</column>
    <column name="resource_id" type="nvarchar(40)">Resource ID for the WSFC cluster resource.</column>
    <column name="resource_group_id" type="nvarchar(40)">Resource Group ID for the WSFC cluster resource group of the availability group.</column>
    <column name="failure_condition_level" type="int">User-defined failure condition level under which an automatic failover must be triggered, one of the following integer values:&lt;br&gt;&lt;br&gt; 1: Specifies that an automatic failover should be initiated when any of the following occurs: &lt;br&gt;- The SQL Server service is down.&lt;br&gt;- The lease of the availability group for connecting to the WSFC failover cluster expires because no ACK is received from the server instance. For more information, see &lt;a href="https://techcommunity.microsoft.com/t5/sql-server-support/how-it-works-sql-server-alwayson-lease-timeout/ba-p/317268" data-linktype="external"&gt;How It Works: SQL Server Always On Lease Timeout&lt;/a&gt;.&lt;br&gt;&lt;br&gt; 2: Specifies that an automatic failover should be initiated when any of the following occurs:  &lt;br&gt;- The instance of SQL Server does not connect to cluster, and the user-specified &lt;strong&gt;health_check_timeout&lt;/strong&gt; threshold of the availability group is exceeded. &lt;br&gt;- The availability replica is in failed state. &lt;br&gt;3: Specifies that an automatic failover should be initiated on critical SQL Server internal errors, such as orphaned spinlocks, serious write-access violations, or too much dumping. This is the default value. &lt;br&gt;4: Specifies that an automatic failover should be initiated on moderate SQL Server internal errors, such as a persistent out-of-memory condition in the SQL Server internal resource pool.&lt;br&gt;5: Specifies that an automatic failover should be initiated on any qualified failure conditions, including:&lt;br&gt;- Exhaustion of SQL Engine worker-threads. &lt;br&gt;- Detection of an unsolvable deadlock.&lt;br&gt;&lt;br&gt; The failure-condition levels (1-5) range from the least restrictive, level 1, to the most restrictive, level 5. A given condition level encompasses all of the less restrictive levels. Thus, the strictest condition level, 5, includes the four less restrictive condition levels (1-4), level 4 includes levels 1-3, and so forth.&lt;br&gt;&lt;br&gt; To change this value, use the FAILURE_CONDITION_LEVEL option of the &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="health_check_timeout" type="int">Wait time (in milliseconds) for the &lt;a href="../system-stored-procedures/sp-server-diagnostics-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sp_server_diagnostics&lt;/a&gt; system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding. The default value is 30000 milliseconds (30 seconds).&lt;br&gt;&lt;br&gt; To change this value, use the HEALTH_CHECK_TIMEOUT option of &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="automated_backup_preference" type="tinyint">Preferred location for performing backups on the availability databases in this availability group. One of the following values:&lt;br&gt;&lt;br&gt; 0: Primary. Backups should always occur on the primary replica.&lt;br&gt;1: Secondary only. Performing backups on a secondary replica is preferable.&lt;br&gt;2: Prefer Secondary. Performing backups on a secondary replica preferable, but performing backups on the primary replica is acceptable if no secondary replica is available for backup operations. This is the default behavior.&lt;br&gt;3: Any Replica. No preference about whether backups are performed on the primary replica or on a secondary replica.&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../../database-engine/availability-groups/windows/active-secondaries-backup-on-secondary-replicas-always-on-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;Active Secondaries: Backup on Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="automated_backup_preference_desc" type="nvarchar(60)">Description of &lt;strong&gt;automated_backup_preference&lt;/strong&gt;, one of:&lt;br&gt;&lt;br&gt; PRIMARY&lt;br&gt;&lt;br&gt; SECONDARY_ONLY&lt;br&gt;&lt;br&gt; SECONDARY&lt;br&gt;&lt;br&gt; NONE</column>
  </table>
  <table name="sys.availability_read_only_routing_lists" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-read-only-routing-lists-transact-sql?view=sql-server-ver15">
    <description>Returns a row for the read only routing list of each availability replica in an Always On availability group in the WSFC failover cluster.</description>
    <column name="replica_id" type="uniqueidentifier">Unique ID of the availability replica that owns the routing list.</column>
    <column name="routing_priority" type="int">Priority order for routing (1 is first, 2 is second, and so forth).</column>
    <column name="read_only_replica_id" type="uniqueidentifier">Unique ID of the availability replica to which a read-only workload will be routed.</column>
  </table>
  <table name="sys.availability_replicas" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-replicas-transact-sql?view=sql-server-ver15">
    <description>Returns a row for each of the availability replicas that belong to any Always On availability group in the WSFC failover cluster.</description>
    <column name="replica_id" type="uniqueidentifier">Unique ID of the replica.</column>
    <column name="group_id" type="uniqueidentifier">Unique ID of the availability group to which the replica belongs.</column>
    <column name="replica_metadata_id" type="int">ID for the local metadata object for availability replicas in the Database Engine.</column>
    <column name="replica_server_name" type="nvarchar(256)">Server name of the instance of SQL Server that is hosting this replica and, for a non-default instance, its instance name.</column>
    <column name="owner_sid" type="varbinary(85)">Security identifier (SID) registered to this server instance for the external owner of this availability replica.&lt;br&gt;&lt;br&gt; NULL for non-local availability replicas.</column>
    <column name="endpoint_url" type="nvarchar(128)">String representation of the user-specified database mirroring endpoint that is used by connections between primary and secondary replicas for data synchronization. For information about the syntax of endpoint URLs, see &lt;a href="../../database-engine/availability-groups/windows/specify-endpoint-url-adding-or-modifying-availability-replica?view=sql-server-ver15" data-linktype="relative-path"&gt;Specify the Endpoint URL When Adding or Modifying an Availability Replica (SQL Server)&lt;/a&gt;.&lt;br&gt;&lt;br&gt; NULL = Unable to talk to the WSFC failover cluster.&lt;br&gt;&lt;br&gt; To change this endpoint, use the ENDPOINT_URL option of &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="availability_mode" type="tinyint">The availability mode of the replica, one of:&lt;br&gt;&lt;br&gt; 0 | Asynchronous commit. The primary replica can commit transactions without waiting for the secondary to write the log to disk.&lt;br&gt;&lt;br&gt; 1 | Synchronous commit. The primary replica waits to commit a given transaction until the secondary replica has written the transaction to disk.&lt;br&gt;&lt;br&gt;4 | Configuration only. The primary replica sends availability group configuration metadata to the replica synchronously. User data is not transmitted to the replica. Available in SQL Server 2017 CU1 and later.&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../../database-engine/availability-groups/windows/availability-modes-always-on-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;Availability Modes (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="availability_mode_desc" type="nvarchar(60)">Description of &lt;strong&gt;availability_mode&lt;/strong&gt;, one of:&lt;br&gt;&lt;br&gt; ASYNCHRONOUS_COMMIT&lt;br&gt;&lt;br&gt; SYNCHRONOUS_COMMIT&lt;br&gt;&lt;br&gt; CONFIGURATION_ONLY&lt;br&gt;&lt;br&gt; To change this the availability mode of an availability replica, use the AVAILABILITY_MODE option of &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.&lt;br&gt;&lt;br&gt;You cannot change the availability mode of a replica to CONFIGURATION_ONLY. You cannot change a CONFIGURATION_ONLY replica to a secondary or primary replica.</column>
    <column name="failover_mode" type="tinyint">The &lt;a href="../../database-engine/availability-groups/windows/failover-and-failover-modes-always-on-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;failover mode&lt;/a&gt; of the availability replica, one of:&lt;br&gt;&lt;br&gt; 0 | Automatic failover. The replica is a potential target for automatic failovers.  Automatic failover is supported only if the availability mode is set to synchronous commit (&lt;strong&gt;availability_mode&lt;/strong&gt; = 1) and the availability replica is currently synchronized.&lt;br&gt;&lt;br&gt; 1 | Manual failover. A failover to a secondary replica set to manual failover must be manually initiated by the database administrator. The type of failover that is performed will depend on whether the secondary replica is synchronized, as follows:&lt;br&gt;&lt;br&gt; If the availability replica is not synchronizing or is still synchronizing, only forced failover (with possible data loss) can occur.&lt;br&gt;&lt;br&gt; If the availability mode is set to synchronous commit (&lt;strong&gt;availability_mode&lt;/strong&gt; = 1) and the availability replica is currently synchronized, manual failover without data loss can occur.&lt;br&gt;&lt;br&gt; To view a rollup of the database synchronization health of every availability database in an availability replica, use the &lt;strong&gt;synchronization_health&lt;/strong&gt; and &lt;strong&gt;synchronization_health_desc&lt;/strong&gt; columns of  the &lt;a href="../system-dynamic-management-views/sys-dm-hadr-availability-replica-states-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.dm_hadr_availability_replica_states&lt;/a&gt; dynamic management view. The rollup considers the synchronization state of every availability database and the availability mode of its availability replica.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Note:&lt;/strong&gt; To view the synchronization health of a given availability database, query the &lt;strong&gt;synchronization_state&lt;/strong&gt; and &lt;strong&gt;synchronization_health&lt;/strong&gt; columns of the &lt;a href="../system-dynamic-management-views/sys-dm-hadr-database-replica-states-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.dm_hadr_database_replica_states&lt;/a&gt; dynamic management view.</column>
    <column name="failover_mode_desc" type="nvarchar(60)">Description of &lt;strong&gt;failover_mode&lt;/strong&gt;, one of:&lt;br&gt;&lt;br&gt; MANUAL&lt;br&gt;&lt;br&gt; AUTOMATIC&lt;br&gt;&lt;br&gt; To change the failover mode, use the FAILOVER_MODE option of &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="session_timeout" type="int">The time-out period, in seconds. The time-out period is the maximum time that the replica waits to receive a message  from another replica before considering connection between the primary and secondary replica have failed. Session timeout detects whether secondaries are connected the primary replica.&lt;br&gt;&lt;br&gt; On detecting a failed connection with a secondary replica, the primary replica  considers the secondary replica to be NOT_SYNCHRONIZED. On detecting a failed connection with the primary replica, a secondary replica simply attempts to reconnect.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Note:&lt;/strong&gt; Session timeouts do not cause automatic failovers.&lt;br&gt;&lt;br&gt; To change this value, use the SESSION_TIMEOUT option of &lt;a href="../../t-sql/statements/alter-availability-group-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact-SQL statement.</column>
    <column name="primary_role_allow_connections" type="tinyint">Whether the availability allows all connections or only read-write connections, one of:&lt;br&gt;&lt;br&gt; 2 = All (default)&lt;br&gt;&lt;br&gt; 3 = Read write</column>
    <column name="primary_role_allow_connections_desc" type="nvarchar(60)">Description of &lt;strong&gt;primary_role_allow_connections&lt;/strong&gt;, one of:&lt;br&gt;&lt;br&gt; ALL&lt;br&gt;&lt;br&gt; READ_WRITE</column>
    <column name="secondary_role_allow_connections" type="tinyint">Whether an availability replica that is performing the secondary role (that is, a secondary replica) can accept connections from clients, one of:&lt;br&gt;&lt;br&gt; 0 = No. No connections are allowed to the databases in the secondary replica, and the databases are not available for read access. This is the default setting.&lt;br&gt;&lt;br&gt; 1 = Read only. Only read-only connections are allowed to the databases in the secondary replica. All database(s) in the replica are available for read access.&lt;br&gt;&lt;br&gt; 2 = All. All connections are allowed to the databases in the secondary replica for read-only access.&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../../database-engine/availability-groups/windows/active-secondaries-readable-secondary-replicas-always-on-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;Active Secondaries: Readable Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="secondary_role_allow_connections_desc" type="nvarchar(60)">Description of &lt;strong&gt;secondary_role_allow_connections&lt;/strong&gt;, one of:&lt;br&gt;&lt;br&gt; NO&lt;br&gt;&lt;br&gt; READ_ONLY&lt;br&gt;&lt;br&gt; ALL</column>
    <column name="create_date" type="datetime">Date that the replica was created.&lt;br&gt;&lt;br&gt; NULL = Replica not on this server instance.</column>
    <column name="modify_date" type="datetime">Date that the replica was last modified.&lt;br&gt;&lt;br&gt; NULL = Replica not on this server instance.</column>
    <column name="backup_priority" type="int">Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group. The value is an integer in the range of 0..100.&lt;br&gt;&lt;br&gt; For more information, see &lt;a href="../../database-engine/availability-groups/windows/active-secondaries-backup-on-secondary-replicas-always-on-availability-groups?view=sql-server-ver15" data-linktype="relative-path"&gt;Active Secondaries: Backup on Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="read_only_routing_url" type="nvarchar(256)">Connectivity endpoint (URL) of the read only availability replica. For more information, see &lt;a href="../../database-engine/availability-groups/windows/configure-read-only-routing-for-an-availability-group-sql-server?view=sql-server-ver15" data-linktype="relative-path"&gt;Configure Read-Only Routing for an Availability Group (SQL Server)&lt;/a&gt;.</column>
    <column name="seeding_mode" type="tinyint">One of: &lt;br&gt; 0: Automatic &lt;/br&gt;&lt;br&gt; 1: Manual</column>
    <column name="seeding_mode_desc" type="nvarchar(60)">Describes seeding mode. &lt;br&gt; AUTOMATIC &lt;/br&gt;&lt;br&gt;MANUAL</column>
  </table>
  <table name="sys.assembly_types" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-types-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each user-defined type that is defined by a CLR assembly. The following &lt;strong&gt;sys.assembly_types&lt;/strong&gt; appear in the list of inherited columns (see &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types (Transact-SQL)&lt;/a&gt;) after &lt;strong&gt;rule_object_id&lt;/strong&gt;.</description>
    <column name="assembly_id" type="int">ID of the assembly from which this type was created.</column>
    <column name="assembly_class" type="sysname">Name of the class within the assembly that defines this type.</column>
    <column name="is_binary_ordered" type="bit">Sorting the bytes of this type is equivalent to sorting using comparison operators on the type.</column>
    <column name="is_fixed_length" type="bit">Length of the type is always the same as max_length.</column>
    <column name="prog_id" type="nvarchar(40)">ProgID of the type as exposed to COM.</column>
    <column name="assembly_qualified_name" type="nvarchar(4000)">Assembly qualified type name. The name is in a format suitable to be passed to Type.GetType().</column>
  </table>
  <table name="sys.types" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql?view=sql-server-ver15">
    <description>Contains a row for each system and user-defined type.</description>
    <column name="name" type="sysname">Name of the type. Is unique within the schema.</column>
    <column name="system_type_id" type="tinyint">ID of the internal system-type of the type.</column>
    <column name="user_type_id" type="int">ID of the type. Is unique within the database. For system data types, &lt;strong&gt;user_type_id&lt;/strong&gt; = &lt;strong&gt;system_type_id&lt;/strong&gt;.</column>
    <column name="schema_id" type="int">ID of the schema to which the type belongs.</column>
    <column name="principal_id" type="int">ID of the individual owner if different from schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br&gt;&lt;br&gt; NULL if there is no alternate individual owner.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the type.&lt;br&gt;&lt;br&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br&gt;&lt;br&gt; For &lt;strong&gt;text&lt;/strong&gt; columns, the &lt;strong&gt;max_length&lt;/strong&gt; value will be 16.</column>
    <column name="precision" type="tinyint">Max precision of the type if it is numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Max scale of the type if it is numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the type if it is character-based; other wise, NULL.</column>
    <column name="is_nullable" type="bit">Type is nullable.</column>
    <column name="is_user_defined" type="bit">1 = User-defined type.&lt;br&gt;&lt;br&gt; 0 = SQL Server system data type.</column>
    <column name="is_assembly_type" type="bit">1 = Implementation of the type is defined in a CLR assembly.&lt;br&gt;&lt;br&gt; 0 = Type is based on a SQL Server system data type.</column>
    <column name="default_object_id" type="int">ID of the stand-alone default that is bound to the type by using &lt;a href="../system-stored-procedures/sp-bindefault-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sp_bindefault&lt;/a&gt;.&lt;br&gt;&lt;br&gt; 0 = No default exists.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule that is bound to the type by using &lt;a href="../system-stored-procedures/sp-bindrule-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sp_bindrule&lt;/a&gt;.&lt;br&gt;&lt;br&gt; 0 = No rule exists.</column>
    <column name="is_table_type" type="bit">Indicates the type is a table.</column>
  </table>
  <table name="sys.type_assembly_usages" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-type-assembly-usages-transact-sql?view=sql-server-ver15">
    <description>Contains one row per type to assembly reference.</description>
    <column name="user_type_id" type="int">ID of the type&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="assembly_id" type="int">ID of the assembly</column>
  </table>
  <table name="sys.column_type_usages" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-type-usages-transact-sql?view=sql-server-ver15">
    <description>Contains one row for each column that is of user-defined type.</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.</column>
    <column name="user_type_id" type="int">ID of the user-defined type.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
  </table>
  <table name="sys.parameter_type_usages" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameter-type-usages-transact-sql?view=sql-server-ver15">
    <description>Returns one row for each parameter that is of user-defined type.</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the object.</column>
    <column name="user_type_id" type="int">ID of the user-defined type.&lt;br&gt;&lt;br&gt; To return the name of the type, join to the &lt;a href="sys-types-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
  </table>
  <table name="sys.index_resumable_operations" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-index-resumable-operations?view=sql-server-ver15">
    <description>&lt;strong&gt;sys.index_resumable_operations&lt;/strong&gt; is a system view that monitors and checks the current execution status for resumable Index rebuild or creation.&lt;br&gt;
&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (2017 and newer), and Azure SQL Database</description>
    <column name="object_id" type="int">ID of the object to which this index belongs (not nullable).</column>
    <column name="index_id" type="int">ID of the index (not nullable). &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.</column>
    <column name="sql_text" type="nvarchar(max)">DDL T-SQL statement text</column>
    <column name="last_max_dop" type="smallint">Last MAX_DOP used (default = 0)</column>
    <column name="partition_number" type="int">Partition number within the owning index or heap. For non-partitioned tables and indexes or in case all partitions are being rebuild the value of this column is NULL.</column>
    <column name="state" type="tinyint">Operational state for resumable index:&lt;br&gt;&lt;br&gt;0=Running&lt;br&gt;&lt;br&gt;1=Pause</column>
    <column name="state_desc" type="nvarchar(60)">Description of the operational state for resumable index (running or Paused)</column>
    <column name="start_time" type="datetime">Index operation start time (not nullable)</column>
    <column name="last_pause_time" type="datatime">Index operation last pause time (nullable). NULL if operation is running and never paused.</column>
    <column name="total_execution_time" type="int">Total execution time from start time in minutes (not nullable)</column>
    <column name="percent_complete" type="real">Index operation progress completion in % ( not nullable).</column>
    <column name="page_count" type="bigint">Total number of index pages allocated by the index build operation for the new and mapping indexes ( not nullable ).</column>
  </table>
  <table name="sys.change_tracking_databases" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/change-tracking-catalog-views-sys-change-tracking-databases?view=sql-server-ver15">
    <description>Returns one row for each database that has change tracking enabled.</description>
    <column name="database_id" type="int">ID of the database. This is unique within the instance of SQL Server.</column>
    <column name="is_auto_cleanup_on" type="bit">Indicates whether change tracking data is automatically cleaned up after the configured retention period:&lt;br&gt;&lt;br&gt; 0 = Off&lt;br&gt;&lt;br&gt; 1 = On</column>
    <column name="retention_period" type="int">If autocleanup is being used, the retention period specifies how long the change tracking data is kept in the database.</column>
    <column name="retention_period_units_desc" type="nvarchar(60)">Specifies the description of the retention period:&lt;br&gt;&lt;br&gt; Minutes&lt;br&gt;&lt;br&gt; Hours&lt;br&gt;&lt;br&gt; Days</column>
    <column name="retention_period_units" type="tinyint">Unit of time for the retention period:&lt;br&gt;&lt;br&gt; 1 = Minutes&lt;br&gt;&lt;br&gt; 2 = Hours&lt;br&gt;&lt;br&gt; 3 = Days</column>
  </table>
  <table name="sys.change_tracking_tables" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/change-tracking-catalog-views-sys-change-tracking-tables?view=sql-server-ver15">
    <description>Returns one row for each table in the current database that has change tracking enabled.</description>
    <column name="object_id" type="int">ID of a table that has a change journal. The table can have a change journal even if change tracking is currently off.&lt;br&gt;&lt;br&gt; The table ID is unique within the database.</column>
    <column name="is_track_columns_updated_on" type="bit">Current state of change tracking on the table:&lt;br&gt;&lt;br&gt; 0 = OFF&lt;br&gt;&lt;br&gt; 1 = ON</column>
    <column name="begin_version" type="bigint">Version of the database when change tracking began for the table. This version is usually indicates when change tracking was enabled, but this value is reset if the table is truncated.</column>
    <column name="cleanup_version" type="bigint">Version up to which cleanup might have removed change tracking information.</column>
    <column name="min_valid_version" type="bigint">Minimum valid version of change tracking information that is available for the table.&lt;br&gt;&lt;br&gt; When obtaining changes from the table that is associated with this row, the value of last_sync_version must be greater than or equal to the version reported by this column. For more information, see &lt;a href="../system-functions/change-tracking-min-valid-version-transact-sql?view=sql-server-ver15" data-linktype="relative-path"&gt;CHANGE_TRACKING_MIN_VALID_VERSION (Transact-SQL)&lt;/a&gt;.</column>
  </table>
</tables>