//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/igor-tkachev/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml.Serialization;

using T4Model.Tests;

namespace T4Model.Tests
{
	public partial class TestClass1 : INotifyPropertyChanged
	{
		#region Test Region

		[XmlArrayItem(typeof(int), DataType="List")                                                ] public int    Field1;
		[                                            XmlArray("Name1")                             ] public string Field2;
		[XmlArrayItem(typeof(int), DataType="List"), XmlArray("Name21"), XmlArrayItem(typeof(char))] public string Field21;
		[XmlAttribute("Name1", typeof(int)),         XmlArray("N2")                                ] public string Field221  { get; set; }
		                                                                                             public string Field2212;
		[XmlAttribute("Nm1", typeof(int))                                                          ] public string Field23;
		[XmlElement("Nm1", typeof(int)),             XmlElement                                    ] public string Field23a;

		#endregion

		#region Test Region 2

		public int    Field12;                                                        // Field3 comnt
		public string Field22_____;
		public string PField121    { get; set; }
		public string PField221    { get { var a = 1; return null; } }
		public string PField222    { get { return null; } }                           // Field3 comment
		public string PField23     { get { return null; } set { value.ToString(); } } // Fieomment

		#endregion

		[XmlArrayItem(typeof(int), DataType="List")]
		public List<int> Field3; // Field3 comment

		[DisplayName("Prop"), XmlArrayItem(typeof(int), DataType="List")]
		public char Property1 // Property1 comment
		{
			get
			{
				int a = 1;
				return 'a';
			}
			set
			{
				var a = value;
				a.ToString();
			}
		}

		public char Property11
		{
			get { return 'a'; }
			set { var a = value; }
		}

		public List<int> Field31;

		public double Field5;

		public List<int> Field6;

		public double       Fld7;                               // Fld7
		public List<int>    Field8;
		public DateTime     FieldLongName;                      // field long name
		public List<string> Property2     { get;         set; } // Property2
		public List<int?>   Property3     { get; private set; } // Property3
		public int?         Prop1         { get;         set; } // Prop1

		public List<string> Field4;

		#region Group : string

		private string _testProperty1;

		public  string  TestProperty1
		{
			get { return _testProperty1; }
			set
			{
				if (value != _testProperty1)
				{
					BeforePropertyChanged(value);
					_testProperty1 = value;
					AfterPropertyChanged();

					OnTestProperty1Changed();
				}
			}
		}

		partial void BeforePropertyChanged (string newValue);
		partial void AfterPropertyChanged  ();
		private void OnTestProperty1Changed()                { OnPropertyChanged("TestProperty1"); }

		#endregion

		#region INotifyPropertyChanged

		public event PropertyChangedEventHandler PropertyChanged;

		protected void OnPropertyChanged(string propertyName)
		{
			OnPropertyChanged("TestProperty1");
		}

		#endregion
	}

	[Serializable, DisplayName("TestClass")]
	public partial class TestClass2 : TestClass1
	{
	}
}
