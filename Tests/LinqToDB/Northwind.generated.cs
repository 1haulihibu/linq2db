//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/igor-tkachev/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;

using LinqToDB;
using LinqToDB.Mapping;

using Microsoft.SqlServer.Types;

namespace DataModel
{
	/// <summary>
	/// Database       : TestData
	/// Data Source    : DBHost\SQLSERVER2008
	/// Server Version : 10.50.4000
	/// </summary>
	public partial class TestDataDB : LinqToDB.Data.DataConnection
	{
		public Table<AllTypes>      AllTypes      { get { return this.GetTable<AllTypes>(); } }
		public Table<AllTypes2>     AllTypes2     { get { return this.GetTable<AllTypes2>(); } }
		public Table<BinaryData>    BinaryData    { get { return this.GetTable<BinaryData>(); } }
		public Table<Child>         Child         { get { return this.GetTable<Child>(); } }
		public Table<DataTypeTest>  DataTypeTest  { get { return this.GetTable<DataTypeTest>(); } }
		public Table<Doctor>        Doctor        { get { return this.GetTable<Doctor>(); } }
		public Table<GrandChild>    GrandChild    { get { return this.GetTable<GrandChild>(); } }
		public Table<IndexTable>    IndexTable    { get { return this.GetTable<IndexTable>(); } }
		public Table<LinqDataTypes> LinqDataTypes { get { return this.GetTable<LinqDataTypes>(); } }
		/// <summary>
		/// This is Parent table
		/// </summary>
		public Table<Parent>        Parent        { get { return this.GetTable<Parent>(); } }
		public Table<Patient>       Patient       { get { return this.GetTable<Patient>(); } }
		public Table<Person>        Person        { get { return this.GetTable<Person>(); } }
		public Table<TestIdentity>  TestIdentity  { get { return this.GetTable<TestIdentity>(); } }
	}

	[Table("AllTypes")]
	public partial class AllTypes
	{
		[PrimaryKey,                                   Identity] public int       ID                       { get; set; } // int
		[Column,                                       Nullable] public long?     bigintDataType           { get; set; } // bigint
		[Column,                                       Nullable] public decimal?  numericDataType          { get; set; } // numeric(18, 0)
		[Column,                                       Nullable] public Boolean?  bitDataType              { get; set; } // bit
		[Column,                                       Nullable] public short?    smallintDataType         { get; set; } // smallint
		[Column,                                       Nullable] public decimal?  decimalDataType          { get; set; } // decimal(18, 0)
		[Column,                                       Nullable] public decimal?  smallmoneyDataType       { get; set; } // smallmoney
		[Column,                                       Nullable] public int?      intDataType              { get; set; } // int
		[Column,                                       Nullable] public SByte?    tinyintDataType          { get; set; } // tinyint
		[Column,                                       Nullable] public decimal?  moneyDataType            { get; set; } // money
		[Column,                                       Nullable] public double?   floatDataType            { get; set; } // float
		[Column,                                       Nullable] public float?    realDataType             { get; set; } // real
		[Column,                                       Nullable] public DateTime? datetimeDataType         { get; set; } // datetime
		[Column,                                       Nullable] public DateTime? smalldatetimeDataType    { get; set; } // smalldatetime
		[Column,                                       Nullable] public string    charDataType             { get; set; } // char(1)
		[Column,                                       Nullable] public string    varcharDataType          { get; set; } // varchar(20)
		[Column,                                       Nullable] public string    textDataType             { get; set; } // text
		[Column,                                       Nullable] public string    ncharDataType            { get; set; } // nchar(40)
		[Column,                                       Nullable] public string    nvarcharDataType         { get; set; } // nvarchar(20)
		[Column,                                       Nullable] public string    ntextDataType            { get; set; } // ntext
		[Column,                                       Nullable] public byte[]    binaryDataType           { get; set; } // binary(1)
		[Column,                                       Nullable] public byte[]    varbinaryDataType        { get; set; } // varbinary(1)
		[Column,                                       Nullable] public byte[]    imageDataType            { get; set; } // image
		[Column(SkipOnInsert=true, SkipOnUpdate=true), Nullable] public byte[]    timestampDataType        { get; set; } // timestamp
		[Column,                                       Nullable] public Guid?     uniqueidentifierDataType { get; set; } // uniqueidentifier
		[Column,                                       Nullable] public object    sql_variantDataType      { get; set; } // sql_variant
		[Column,                                       Nullable] public string    nvarchar_max_DataType    { get; set; } // nvarchar(-1)
		[Column,                                       Nullable] public string    varchar_max_DataType     { get; set; } // varchar(-1)
		[Column,                                       Nullable] public byte[]    varbinary_max_DataType   { get; set; } // varbinary(-1)
		[Column,                                       Nullable] public string    xmlDataType              { get; set; } // xml
	}

	[Table("AllTypes2")]
	public partial class AllTypes2
	{
		[PrimaryKey, Identity] public int             ID                     { get; set; } // int
		[Column,     Nullable] public DateTime?       dateDataType           { get; set; } // date
		[Column,     Nullable] public DateTimeOffset? datetimeoffsetDataType { get; set; } // datetimeoffset()
		[Column,     Nullable] public DateTime?       datetime2DataType      { get; set; } // datetime2()
		[Column,     Nullable] public TimeSpan?       timeDataType           { get; set; } // time()
		[Column,     Nullable] public SqlHierarchyId? hierarchyidDataType    { get; set; } // hierarchyid
		[Column,     Nullable] public SqlGeography    geographyDataType      { get; set; } // geography
		[Column,     Nullable] public SqlGeometry     geometryDataType       { get; set; } // geometry
	}

	[Table("BinaryData")]
	public partial class BinaryData
	{
		[PrimaryKey,                                   Identity] public int    BinaryDataID { get; set; } // int
		[Column(SkipOnInsert=true, SkipOnUpdate=true), NotNull ] public byte[] Stamp        { get; set; } // timestamp
		[Column,                                       NotNull ] public byte[] Data         { get; set; } // varbinary(1024)
	}

	[Table("Child")]
	public partial class Child
	{
		[Column, Nullable] public int? ParentID { get; set; } // int
		/// <summary>
		/// This ChildID column
		/// </summary>
		[Column, Nullable] public int? ChildID  { get; set; } // int
	}

	[Table("DataTypeTest")]
	public partial class DataTypeTest
	{
		[PrimaryKey, Identity] public int       DataTypeID { get; set; } // int
		[Column,     Nullable] public byte[]    Binary_    { get; set; } // binary(50)
		[Column,     Nullable] public Boolean?  Boolean_   { get; set; } // bit
		[Column,     Nullable] public SByte?    Byte_      { get; set; } // tinyint
		[Column,     Nullable] public byte[]    Bytes_     { get; set; } // varbinary(50)
		[Column,     Nullable] public string    Char_      { get; set; } // char(1)
		[Column,     Nullable] public DateTime? DateTime_  { get; set; } // datetime
		[Column,     Nullable] public decimal?  Decimal_   { get; set; } // decimal(20, 2)
		[Column,     Nullable] public double?   Double_    { get; set; } // float
		[Column,     Nullable] public Guid?     Guid_      { get; set; } // uniqueidentifier
		[Column,     Nullable] public short?    Int16_     { get; set; } // smallint
		[Column,     Nullable] public int?      Int32_     { get; set; } // int
		[Column,     Nullable] public long?     Int64_     { get; set; } // bigint
		[Column,     Nullable] public decimal?  Money_     { get; set; } // money
		[Column,     Nullable] public SByte?    SByte_     { get; set; } // tinyint
		[Column,     Nullable] public float?    Single_    { get; set; } // real
		[Column,     Nullable] public byte[]    Stream_    { get; set; } // varbinary(50)
		[Column,     Nullable] public string    String_    { get; set; } // nvarchar(50)
		[Column,     Nullable] public short?    UInt16_    { get; set; } // smallint
		[Column,     Nullable] public int?      UInt32_    { get; set; } // int
		[Column,     Nullable] public long?     UInt64_    { get; set; } // bigint
		[Column,     Nullable] public string    Xml_       { get; set; } // xml
	}

	[Table("Doctor")]
	public partial class Doctor
	{
		[PrimaryKey, NotNull] public int    PersonID { get; set; } // int
		[Column,     NotNull] public string Taxonomy { get; set; } // nvarchar(50)
	}

	[Table("GrandChild")]
	public partial class GrandChild
	{
		[Column, Nullable] public int? ParentID     { get; set; } // int
		[Column, Nullable] public int? ChildID      { get; set; } // int
		[Column, Nullable] public int? GrandChildID { get; set; } // int
	}

	[Table("IndexTable")]
	public partial class IndexTable
	{
		[PrimaryKey(2), NotNull] public int PKField1    { get; set; } // int
		[PrimaryKey(1), NotNull] public int PKField2    { get; set; } // int
		[Column,        NotNull] public int UniqueField { get; set; } // int
		[Column,        NotNull] public int IndexField  { get; set; } // int
	}

	[Table("LinqDataTypes")]
	public partial class LinqDataTypes
	{
		[Column, Nullable] public int?      ID             { get; set; } // int
		[Column, Nullable] public decimal?  MoneyValue     { get; set; } // decimal(10, 4)
		[Column, Nullable] public DateTime? DateTimeValue  { get; set; } // datetime
		[Column, Nullable] public DateTime? DateTimeValue2 { get; set; } // datetime2()
		[Column, Nullable] public Boolean?  BoolValue      { get; set; } // bit
		[Column, Nullable] public Guid?     GuidValue      { get; set; } // uniqueidentifier
		[Column, Nullable] public byte[]    BinaryValue    { get; set; } // varbinary(5000)
		[Column, Nullable] public short?    SmallIntValue  { get; set; } // smallint
		[Column, Nullable] public int?      IntValue       { get; set; } // int
		[Column, Nullable] public long?     BigIntValue    { get; set; } // bigint
	}

	/// <summary>
	/// This is Parent table
	/// </summary>
	[Table("Parent")]
	public partial class Parent
	{
		[Column, Nullable] public int? ParentID { get; set; } // int
		[Column, Nullable] public int? Value1   { get; set; } // int
	}

	[Table("Patient")]
	public partial class Patient
	{
		[PrimaryKey, NotNull] public int    PersonID  { get; set; } // int
		[Column,     NotNull] public string Diagnosis { get; set; } // nvarchar(256)
	}

	[Table("Person")]
	public partial class Person
	{
		[PrimaryKey, Identity   ] public int    PersonID   { get; set; } // int
		[Column,     NotNull    ] public string FirstName  { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public string LastName   { get; set; } // nvarchar(50)
		[Column,        Nullable] public string MiddleName { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public string Gender     { get; set; } // char(1)
	}

	[Table("TestIdentity")]
	public partial class TestIdentity
	{
		[PrimaryKey, Identity] public int ID { get; set; } // int
	}
}
