//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace DB2DataContext
{
	/// <summary>
	/// Database       : TESTDATA
	/// Data Source    : DBHost:50000
	/// Server Version : 10.01.0000
	/// </summary>
	public partial class TESTDATADB : LinqToDB.Data.DataConnection
	{
		public ITable<ADMINTABCOMPRESSINFO>          ADMINTABCOMPRESSINFOes         { get { return this.GetTable<ADMINTABCOMPRESSINFO>(); } }
		public ITable<ADMINTABINFO>                  ADMINTABINFOes                 { get { return this.GetTable<ADMINTABINFO>(); } }
		public ITable<ADMINTEMPCOLUMN>               ADMINTEMPCOLUMNS               { get { return this.GetTable<ADMINTEMPCOLUMN>(); } }
		public ITable<ADMINTEMPTABLE>                ADMINTEMPTABLES                { get { return this.GetTable<ADMINTEMPTABLE>(); } }
		/// <summary>
		/// Description of relational tables accessible to the user
		/// </summary>
		public ITable<ALL_ALL_TABLES>                ALL_ALL_TABLES                 { get { return this.GetTable<ALL_ALL_TABLES>(); } }
		/// <summary>
		/// Arguments in objects accessible to the user
		/// </summary>
		public ITable<ALL_ARGUMENTS>                 ALL_ARGUMENTS                  { get { return this.GetTable<ALL_ARGUMENTS>(); } }
		/// <summary>
		/// All accessible tables, views and synonyms
		/// </summary>
		public ITable<ALL_CATALOG>                   ALL_CATALOG                    { get { return this.GetTable<ALL_CATALOG>(); } }
		/// <summary>
		/// Comments on columns of accessible tables and views
		/// </summary>
		public ITable<ALL_COL_COMMENTS>              ALL_COL_COMMENTS               { get { return this.GetTable<ALL_COL_COMMENTS>(); } }
		/// <summary>
		/// Information about columns in constraint definitions in accessible tables
		/// </summary>
		public ITable<ALL_CONS_COLUMNS>              ALL_CONS_COLUMNS               { get { return this.GetTable<ALL_CONS_COLUMNS>(); } }
		/// <summary>
		/// Constraint definitions on accessible tables
		/// </summary>
		public ITable<ALL_CONSTRAINTS>               ALL_CONSTRAINTS                { get { return this.GetTable<ALL_CONSTRAINTS>(); } }
		/// <summary>
		/// Dependencies to and from objects accessible to the user
		/// </summary>
		public ITable<ALL_DEPENDENCIES>              ALL_DEPENDENCIES               { get { return this.GetTable<ALL_DEPENDENCIES>(); } }
		/// <summary>
		/// Objects accessible to the user
		/// </summary>
		public ITable<ALL_ERRORS>                    ALL_ERRORS                     { get { return this.GetTable<ALL_ERRORS>(); } }
		/// <summary>
		/// COLUMNs comprising INDEXes on accessible TABLEs
		/// </summary>
		public ITable<ALL_IND_COLUMNS>               ALL_IND_COLUMNS                { get { return this.GetTable<ALL_IND_COLUMNS>(); } }
		/// <summary>
		/// Description of partitioned-level partitioning information for index partitions accessible to the user
		/// </summary>
		public ITable<ALL_IND_PARTITIONS>            ALL_IND_PARTITIONS             { get { return this.GetTable<ALL_IND_PARTITIONS>(); } }
		/// <summary>
		/// Description of indexes on tables accessible to the user
		/// </summary>
		public ITable<ALL_INDEXES>                   ALL_INDEXES                    { get { return this.GetTable<ALL_INDEXES>(); } }
		/// <summary>
		/// Objects accessible to the user
		/// </summary>
		public ITable<ALL_OBJECTS>                   ALL_OBJECTS                    { get { return this.GetTable<ALL_OBJECTS>(); } }
		/// <summary>
		/// Description of partitioned tables accessible to the user
		/// </summary>
		public ITable<ALL_PART_INDEXES>              ALL_PART_INDEXES               { get { return this.GetTable<ALL_PART_INDEXES>(); } }
		/// <summary>
		/// Description of partitioning key columns for the partitioned objects accessible to the current user
		/// </summary>
		public ITable<ALL_PART_KEY_COLUMNS>          ALL_PART_KEY_COLUMNS           { get { return this.GetTable<ALL_PART_KEY_COLUMNS>(); } }
		/// <summary>
		/// Description of partitioned tables accessible to the user
		/// </summary>
		public ITable<ALL_PART_TABLES>               ALL_PART_TABLES                { get { return this.GetTable<ALL_PART_TABLES>(); } }
		/// <summary>
		/// Description of all procedures available to the user
		/// </summary>
		public ITable<ALL_PROCEDURES>                ALL_PROCEDURES                 { get { return this.GetTable<ALL_PROCEDURES>(); } }
		/// <summary>
		/// Description of SEQUENCEs accessible to the user
		/// </summary>
		public ITable<ALL_SEQUENCES>                 ALL_SEQUENCES                  { get { return this.GetTable<ALL_SEQUENCES>(); } }
		/// <summary>
		/// Current source on stored objects that the user is allowed to create
		/// </summary>
		public ITable<ALL_SOURCE>                    ALL_SOURCE                     { get { return this.GetTable<ALL_SOURCE>(); } }
		/// <summary>
		/// All synonyms accessible to the user
		/// </summary>
		public ITable<ALL_SYNONYMS>                  ALL_SYNONYMS                   { get { return this.GetTable<ALL_SYNONYMS>(); } }
		/// <summary>
		/// Column statistics for columns of tables accessible to the user
		/// </summary>
		public ITable<ALL_TAB_COL_STATISTICS>        ALL_TAB_COL_STATISTICS         { get { return this.GetTable<ALL_TAB_COL_STATISTICS>(); } }
		/// <summary>
		/// Columns of tables accessible to the user
		/// </summary>
		public ITable<ALL_TAB_COLUMNS>               ALL_TAB_COLUMNS                { get { return this.GetTable<ALL_TAB_COLUMNS>(); } }
		/// <summary>
		/// Comments on tables and views accessible to the user
		/// </summary>
		public ITable<ALL_TAB_COMMENTS>              ALL_TAB_COMMENTS               { get { return this.GetTable<ALL_TAB_COMMENTS>(); } }
		/// <summary>
		/// Description of partitioned-level partitioning information for table partitions accessible to the user
		/// </summary>
		public ITable<ALL_TAB_PARTITIONS>            ALL_TAB_PARTITIONS             { get { return this.GetTable<ALL_TAB_PARTITIONS>(); } }
		/// <summary>
		/// Grants on objects for which the user is the grantor, grantee, owner, or PUBLIC is the grantee
		/// </summary>
		public ITable<ALL_TAB_PRIVS>                 ALL_TAB_PRIVS                  { get { return this.GetTable<ALL_TAB_PRIVS>(); } }
		/// <summary>
		/// User's grants and grants on user's objects
		/// </summary>
		public ITable<ALL_TAB_PRIVS_MADE>            ALL_TAB_PRIVS_MADE             { get { return this.GetTable<ALL_TAB_PRIVS_MADE>(); } }
		/// <summary>
		/// Grants on objects for which the user or PUBLIC is the grantee
		/// </summary>
		public ITable<ALL_TAB_PRIVS_RECD>            ALL_TAB_PRIVS_RECD             { get { return this.GetTable<ALL_TAB_PRIVS_RECD>(); } }
		/// <summary>
		/// Description of relational tables accessible to the user
		/// </summary>
		public ITable<ALL_TABLES>                    ALL_TABLES                     { get { return this.GetTable<ALL_TABLES>(); } }
		/// <summary>
		/// Triggers accessible to the current user
		/// </summary>
		public ITable<ALL_TRIGGERS>                  ALL_TRIGGERS                   { get { return this.GetTable<ALL_TRIGGERS>(); } }
		/// <summary>
		/// Columns of views accessible to the user
		/// </summary>
		public ITable<ALL_VIEW_COLUMNS>              ALL_VIEW_COLUMNS               { get { return this.GetTable<ALL_VIEW_COLUMNS>(); } }
		/// <summary>
		/// Description of views accessible to the user
		/// </summary>
		public ITable<ALL_VIEWS>                     ALL_VIEWS                      { get { return this.GetTable<ALL_VIEWS>(); } }
		public ITable<ALLTYPE>                       ALLTYPES                       { get { return this.GetTable<ALLTYPE>(); } }
		public ITable<APPL_PERFORMANCE>              APPL_PERFORMANCE               { get { return this.GetTable<APPL_PERFORMANCE>(); } }
		public ITable<APPLICATION>                   APPLICATIONS                   { get { return this.GetTable<APPLICATION>(); } }
		public ITable<ATTRIBUTE>                     ATTRIBUTES                     { get { return this.GetTable<ATTRIBUTE>(); } }
		public ITable<AUDITPOLICy>                   AUDITPOLICIES                  { get { return this.GetTable<AUDITPOLICy>(); } }
		public ITable<AUDITUSE>                      AUDITUSEs                      { get { return this.GetTable<AUDITUSE>(); } }
		public ITable<AUTHORIZATIONID>               AUTHORIZATIONIDS               { get { return this.GetTable<AUTHORIZATIONID>(); } }
		public ITable<BP_HITRATIO>                   BP_HITRATIO                    { get { return this.GetTable<BP_HITRATIO>(); } }
		public ITable<BP_READ_IO>                    BP_READ_IO                     { get { return this.GetTable<BP_READ_IO>(); } }
		public ITable<BP_WRITE_IO>                   BP_WRITE_IO                    { get { return this.GetTable<BP_WRITE_IO>(); } }
		public ITable<BUFFERPOOL>                    BUFFERPOOLS                    { get { return this.GetTable<BUFFERPOOL>(); } }
		public ITable<BUFFERPOOLDBPARTITION>         BUFFERPOOLDBPARTITIONS         { get { return this.GetTable<BUFFERPOOLDBPARTITION>(); } }
		public ITable<BUFFERPOOLEXCEPTION>           BUFFERPOOLEXCEPTIONS           { get { return this.GetTable<BUFFERPOOLEXCEPTION>(); } }
		public ITable<BUFFERPOOLNODE>                BUFFERPOOLNODES                { get { return this.GetTable<BUFFERPOOLNODE>(); } }
		public ITable<CASTFUNCTION>                  CASTFUNCTIONS                  { get { return this.GetTable<CASTFUNCTION>(); } }
		public ITable<CHECK>                         CHECKS                         { get { return this.GetTable<CHECK>(); } }
		public ITable<CHECK_CONSTRAINTS>             CHECK_CONSTRAINTS              { get { return this.GetTable<CHECK_CONSTRAINTS>(); } }
		public ITable<Child>                         Children                       { get { return this.GetTable<Child>(); } }
		public ITable<COLAUTH>                       COLAUTHs                       { get { return this.GetTable<COLAUTH>(); } }
		public ITable<COLCHECK>                      COLCHECKS                      { get { return this.GetTable<COLCHECK>(); } }
		public ITable<COLDIST>                       COLDISTs                       { get { return this.GetTable<COLDIST>(); } }
		public ITable<COLGROUP>                      COLGROUPS                      { get { return this.GetTable<COLGROUP>(); } }
		public ITable<COLGROUPCOL>                   COLGROUPCOLS                   { get { return this.GetTable<COLGROUPCOL>(); } }
		public ITable<COLGROUPDIST>                  COLGROUPDISTs                  { get { return this.GetTable<COLGROUPDIST>(); } }
		public ITable<COLGROUPDISTCOUNT>             COLGROUPDISTCOUNTS             { get { return this.GetTable<COLGROUPDISTCOUNT>(); } }
		public ITable<COLIDENTATTRIBUTE>             COLIDENTATTRIBUTES             { get { return this.GetTable<COLIDENTATTRIBUTE>(); } }
		public ITable<COLLATION>                     COLLATIONS                     { get { return this.GetTable<COLLATION>(); } }
		public ITable<COLOPTION>                     COLOPTIONS                     { get { return this.GetTable<COLOPTION>(); } }
		public ITable<COLUMN>                        COLUMNS                        { get { return this.GetTable<COLUMN>(); } }
		public ITable<COLUMN>                        COLUMNS                        { get { return this.GetTable<COLUMN>(); } }
		public ITable<COLUMNS_S>                     COLUMNS_S                      { get { return this.GetTable<COLUMNS_S>(); } }
		public ITable<COLUSE>                        COLUSEs                        { get { return this.GetTable<COLUSE>(); } }
		public ITable<CONDITION>                     CONDITIONS                     { get { return this.GetTable<CONDITION>(); } }
		public ITable<CONSTDEP>                      CONSTDEPs                      { get { return this.GetTable<CONSTDEP>(); } }
		public ITable<CONTACT>                       CONTACTS                       { get { return this.GetTable<CONTACT>(); } }
		public ITable<CONTACTGROUP>                  CONTACTGROUPS                  { get { return this.GetTable<CONTACTGROUP>(); } }
		public ITable<CONTAINER_UTILIZATION>         CONTAINER_UTILIZATION          { get { return this.GetTable<CONTAINER_UTILIZATION>(); } }
		public ITable<CONTEXT>                       CONTEXTS                       { get { return this.GetTable<CONTEXT>(); } }
		public ITable<CONTEXTATTRIBUTE>              CONTEXTATTRIBUTES              { get { return this.GetTable<CONTEXTATTRIBUTE>(); } }
		public ITable<CONTROL>                       CONTROLS                       { get { return this.GetTable<CONTROL>(); } }
		public ITable<CONTROLDEP>                    CONTROLDEPs                    { get { return this.GetTable<CONTROLDEP>(); } }
		public ITable<DATAPARTITION>                 DATAPARTITIONS                 { get { return this.GetTable<DATAPARTITION>(); } }
		public ITable<DATAPARTITIONEXPRESSION>       DATAPARTITIONEXPRESSIONs       { get { return this.GetTable<DATAPARTITIONEXPRESSION>(); } }
		public ITable<DATATYPE>                      DATATYPES                      { get { return this.GetTable<DATATYPE>(); } }
		public ITable<DATATYPEDEP>                   DATATYPEDEPs                   { get { return this.GetTable<DATATYPEDEP>(); } }
		public ITable<DB_HISTORY>                    DB_HISTORY                     { get { return this.GetTable<DB_HISTORY>(); } }
		public ITable<DB2_CF>                        DB2_CF                         { get { return this.GetTable<DB2_CF>(); } }
		public ITable<DB2_CLUSTER_HOST_STATE>        DB2_CLUSTER_HOST_STATE         { get { return this.GetTable<DB2_CLUSTER_HOST_STATE>(); } }
		public ITable<DB2_INSTANCE_ALERTS>           DB2_INSTANCE_ALERTS            { get { return this.GetTable<DB2_INSTANCE_ALERTS>(); } }
		public ITable<DB2_MEMBER>                    DB2_MEMBER                     { get { return this.GetTable<DB2_MEMBER>(); } }
		/// <summary>
		/// Description of all relational tables in the database
		/// </summary>
		public ITable<DBA_ALL_TABLES>                DBA_ALL_TABLES                 { get { return this.GetTable<DBA_ALL_TABLES>(); } }
		/// <summary>
		/// Arguments in all objects in the database
		/// </summary>
		public ITable<DBA_ARGUMENTS>                 DBA_ARGUMENTS                  { get { return this.GetTable<DBA_ARGUMENTS>(); } }
		/// <summary>
		/// All database tables, views and synonyms
		/// </summary>
		public ITable<DBA_CATALOG>                   DBA_CATALOG                    { get { return this.GetTable<DBA_CATALOG>(); } }
		/// <summary>
		/// Comments on columns of all tables and views
		/// </summary>
		public ITable<DBA_COL_COMMENTS>              DBA_COL_COMMENTS               { get { return this.GetTable<DBA_COL_COMMENTS>(); } }
		/// <summary>
		/// Information about all columns in constraint definitions
		/// </summary>
		public ITable<DBA_CONS_COLUMNS>              DBA_CONS_COLUMNS               { get { return this.GetTable<DBA_CONS_COLUMNS>(); } }
		/// <summary>
		/// Constraint definitions on all tables
		/// </summary>
		public ITable<DBA_CONSTRAINTS>               DBA_CONSTRAINTS                { get { return this.GetTable<DBA_CONSTRAINTS>(); } }
		/// <summary>
		/// Dependencies to and from objects
		/// </summary>
		public ITable<DBA_DEPENDENCIES>              DBA_DEPENDENCIES               { get { return this.GetTable<DBA_DEPENDENCIES>(); } }
		/// <summary>
		/// Current errors on all stored objects in the database
		/// </summary>
		public ITable<DBA_ERRORS>                    DBA_ERRORS                     { get { return this.GetTable<DBA_ERRORS>(); } }
		/// <summary>
		/// COLUMNs comprising INDEXes on all TABLEs
		/// </summary>
		public ITable<DBA_IND_COLUMNS>               DBA_IND_COLUMNS                { get { return this.GetTable<DBA_IND_COLUMNS>(); } }
		/// <summary>
		/// Description of partitioned-level partitioning information for all index partitions in the database
		/// </summary>
		public ITable<DBA_IND_PARTITIONS>            DBA_IND_PARTITIONS             { get { return this.GetTable<DBA_IND_PARTITIONS>(); } }
		/// <summary>
		/// Description for all indexes in the database
		/// </summary>
		public ITable<DBA_INDEXES>                   DBA_INDEXES                    { get { return this.GetTable<DBA_INDEXES>(); } }
		/// <summary>
		/// All objects in the database
		/// </summary>
		public ITable<DBA_OBJECTS>                   DBA_OBJECTS                    { get { return this.GetTable<DBA_OBJECTS>(); } }
		/// <summary>
		/// Description of all partitioned indexes in the database
		/// </summary>
		public ITable<DBA_PART_INDEXES>              DBA_PART_INDEXES               { get { return this.GetTable<DBA_PART_INDEXES>(); } }
		/// <summary>
		/// Description of the partitioning key columns for all partitioned objects in the database
		/// </summary>
		public ITable<DBA_PART_KEY_COLUMNS>          DBA_PART_KEY_COLUMNS           { get { return this.GetTable<DBA_PART_KEY_COLUMNS>(); } }
		/// <summary>
		/// Description of all partitioned tables in the database
		/// </summary>
		public ITable<DBA_PART_TABLES>               DBA_PART_TABLES                { get { return this.GetTable<DBA_PART_TABLES>(); } }
		/// <summary>
		/// Description of all procedures
		/// </summary>
		public ITable<DBA_PROCEDURES>                DBA_PROCEDURES                 { get { return this.GetTable<DBA_PROCEDURES>(); } }
		/// <summary>
		/// Roles granted to users and roles
		/// </summary>
		public ITable<DBA_ROLE_PRIVS>                DBA_ROLE_PRIVS                 { get { return this.GetTable<DBA_ROLE_PRIVS>(); } }
		/// <summary>
		/// All roles which exist in the database
		/// </summary>
		public ITable<DBA_ROLES>                     DBA_ROLES                      { get { return this.GetTable<DBA_ROLES>(); } }
		/// <summary>
		/// Description of all SEQUENCEs in the database
		/// </summary>
		public ITable<DBA_SEQUENCES>                 DBA_SEQUENCES                  { get { return this.GetTable<DBA_SEQUENCES>(); } }
		/// <summary>
		/// Source of all stored objects in the database
		/// </summary>
		public ITable<DBA_SOURCE>                    DBA_SOURCE                     { get { return this.GetTable<DBA_SOURCE>(); } }
		/// <summary>
		/// All synonyms in the database
		/// </summary>
		public ITable<DBA_SYNONYMS>                  DBA_SYNONYMS                   { get { return this.GetTable<DBA_SYNONYMS>(); } }
		/// <summary>
		/// System privileges granted to users and roles
		/// </summary>
		public ITable<DBA_SYS_PRIVS>                 DBA_SYS_PRIVS                  { get { return this.GetTable<DBA_SYS_PRIVS>(); } }
		/// <summary>
		/// Column statistics for columns of all tables in the database
		/// </summary>
		public ITable<DBA_TAB_COL_STATISTICS>        DBA_TAB_COL_STATISTICS         { get { return this.GetTable<DBA_TAB_COL_STATISTICS>(); } }
		/// <summary>
		/// Columns of all tables in the database
		/// </summary>
		public ITable<DBA_TAB_COLUMNS>               DBA_TAB_COLUMNS                { get { return this.GetTable<DBA_TAB_COLUMNS>(); } }
		/// <summary>
		/// Comments on all tables and views in the database
		/// </summary>
		public ITable<DBA_TAB_COMMENTS>              DBA_TAB_COMMENTS               { get { return this.GetTable<DBA_TAB_COMMENTS>(); } }
		/// <summary>
		/// Description of partitioned-level partitioning information for all table partitions in the database
		/// </summary>
		public ITable<DBA_TAB_PARTITIONS>            DBA_TAB_PARTITIONS             { get { return this.GetTable<DBA_TAB_PARTITIONS>(); } }
		/// <summary>
		/// All grants on objects in the database
		/// </summary>
		public ITable<DBA_TAB_PRIVS>                 DBA_TAB_PRIVS                  { get { return this.GetTable<DBA_TAB_PRIVS>(); } }
		/// <summary>
		/// Description of all relational tables in the database
		/// </summary>
		public ITable<DBA_TABLES>                    DBA_TABLES                     { get { return this.GetTable<DBA_TABLES>(); } }
		/// <summary>
		/// Description of all tablespaces
		/// </summary>
		public ITable<DBA_TABLESPACES>               DBA_TABLESPACES                { get { return this.GetTable<DBA_TABLESPACES>(); } }
		/// <summary>
		/// All triggers in the database
		/// </summary>
		public ITable<DBA_TRIGGERS>                  DBA_TRIGGERS                   { get { return this.GetTable<DBA_TRIGGERS>(); } }
		/// <summary>
		/// Columns of all views in the database
		/// </summary>
		public ITable<DBA_VIEW_COLUMNS>              DBA_VIEW_COLUMNS               { get { return this.GetTable<DBA_VIEW_COLUMNS>(); } }
		/// <summary>
		/// Description of all views in the database
		/// </summary>
		public ITable<DBA_VIEWS>                     DBA_VIEWS                      { get { return this.GetTable<DBA_VIEWS>(); } }
		public ITable<DBAUTH>                        DBAUTHs                        { get { return this.GetTable<DBAUTH>(); } }
		public ITable<DBCFG>                         DBCFGs                         { get { return this.GetTable<DBCFG>(); } }
		public ITable<DBMCFG>                        DBMCFGs                        { get { return this.GetTable<DBMCFG>(); } }
		public ITable<DBPARTITIONGROUP>              DBPARTITIONGROUPS              { get { return this.GetTable<DBPARTITIONGROUP>(); } }
		public ITable<DBPARTITIONGROUPDEF>           DBPARTITIONGROUPDEFs           { get { return this.GetTable<DBPARTITIONGROUPDEF>(); } }
		public ITable<DBPATH>                        DBPATHS                        { get { return this.GetTable<DBPATH>(); } }
		/// <summary>
		/// Description of columns in data dictionary tables and views
		/// </summary>
		public ITable<DICT_COLUMNS>                  DICT_COLUMNS                   { get { return this.GetTable<DICT_COLUMNS>(); } }
		/// <summary>
		/// Description of data dictionary tables and views
		/// </summary>
		public ITable<DICTIONARY>                    DICTIONARies                   { get { return this.GetTable<DICTIONARY>(); } }
		public ITable<Doctor>                        Doctors                        { get { return this.GetTable<Doctor>(); } }
		public ITable<DUAL>                          DUALs                          { get { return this.GetTable<DUAL>(); } }
		public ITable<ENV_CF_SYS_RESOURCES>          ENV_CF_SYS_RESOURCES           { get { return this.GetTable<ENV_CF_SYS_RESOURCES>(); } }
		public ITable<ENV_FEATURE_INFO>              ENV_FEATURE_INFO               { get { return this.GetTable<ENV_FEATURE_INFO>(); } }
		public ITable<ENV_INST_INFO>                 ENV_INST_INFO                  { get { return this.GetTable<ENV_INST_INFO>(); } }
		public ITable<ENV_PROD_INFO>                 ENV_PROD_INFO                  { get { return this.GetTable<ENV_PROD_INFO>(); } }
		public ITable<ENV_SYS_INFO>                  ENV_SYS_INFO                   { get { return this.GetTable<ENV_SYS_INFO>(); } }
		public ITable<ENV_SYS_RESOURCES>             ENV_SYS_RESOURCES              { get { return this.GetTable<ENV_SYS_RESOURCES>(); } }
		public ITable<EVENT>                         EVENTS                         { get { return this.GetTable<EVENT>(); } }
		public ITable<EVENTMONITOR>                  EVENTMONITORS                  { get { return this.GetTable<EVENTMONITOR>(); } }
		public ITable<EVENTTABLE>                    EVENTTABLES                    { get { return this.GetTable<EVENTTABLE>(); } }
		public ITable<FULLHIERARCHy>                 FULLHIERARCHIES                { get { return this.GetTable<FULLHIERARCHy>(); } }
		public ITable<FUNCDEP>                       FUNCDEPs                       { get { return this.GetTable<FUNCDEP>(); } }
		public ITable<FUNCMAPOPTION>                 FUNCMAPOPTIONS                 { get { return this.GetTable<FUNCMAPOPTION>(); } }
		public ITable<FUNCMAPPARMOPTION>             FUNCMAPPARMOPTIONS             { get { return this.GetTable<FUNCMAPPARMOPTION>(); } }
		public ITable<FUNCMAPPING>                   FUNCMAPPINGS                   { get { return this.GetTable<FUNCMAPPING>(); } }
		public ITable<FUNCPARM>                      FUNCPARMS                      { get { return this.GetTable<FUNCPARM>(); } }
		public ITable<FUNCTION>                      FUNCTIONS                      { get { return this.GetTable<FUNCTION>(); } }
		public ITable<GrandChild>                    GrandChilds                    { get { return this.GetTable<GrandChild>(); } }
		public ITable<HIERARCHy>                     HIERARCHIES                    { get { return this.GetTable<HIERARCHy>(); } }
		public ITable<HISTOGRAMTEMPLATE>             HISTOGRAMTEMPLATES             { get { return this.GetTable<HISTOGRAMTEMPLATE>(); } }
		public ITable<HISTOGRAMTEMPLATEBIN>          HISTOGRAMTEMPLATEBINS          { get { return this.GetTable<HISTOGRAMTEMPLATEBIN>(); } }
		public ITable<HISTOGRAMTEMPLATEUSE>          HISTOGRAMTEMPLATEUSEs          { get { return this.GetTable<HISTOGRAMTEMPLATEUSE>(); } }
		public ITable<HMON_ATM_INFO>                 HMON_ATM_INFO                  { get { return this.GetTable<HMON_ATM_INFO>(); } }
		public ITable<HMON_COLLECTION>               HMON_COLLECTION                { get { return this.GetTable<HMON_COLLECTION>(); } }
		public ITable<INDEX>                         INDEXES                        { get { return this.GetTable<INDEX>(); } }
		public ITable<INDEXAUTH>                     INDEXAUTHs                     { get { return this.GetTable<INDEXAUTH>(); } }
		public ITable<INDEXCOLUSE>                   INDEXCOLUSEs                   { get { return this.GetTable<INDEXCOLUSE>(); } }
		public ITable<INDEXDEP>                      INDEXDEPs                      { get { return this.GetTable<INDEXDEP>(); } }
		public ITable<INDEXEXPLOITRULE>              INDEXEXPLOITRULES              { get { return this.GetTable<INDEXEXPLOITRULE>(); } }
		public ITable<INDEXEXTENSION>                INDEXEXTENSIONS                { get { return this.GetTable<INDEXEXTENSION>(); } }
		public ITable<INDEXEXTENSIONDEP>             INDEXEXTENSIONDEPs             { get { return this.GetTable<INDEXEXTENSIONDEP>(); } }
		public ITable<INDEXEXTENSIONMETHOD>          INDEXEXTENSIONMETHODS          { get { return this.GetTable<INDEXEXTENSIONMETHOD>(); } }
		public ITable<INDEXEXTENSIONPARM>            INDEXEXTENSIONPARMS            { get { return this.GetTable<INDEXEXTENSIONPARM>(); } }
		public ITable<INDEXOPTION>                   INDEXOPTIONS                   { get { return this.GetTable<INDEXOPTION>(); } }
		public ITable<INDEXPARTITION>                INDEXPARTITIONS                { get { return this.GetTable<INDEXPARTITION>(); } }
		public ITable<INDEXXMLPATTERN>               INDEXXMLPATTERNS               { get { return this.GetTable<INDEXXMLPATTERN>(); } }
		public ITable<INVALIDOBJECT>                 INVALIDOBJECTS                 { get { return this.GetTable<INVALIDOBJECT>(); } }
		public ITable<KEYCOLUSE>                     KEYCOLUSEs                     { get { return this.GetTable<KEYCOLUSE>(); } }
		public ITable<LIBRARy>                       LIBRARIES                      { get { return this.GetTable<LIBRARy>(); } }
		public ITable<LIBRARYAUTH>                   LIBRARYAUTHs                   { get { return this.GetTable<LIBRARYAUTH>(); } }
		public ITable<LIBRARYBINDFILE>               LIBRARYBINDFILES               { get { return this.GetTable<LIBRARYBINDFILE>(); } }
		public ITable<LIBRARYVERSION>                LIBRARYVERSIONS                { get { return this.GetTable<LIBRARYVERSION>(); } }
		public ITable<LinqDataType>                  LinqDataTypes                  { get { return this.GetTable<LinqDataType>(); } }
		public ITable<LOCKS_HELD>                    LOCKS_HELD                     { get { return this.GetTable<LOCKS_HELD>(); } }
		public ITable<LOCKWAIT>                      LOCKWAITS                      { get { return this.GetTable<LOCKWAIT>(); } }
		public ITable<LOG_UTILIZATION>               LOG_UTILIZATION                { get { return this.GetTable<LOG_UTILIZATION>(); } }
		public ITable<LONG_RUNNING_SQL>              LONG_RUNNING_SQL               { get { return this.GetTable<LONG_RUNNING_SQL>(); } }
		public ITable<MASTERTABLE>                   MASTERTABLEs                   { get { return this.GetTable<MASTERTABLE>(); } }
		public ITable<MODULE>                        MODULES                        { get { return this.GetTable<MODULE>(); } }
		public ITable<MODULEAUTH>                    MODULEAUTHs                    { get { return this.GetTable<MODULEAUTH>(); } }
		public ITable<MODULEOBJECT>                  MODULEOBJECTS                  { get { return this.GetTable<MODULEOBJECT>(); } }
		public ITable<MON_BP_UTILIZATION>            MON_BP_UTILIZATION             { get { return this.GetTable<MON_BP_UTILIZATION>(); } }
		public ITable<MON_CONNECTION_SUMMARY>        MON_CONNECTION_SUMMARY         { get { return this.GetTable<MON_CONNECTION_SUMMARY>(); } }
		public ITable<MON_CURRENT_SQL>               MON_CURRENT_SQL                { get { return this.GetTable<MON_CURRENT_SQL>(); } }
		public ITable<MON_CURRENT_UOW>               MON_CURRENT_UOW                { get { return this.GetTable<MON_CURRENT_UOW>(); } }
		public ITable<MON_DB_SUMMARY>                MON_DB_SUMMARY                 { get { return this.GetTable<MON_DB_SUMMARY>(); } }
		public ITable<MON_LOCKWAITS>                 MON_LOCKWAITS                  { get { return this.GetTable<MON_LOCKWAITS>(); } }
		public ITable<MON_PKG_CACHE_SUMMARY>         MON_PKG_CACHE_SUMMARY          { get { return this.GetTable<MON_PKG_CACHE_SUMMARY>(); } }
		public ITable<MON_SERVICE_SUBCLASS_SUMMARY>  MON_SERVICE_SUBCLASS_SUMMARY   { get { return this.GetTable<MON_SERVICE_SUBCLASS_SUMMARY>(); } }
		public ITable<MON_TBSP_UTILIZATION>          MON_TBSP_UTILIZATION           { get { return this.GetTable<MON_TBSP_UTILIZATION>(); } }
		public ITable<MON_WORKLOAD_SUMMARY>          MON_WORKLOAD_SUMMARY           { get { return this.GetTable<MON_WORKLOAD_SUMMARY>(); } }
		public ITable<NAMEMAPPING>                   NAMEMAPPINGS                   { get { return this.GetTable<NAMEMAPPING>(); } }
		public ITable<NICKNAME>                      NICKNAMES                      { get { return this.GetTable<NICKNAME>(); } }
		public ITable<NODEGROUP>                     NODEGROUPS                     { get { return this.GetTable<NODEGROUP>(); } }
		public ITable<NODEGROUPDEF>                  NODEGROUPDEFs                  { get { return this.GetTable<NODEGROUPDEF>(); } }
		public ITable<NOTIFICATIONLIST>              NOTIFICATIONLISTs              { get { return this.GetTable<NOTIFICATIONLIST>(); } }
		public ITable<OBJECTOWNER>                   OBJECTOWNERS                   { get { return this.GetTable<OBJECTOWNER>(); } }
		public ITable<PACKAGE>                       PACKAGES                       { get { return this.GetTable<PACKAGE>(); } }
		public ITable<PACKAGEAUTH>                   PACKAGEAUTHs                   { get { return this.GetTable<PACKAGEAUTH>(); } }
		public ITable<PACKAGEDEP>                    PACKAGEDEPs                    { get { return this.GetTable<PACKAGEDEP>(); } }
		public ITable<PARAMETER>                     PARAMETERS                     { get { return this.GetTable<PARAMETER>(); } }
		public ITable<PARAMETERS_S>                  PARAMETERS_S                   { get { return this.GetTable<PARAMETERS_S>(); } }
		public ITable<Parent>                        Parents                        { get { return this.GetTable<Parent>(); } }
		public ITable<PARTITIONMAP>                  PARTITIONMAPS                  { get { return this.GetTable<PARTITIONMAP>(); } }
		public ITable<PASSTHRUAUTH>                  PASSTHRUAUTHs                  { get { return this.GetTable<PASSTHRUAUTH>(); } }
		public ITable<Patient>                       Patients                       { get { return this.GetTable<Patient>(); } }
		public ITable<PDLOGMSGS_LAST24HOURS>         PDLOGMSGS_LAST24HOURS          { get { return this.GetTable<PDLOGMSGS_LAST24HOURS>(); } }
		public ITable<PERIOD>                        PERIODS                        { get { return this.GetTable<PERIOD>(); } }
		public ITable<Person>                        People                         { get { return this.GetTable<Person>(); } }
		public ITable<PERSONVIEW>                    PERSONVIEWs                    { get { return this.GetTable<PERSONVIEW>(); } }
		public ITable<POLICY>                        POLICies                       { get { return this.GetTable<POLICY>(); } }
		public ITable<PREDICATESPEC>                 PREDICATESPECS                 { get { return this.GetTable<PREDICATESPEC>(); } }
		public ITable<PRIVILEGE>                     PRIVILEGES                     { get { return this.GetTable<PRIVILEGE>(); } }
		public ITable<PROCEDURE>                     PROCEDURES                     { get { return this.GetTable<PROCEDURE>(); } }
		public ITable<PROCPARM>                      PROCPARMS                      { get { return this.GetTable<PROCPARM>(); } }
		public ITable<QUERY_PREP_COST>               QUERY_PREP_COST                { get { return this.GetTable<QUERY_PREP_COST>(); } }
		public ITable<REF_CONSTRAINTS>               REF_CONSTRAINTS                { get { return this.GetTable<REF_CONSTRAINTS>(); } }
		public ITable<REFERENCE>                     REFERENCES                     { get { return this.GetTable<REFERENCE>(); } }
		public ITable<REFERENTIAL_CONSTRAINTS>       REFERENTIAL_CONSTRAINTS        { get { return this.GetTable<REFERENTIAL_CONSTRAINTS>(); } }
		public ITable<REG_VARIABLES>                 REG_VARIABLES                  { get { return this.GetTable<REG_VARIABLES>(); } }
		public ITable<ROLE>                          ROLES                          { get { return this.GetTable<ROLE>(); } }
		/// <summary>
		/// Roles which are granted to roles
		/// </summary>
		public ITable<ROLE_ROLE_PRIVS>               ROLE_ROLE_PRIVS                { get { return this.GetTable<ROLE_ROLE_PRIVS>(); } }
		/// <summary>
		/// System privileges granted to roles
		/// </summary>
		public ITable<ROLE_SYS_PRIVS>                ROLE_SYS_PRIVS                 { get { return this.GetTable<ROLE_SYS_PRIVS>(); } }
		/// <summary>
		/// Table privileges granted to roles
		/// </summary>
		public ITable<ROLE_TAB_PRIVS>                ROLE_TAB_PRIVS                 { get { return this.GetTable<ROLE_TAB_PRIVS>(); } }
		public ITable<ROLEAUTH>                      ROLEAUTHs                      { get { return this.GetTable<ROLEAUTH>(); } }
		public ITable<ROUTINE>                       ROUTINES                       { get { return this.GetTable<ROUTINE>(); } }
		public ITable<ROUTINE>                       ROUTINES                       { get { return this.GetTable<ROUTINE>(); } }
		public ITable<ROUTINEAUTH>                   ROUTINEAUTHs                   { get { return this.GetTable<ROUTINEAUTH>(); } }
		public ITable<ROUTINEDEP>                    ROUTINEDEPs                    { get { return this.GetTable<ROUTINEDEP>(); } }
		public ITable<ROUTINEOPTION>                 ROUTINEOPTIONS                 { get { return this.GetTable<ROUTINEOPTION>(); } }
		public ITable<ROUTINEPARM>                   ROUTINEPARMS                   { get { return this.GetTable<ROUTINEPARM>(); } }
		public ITable<ROUTINEPARMOPTION>             ROUTINEPARMOPTIONS             { get { return this.GetTable<ROUTINEPARMOPTION>(); } }
		public ITable<ROUTINES_S>                    ROUTINES_S                     { get { return this.GetTable<ROUTINES_S>(); } }
		public ITable<ROUTINESFEDERATED>             ROUTINESFEDERATEDs             { get { return this.GetTable<ROUTINESFEDERATED>(); } }
		public ITable<ROWFIELD>                      ROWFIELDS                      { get { return this.GetTable<ROWFIELD>(); } }
		public ITable<Schema>                        SCHEMATA                       { get { return this.GetTable<Schema>(); } }
		public ITable<SCHEMAAUTH>                    SCHEMAAUTHs                    { get { return this.GetTable<SCHEMAAUTH>(); } }
		public ITable<SCPREFTBSPACE>                 SCPREFTBSPACES                 { get { return this.GetTable<SCPREFTBSPACE>(); } }
		public ITable<SECURITYLABEL>                 SECURITYLABELS                 { get { return this.GetTable<SECURITYLABEL>(); } }
		public ITable<SECURITYLABELACCESS>           SECURITYLABELACCESSes          { get { return this.GetTable<SECURITYLABELACCESS>(); } }
		public ITable<SECURITYLABELCOMPONENT>        SECURITYLABELCOMPONENTS        { get { return this.GetTable<SECURITYLABELCOMPONENT>(); } }
		public ITable<SECURITYLABELCOMPONENTELEMENT> SECURITYLABELCOMPONENTELEMENTS { get { return this.GetTable<SECURITYLABELCOMPONENTELEMENT>(); } }
		public ITable<SECURITYPOLICy>                SECURITYPOLICIES               { get { return this.GetTable<SECURITYPOLICy>(); } }
		public ITable<SECURITYPOLICYCOMPONENTRULE>   SECURITYPOLICYCOMPONENTRULES   { get { return this.GetTable<SECURITYPOLICYCOMPONENTRULE>(); } }
		public ITable<SECURITYPOLICYEXEMPTION>       SECURITYPOLICYEXEMPTIONS       { get { return this.GetTable<SECURITYPOLICYEXEMPTION>(); } }
		public ITable<SEQUENCE>                      SEQUENCES                      { get { return this.GetTable<SEQUENCE>(); } }
		public ITable<SEQUENCEAUTH>                  SEQUENCEAUTHs                  { get { return this.GetTable<SEQUENCEAUTH>(); } }
		public ITable<SERVER>                        SERVERS                        { get { return this.GetTable<SERVER>(); } }
		public ITable<SERVEROPTION>                  SERVEROPTIONS                  { get { return this.GetTable<SERVEROPTION>(); } }
		public ITable<SERVICECLASS>                  SERVICECLASSES                 { get { return this.GetTable<SERVICECLASS>(); } }
		/// <summary>
		/// Privileges which the user currently has set
		/// </summary>
		public ITable<SESSION_PRIVS>                 SESSION_PRIVS                  { get { return this.GetTable<SESSION_PRIVS>(); } }
		/// <summary>
		/// Roles which the user currently has enabled
		/// </summary>
		public ITable<SESSION_ROLES>                 SESSION_ROLES                  { get { return this.GetTable<SESSION_ROLES>(); } }
		public ITable<SLAVETABLE>                    SLAVETABLEs                    { get { return this.GetTable<SLAVETABLE>(); } }
		public ITable<SNAPAGENT>                     SNAPAGENTs                     { get { return this.GetTable<SNAPAGENT>(); } }
		public ITable<SNAPAGENT_MEMORY_POOL>         SNAPAGENT_MEMORY_POOL          { get { return this.GetTable<SNAPAGENT_MEMORY_POOL>(); } }
		public ITable<SNAPAPPL>                      SNAPAPPLs                      { get { return this.GetTable<SNAPAPPL>(); } }
		public ITable<SNAPAPPL_INFO>                 SNAPAPPL_INFO                  { get { return this.GetTable<SNAPAPPL_INFO>(); } }
		public ITable<SNAPBP>                        SNAPBPs                        { get { return this.GetTable<SNAPBP>(); } }
		public ITable<SNAPBP_PART>                   SNAPBP_PART                    { get { return this.GetTable<SNAPBP_PART>(); } }
		public ITable<SNAPCONTAINER>                 SNAPCONTAINERs                 { get { return this.GetTable<SNAPCONTAINER>(); } }
		public ITable<SNAPDB>                        SNAPDBs                        { get { return this.GetTable<SNAPDB>(); } }
		public ITable<SNAPDB_MEMORY_POOL>            SNAPDB_MEMORY_POOL             { get { return this.GetTable<SNAPDB_MEMORY_POOL>(); } }
		public ITable<SNAPDBM>                       SNAPDBMs                       { get { return this.GetTable<SNAPDBM>(); } }
		public ITable<SNAPDBM_MEMORY_POOL>           SNAPDBM_MEMORY_POOL            { get { return this.GetTable<SNAPDBM_MEMORY_POOL>(); } }
		public ITable<SNAPDETAILLOG>                 SNAPDETAILLOGs                 { get { return this.GetTable<SNAPDETAILLOG>(); } }
		public ITable<SNAPDYN_SQL>                   SNAPDYN_SQL                    { get { return this.GetTable<SNAPDYN_SQL>(); } }
		public ITable<SNAPFCM>                       SNAPFCMs                       { get { return this.GetTable<SNAPFCM>(); } }
		public ITable<SNAPFCM_PART>                  SNAPFCM_PART                   { get { return this.GetTable<SNAPFCM_PART>(); } }
		public ITable<SNAPHADR>                      SNAPHADRs                      { get { return this.GetTable<SNAPHADR>(); } }
		public ITable<SNAPLOCK>                      SNAPLOCKs                      { get { return this.GetTable<SNAPLOCK>(); } }
		public ITable<SNAPLOCKWAIT>                  SNAPLOCKWAITs                  { get { return this.GetTable<SNAPLOCKWAIT>(); } }
		public ITable<SNAPSTMT>                      SNAPSTMTs                      { get { return this.GetTable<SNAPSTMT>(); } }
		public ITable<SNAPSTORAGE_PATHS>             SNAPSTORAGE_PATHS              { get { return this.GetTable<SNAPSTORAGE_PATHS>(); } }
		public ITable<SNAPSUBSECTION>                SNAPSUBSECTIONs                { get { return this.GetTable<SNAPSUBSECTION>(); } }
		public ITable<SNAPSWITCH>                    SNAPSWITCHES                   { get { return this.GetTable<SNAPSWITCH>(); } }
		public ITable<SNAPTAB>                       SNAPTABs                       { get { return this.GetTable<SNAPTAB>(); } }
		public ITable<SNAPTAB_REORG>                 SNAPTAB_REORG                  { get { return this.GetTable<SNAPTAB_REORG>(); } }
		public ITable<SNAPTBSP>                      SNAPTBSPs                      { get { return this.GetTable<SNAPTBSP>(); } }
		public ITable<SNAPTBSP_PART>                 SNAPTBSP_PART                  { get { return this.GetTable<SNAPTBSP_PART>(); } }
		public ITable<SNAPTBSP_QUIESCER>             SNAPTBSP_QUIESCER              { get { return this.GetTable<SNAPTBSP_QUIESCER>(); } }
		public ITable<SNAPTBSP_RANGE>                SNAPTBSP_RANGE                 { get { return this.GetTable<SNAPTBSP_RANGE>(); } }
		public ITable<SNAPUTIL>                      SNAPUTILs                      { get { return this.GetTable<SNAPUTIL>(); } }
		public ITable<SNAPUTIL_PROGRESS>             SNAPUTIL_PROGRESS              { get { return this.GetTable<SNAPUTIL_PROGRESS>(); } }
		public ITable<SQLCOLPRIVILEGE>               SQLCOLPRIVILEGES               { get { return this.GetTable<SQLCOLPRIVILEGE>(); } }
		public ITable<SQLCOLUMN>                     SQLCOLUMNS                     { get { return this.GetTable<SQLCOLUMN>(); } }
		public ITable<SQLFOREIGNKEY>                 SQLFOREIGNKEYS                 { get { return this.GetTable<SQLFOREIGNKEY>(); } }
		public ITable<SQLPRIMARYKEY>                 SQLPRIMARYKEYS                 { get { return this.GetTable<SQLPRIMARYKEY>(); } }
		public ITable<SQLPROCEDURE>                  SQLPROCEDURES                  { get { return this.GetTable<SQLPROCEDURE>(); } }
		public ITable<SQLPROCEDURECOL>               SQLPROCEDURECOLS               { get { return this.GetTable<SQLPROCEDURECOL>(); } }
		public ITable<SQLSCHEMA>                     SQLSCHEMAS                     { get { return this.GetTable<SQLSCHEMA>(); } }
		public ITable<SQLSPECIALCOLUMN>              SQLSPECIALCOLUMNS              { get { return this.GetTable<SQLSPECIALCOLUMN>(); } }
		public ITable<SQLSTATISTIC>                  SQLSTATISTICS                  { get { return this.GetTable<SQLSTATISTIC>(); } }
		public ITable<SQLTABLE>                      SQLTABLES                      { get { return this.GetTable<SQLTABLE>(); } }
		public ITable<SQLTABLEPRIVILEGE>             SQLTABLEPRIVILEGES             { get { return this.GetTable<SQLTABLEPRIVILEGE>(); } }
		public ITable<SQLTABLETYPE>                  SQLTABLETYPES                  { get { return this.GetTable<SQLTABLETYPE>(); } }
		public ITable<SQLTYPEINFO>                   SQLTYPEINFOes                  { get { return this.GetTable<SQLTYPEINFO>(); } }
		public ITable<SQLUDT>                        SQLUDTS                        { get { return this.GetTable<SQLUDT>(); } }
		public ITable<STATEMENT>                     STATEMENTS                     { get { return this.GetTable<STATEMENT>(); } }
		public ITable<STATEMENTTEXT>                 STATEMENTTEXTS                 { get { return this.GetTable<STATEMENTTEXT>(); } }
		public ITable<STOGROUP>                      STOGROUPS                      { get { return this.GetTable<STOGROUP>(); } }
		public ITable<SURROGATEAUTHID>               SURROGATEAUTHIDS               { get { return this.GetTable<SURROGATEAUTHID>(); } }
		public ITable<SYSDUMMY1>                     SYSDUMMY1                      { get { return this.GetTable<SYSDUMMY1>(); } }
		public ITable<SYSFUNCPARM>                   SYSFUNCPARMS                   { get { return this.GetTable<SYSFUNCPARM>(); } }
		public ITable<SYSFUNCTION>                   SYSFUNCTIONS                   { get { return this.GetTable<SYSFUNCTION>(); } }
		public ITable<SYSPROCEDURE>                  SYSPROCEDURES                  { get { return this.GetTable<SYSPROCEDURE>(); } }
		public ITable<SYSPROCPARM>                   SYSPROCPARMS                   { get { return this.GetTable<SYSPROCPARM>(); } }
		public ITable<SYSREVTYPEMAPPING>             SYSREVTYPEMAPPINGS             { get { return this.GetTable<SYSREVTYPEMAPPING>(); } }
		public ITable<SYSROUTINEPROPERTIESJAVA>      SYSROUTINEPROPERTIESJAVAs      { get { return this.GetTable<SYSROUTINEPROPERTIESJAVA>(); } }
		/// <summary>
		/// Description of the user's own relational tables, views, and synonyms
		/// </summary>
		public ITable<TAB>                           TABs                           { get { return this.GetTable<TAB>(); } }
		public ITable<TABAUTH>                       TABAUTHs                       { get { return this.GetTable<TABAUTH>(); } }
		public ITable<TABCONST>                      TABCONSTs                      { get { return this.GetTable<TABCONST>(); } }
		public ITable<TABDEP>                        TABDEPs                        { get { return this.GetTable<TABDEP>(); } }
		public ITable<TABDETACHEDDEP>                TABDETACHEDDEPs                { get { return this.GetTable<TABDETACHEDDEP>(); } }
		public ITable<TABLE>                         TABLES                         { get { return this.GetTable<TABLE>(); } }
		public ITable<TABLE>                         TABLES                         { get { return this.GetTable<TABLE>(); } }
		public ITable<TABLE_CONSTRAINTS>             TABLE_CONSTRAINTS              { get { return this.GetTable<TABLE_CONSTRAINTS>(); } }
		public ITable<TABLES_S>                      TABLES_S                       { get { return this.GetTable<TABLES_S>(); } }
		public ITable<TABLESPACE>                    TABLESPACES                    { get { return this.GetTable<TABLESPACE>(); } }
		public ITable<TABOPTION>                     TABOPTIONS                     { get { return this.GetTable<TABOPTION>(); } }
		public ITable<TBSP_UTILIZATION>              TBSP_UTILIZATION               { get { return this.GetTable<TBSP_UTILIZATION>(); } }
		public ITable<TBSPACEAUTH>                   TBSPACEAUTHs                   { get { return this.GetTable<TBSPACEAUTH>(); } }
		public ITable<TestIdentity>                  TestIdentities                 { get { return this.GetTable<TestIdentity>(); } }
		public ITable<THRESHOLD>                     THRESHOLDS                     { get { return this.GetTable<THRESHOLD>(); } }
		public ITable<TOP_DYNAMIC_SQL>               TOP_DYNAMIC_SQL                { get { return this.GetTable<TOP_DYNAMIC_SQL>(); } }
		public ITable<TRANSFORM>                     TRANSFORMS                     { get { return this.GetTable<TRANSFORM>(); } }
		public ITable<TRIGDEP>                       TRIGDEPs                       { get { return this.GetTable<TRIGDEP>(); } }
		public ITable<TRIGGER>                       TRIGGERS                       { get { return this.GetTable<TRIGGER>(); } }
		public ITable<TYPEMAPPING>                   TYPEMAPPINGS                   { get { return this.GetTable<TYPEMAPPING>(); } }
		public ITable<UDT_S>                         UDT_S                          { get { return this.GetTable<UDT_S>(); } }
		public ITable<USAGELIST>                     USAGELISTS                     { get { return this.GetTable<USAGELIST>(); } }
		/// <summary>
		/// Description of the user's own relational tables
		/// </summary>
		public ITable<USER_ALL_TABLES>               USER_ALL_TABLES                { get { return this.GetTable<USER_ALL_TABLES>(); } }
		/// <summary>
		/// Arguments in objects owned by the user
		/// </summary>
		public ITable<USER_ARGUMENTS>                USER_ARGUMENTS                 { get { return this.GetTable<USER_ARGUMENTS>(); } }
		/// <summary>
		/// All user's own tables, views and synonyms
		/// </summary>
		public ITable<USER_CATALOG>                  USER_CATALOG                   { get { return this.GetTable<USER_CATALOG>(); } }
		/// <summary>
		/// Comments on columns of user's tables and views
		/// </summary>
		public ITable<USER_COL_COMMENTS>             USER_COL_COMMENTS              { get { return this.GetTable<USER_COL_COMMENTS>(); } }
		/// <summary>
		/// Information about columns in constraint definitions in user's own tables
		/// </summary>
		public ITable<USER_CONS_COLUMNS>             USER_CONS_COLUMNS              { get { return this.GetTable<USER_CONS_COLUMNS>(); } }
		/// <summary>
		/// Constraint definitions on user's own tables
		/// </summary>
		public ITable<USER_CONSTRAINTS>              USER_CONSTRAINTS               { get { return this.GetTable<USER_CONSTRAINTS>(); } }
		public ITable<USER_DEFINED_TYPES>            USER_DEFINED_TYPES             { get { return this.GetTable<USER_DEFINED_TYPES>(); } }
		/// <summary>
		/// Dependencies to and from a user's objects
		/// </summary>
		public ITable<USER_DEPENDENCIES>             USER_DEPENDENCIES              { get { return this.GetTable<USER_DEPENDENCIES>(); } }
		/// <summary>
		/// Current errors on stored objects owned by the user
		/// </summary>
		public ITable<USER_ERRORS>                   USER_ERRORS                    { get { return this.GetTable<USER_ERRORS>(); } }
		/// <summary>
		/// COLUMNs comprising user's INDEXes and INDEXes on user's TABLEs
		/// </summary>
		public ITable<USER_IND_COLUMNS>              USER_IND_COLUMNS               { get { return this.GetTable<USER_IND_COLUMNS>(); } }
		/// <summary>
		/// Description of partitioned-level partitioning information for the user's own index partitions
		/// </summary>
		public ITable<USER_IND_PARTITIONS>           USER_IND_PARTITIONS            { get { return this.GetTable<USER_IND_PARTITIONS>(); } }
		/// <summary>
		/// Description of the user's own indexes
		/// </summary>
		public ITable<USER_INDEXES>                  USER_INDEXES                   { get { return this.GetTable<USER_INDEXES>(); } }
		/// <summary>
		/// Objects owned by the user
		/// </summary>
		public ITable<USER_OBJECTS>                  USER_OBJECTS                   { get { return this.GetTable<USER_OBJECTS>(); } }
		/// <summary>
		/// Description of the user's own partitioned indexes
		/// </summary>
		public ITable<USER_PART_INDEXES>             USER_PART_INDEXES              { get { return this.GetTable<USER_PART_INDEXES>(); } }
		/// <summary>
		/// Description of the partitioning key columns for the user's own partitioned objects
		/// </summary>
		public ITable<USER_PART_KEY_COLUMNS>         USER_PART_KEY_COLUMNS          { get { return this.GetTable<USER_PART_KEY_COLUMNS>(); } }
		/// <summary>
		/// Description of the user's own partitioned tables
		/// </summary>
		public ITable<USER_PART_TABLES>              USER_PART_TABLES               { get { return this.GetTable<USER_PART_TABLES>(); } }
		/// <summary>
		/// Description of the user's own procedures
		/// </summary>
		public ITable<USER_PROCEDURES>               USER_PROCEDURES                { get { return this.GetTable<USER_PROCEDURES>(); } }
		/// <summary>
		/// Roles granted to current user
		/// </summary>
		public ITable<USER_ROLE_PRIVS>               USER_ROLE_PRIVS                { get { return this.GetTable<USER_ROLE_PRIVS>(); } }
		/// <summary>
		/// Description of the user's own SEQUENCEs
		/// </summary>
		public ITable<USER_SEQUENCES>                USER_SEQUENCES                 { get { return this.GetTable<USER_SEQUENCES>(); } }
		/// <summary>
		/// Source of stored objects accessible to the user
		/// </summary>
		public ITable<USER_SOURCE>                   USER_SOURCE                    { get { return this.GetTable<USER_SOURCE>(); } }
		/// <summary>
		/// The user's private synonyms
		/// </summary>
		public ITable<USER_SYNONYMS>                 USER_SYNONYMS                  { get { return this.GetTable<USER_SYNONYMS>(); } }
		/// <summary>
		/// System privileges granted to current user
		/// </summary>
		public ITable<USER_SYS_PRIVS>                USER_SYS_PRIVS                 { get { return this.GetTable<USER_SYS_PRIVS>(); } }
		/// <summary>
		/// Columns statistics for columns of user's tables
		/// </summary>
		public ITable<USER_TAB_COL_STATISTICS>       USER_TAB_COL_STATISTICS        { get { return this.GetTable<USER_TAB_COL_STATISTICS>(); } }
		/// <summary>
		/// Columns of user's tables
		/// </summary>
		public ITable<USER_TAB_COLUMNS>              USER_TAB_COLUMNS               { get { return this.GetTable<USER_TAB_COLUMNS>(); } }
		/// <summary>
		/// Comments on tables and views owned by the user
		/// </summary>
		public ITable<USER_TAB_COMMENTS>             USER_TAB_COMMENTS              { get { return this.GetTable<USER_TAB_COMMENTS>(); } }
		/// <summary>
		/// Description of partitioned-level partitioning information for the user's own table partitions
		/// </summary>
		public ITable<USER_TAB_PARTITIONS>           USER_TAB_PARTITIONS            { get { return this.GetTable<USER_TAB_PARTITIONS>(); } }
		/// <summary>
		/// Grants on objects for which the user is the owner
		/// </summary>
		public ITable<USER_TAB_PRIVS>                USER_TAB_PRIVS                 { get { return this.GetTable<USER_TAB_PRIVS>(); } }
		/// <summary>
		/// All grants on objects owner by the user
		/// </summary>
		public ITable<USER_TAB_PRIVS_MADE>           USER_TAB_PRIVS_MADE            { get { return this.GetTable<USER_TAB_PRIVS_MADE>(); } }
		/// <summary>
		/// Grants on objects for which the user is the grantee
		/// </summary>
		public ITable<USER_TAB_PRIVS_RECD>           USER_TAB_PRIVS_RECD            { get { return this.GetTable<USER_TAB_PRIVS_RECD>(); } }
		/// <summary>
		/// Description of the user's own relational tables
		/// </summary>
		public ITable<USER_TABLES>                   USER_TABLES                    { get { return this.GetTable<USER_TABLES>(); } }
		/// <summary>
		/// Description of accessible tablespaces
		/// </summary>
		public ITable<USER_TABLESPACES>              USER_TABLESPACES               { get { return this.GetTable<USER_TABLESPACES>(); } }
		/// <summary>
		/// Triggers owned by the user
		/// </summary>
		public ITable<USER_TRIGGERS>                 USER_TRIGGERS                  { get { return this.GetTable<USER_TRIGGERS>(); } }
		/// <summary>
		/// Columns of user's views
		/// </summary>
		public ITable<USER_VIEW_COLUMNS>             USER_VIEW_COLUMNS              { get { return this.GetTable<USER_VIEW_COLUMNS>(); } }
		/// <summary>
		/// Description of the user's own views
		/// </summary>
		public ITable<USER_VIEWS>                    USER_VIEWS                     { get { return this.GetTable<USER_VIEWS>(); } }
		public ITable<USEROPTION>                    USEROPTIONS                    { get { return this.GetTable<USEROPTION>(); } }
		public ITable<VARIABLE>                      VARIABLES                      { get { return this.GetTable<VARIABLE>(); } }
		public ITable<VARIABLEAUTH>                  VARIABLEAUTHs                  { get { return this.GetTable<VARIABLEAUTH>(); } }
		public ITable<VARIABLEDEP>                   VARIABLEDEPs                   { get { return this.GetTable<VARIABLEDEP>(); } }
		public ITable<VIEW>                          VIEWS                          { get { return this.GetTable<VIEW>(); } }
		public ITable<VIEW>                          VIEWS                          { get { return this.GetTable<VIEW>(); } }
		public ITable<VIEWDEP>                       VIEWDEPs                       { get { return this.GetTable<VIEWDEP>(); } }
		public ITable<WORKACTION>                    WORKACTIONS                    { get { return this.GetTable<WORKACTION>(); } }
		public ITable<WORKACTIONSET>                 WORKACTIONSETS                 { get { return this.GetTable<WORKACTIONSET>(); } }
		public ITable<WORKCLASS>                     WORKCLASSES                    { get { return this.GetTable<WORKCLASS>(); } }
		public ITable<WORKCLASSATTRIBUTE>            WORKCLASSATTRIBUTES            { get { return this.GetTable<WORKCLASSATTRIBUTE>(); } }
		public ITable<WORKCLASSSET>                  WORKCLASSSETS                  { get { return this.GetTable<WORKCLASSSET>(); } }
		public ITable<WORKLOAD>                      WORKLOADS                      { get { return this.GetTable<WORKLOAD>(); } }
		public ITable<WORKLOADAUTH>                  WORKLOADAUTHs                  { get { return this.GetTable<WORKLOADAUTH>(); } }
		public ITable<WORKLOADCONNATTR>              WORKLOADCONNATTRs              { get { return this.GetTable<WORKLOADCONNATTR>(); } }
		public ITable<WRAPOPTION>                    WRAPOPTIONS                    { get { return this.GetTable<WRAPOPTION>(); } }
		public ITable<WRAPPER>                       WRAPPERS                       { get { return this.GetTable<WRAPPER>(); } }
		public ITable<XDBMAPGRAPH>                   XDBMAPGRAPHS                   { get { return this.GetTable<XDBMAPGRAPH>(); } }
		public ITable<XDBMAPSHREDTREE>               XDBMAPSHREDTREES               { get { return this.GetTable<XDBMAPSHREDTREE>(); } }
		public ITable<XMLSTRING>                     XMLSTRINGS                     { get { return this.GetTable<XMLSTRING>(); } }
		public ITable<XSROBJECT>                     XSROBJECTS                     { get { return this.GetTable<XSROBJECT>(); } }
		public ITable<XSROBJECTAUTH>                 XSROBJECTAUTHs                 { get { return this.GetTable<XSROBJECTAUTH>(); } }
		public ITable<XSROBJECTCOMPONENT>            XSROBJECTCOMPONENTS            { get { return this.GetTable<XSROBJECTCOMPONENT>(); } }
		public ITable<XSROBJECTDEP>                  XSROBJECTDEPs                  { get { return this.GetTable<XSROBJECTDEP>(); } }
		public ITable<XSROBJECTDETAIL>               XSROBJECTDETAILS               { get { return this.GetTable<XSROBJECTDETAIL>(); } }
		public ITable<XSROBJECTHIERARCHy>            XSROBJECTHIERARCHIES           { get { return this.GetTable<XSROBJECTHIERARCHy>(); } }

		public TESTDATADB()
		{
		}

		public TESTDATADB(string configuration)
			: base(configuration)
		{
		}
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ADMINTABCOMPRESSINFO")]
	public partial class ADMINTABCOMPRESSINFO
	{
		[Column, Nullable] public string    TABSCHEMA               { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABNAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public short?    DBPARTITIONNUM          { get; set; } // SMALLINT
		[Column, Nullable] public int?      DATA_PARTITION_ID       { get; set; } // INTEGER
		[Column, Nullable] public char?     COMPRESS_ATTR           { get; set; } // CHAR(1)
		[Column, Nullable] public string    DICT_BUILDER            { get; set; } // VARCHAR(30)
		[Column, Nullable] public DateTime? DICT_BUILD_TIMESTAMP    { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     COMPRESS_DICT_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?     EXPAND_DICT_SIZE        { get; set; } // BIGINT
		[Column, Nullable] public int?      ROWS_SAMPLED            { get; set; } // INTEGER
		[Column, Nullable] public short?    PAGES_SAVED_PERCENT     { get; set; } // SMALLINT
		[Column, Nullable] public short?    BYTES_SAVED_PERCENT     { get; set; } // SMALLINT
		[Column, Nullable] public short?    AVG_COMPRESS_REC_LENGTH { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ADMINTABINFO")]
	public partial class ADMINTABINFO
	{
		[Column, Nullable] public string TABSCHEMA               { get; set; } // VARCHAR(128)
		[Column, Nullable] public string TABNAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public char?  TABTYPE                 { get; set; } // CHAR(1)
		[Column, Nullable] public short? DBPARTITIONNUM          { get; set; } // SMALLINT
		[Column, Nullable] public int?   DATA_PARTITION_ID       { get; set; } // INTEGER
		[Column, Nullable] public char?  AVAILABLE               { get; set; } // CHAR(1)
		[Column, Nullable] public long?  DATA_OBJECT_L_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?  DATA_OBJECT_P_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?  INDEX_OBJECT_L_SIZE     { get; set; } // BIGINT
		[Column, Nullable] public long?  INDEX_OBJECT_P_SIZE     { get; set; } // BIGINT
		[Column, Nullable] public long?  LONG_OBJECT_L_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?  LONG_OBJECT_P_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?  LOB_OBJECT_L_SIZE       { get; set; } // BIGINT
		[Column, Nullable] public long?  LOB_OBJECT_P_SIZE       { get; set; } // BIGINT
		[Column, Nullable] public long?  XML_OBJECT_L_SIZE       { get; set; } // BIGINT
		[Column, Nullable] public long?  XML_OBJECT_P_SIZE       { get; set; } // BIGINT
		[Column, Nullable] public short? INDEX_TYPE              { get; set; } // SMALLINT
		[Column, Nullable] public char?  REORG_PENDING           { get; set; } // CHAR(1)
		[Column, Nullable] public string INPLACE_REORG_STATUS    { get; set; } // VARCHAR(10)
		[Column, Nullable] public string LOAD_STATUS             { get; set; } // VARCHAR(12)
		[Column, Nullable] public char?  READ_ACCESS_ONLY        { get; set; } // CHAR(1)
		[Column, Nullable] public char?  NO_LOAD_RESTART         { get; set; } // CHAR(1)
		[Column, Nullable] public short? NUM_REORG_REC_ALTERS    { get; set; } // SMALLINT
		[Column, Nullable] public char?  INDEXES_REQUIRE_REBUILD { get; set; } // CHAR(1)
		[Column, Nullable] public char?  LARGE_RIDS              { get; set; } // CHAR(1)
		[Column, Nullable] public char?  LARGE_SLOTS             { get; set; } // CHAR(1)
		[Column, Nullable] public long?  DICTIONARY_SIZE         { get; set; } // BIGINT
		[Column, Nullable] public long?  BLOCKS_PENDING_CLEANUP  { get; set; } // BIGINT
		[Column, Nullable] public char?  STATSTYPE               { get; set; } // CHAR(1)
		[Column, Nullable] public short? XML_RECORD_TYPE         { get; set; } // SMALLINT
		[Column, Nullable] public long?  RECLAIMABLE_SPACE       { get; set; } // BIGINT
		[Column, Nullable] public long?  XML_DICTIONARY_SIZE     { get; set; } // BIGINT
		[Column, Nullable] public string AMT_STATUS              { get; set; } // VARCHAR(12)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ADMINTEMPCOLUMNS")]
	public partial class ADMINTEMPCOLUMN
	{
		[Column, Nullable] public long?  APPLICATION_HANDLE { get; set; } // BIGINT
		[Column, Nullable] public string APPLICATION_NAME   { get; set; } // VARCHAR(256)
		[Column, Nullable] public string TABSCHEMA          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string TABNAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string COLNAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public short? COLNO              { get; set; } // SMALLINT
		[Column, Nullable] public string TYPESCHEMA         { get; set; } // VARCHAR(128)
		[Column, Nullable] public string TYPENAME           { get; set; } // VARCHAR(128)
		[Column, Nullable] public int?   LENGTH             { get; set; } // INTEGER
		[Column, Nullable] public short? SCALE              { get; set; } // SMALLINT
		[Column, Nullable] public string DEFAULT            { get; set; } // VARCHAR(254)
		[Column, Nullable] public char?  NULLS              { get; set; } // CHAR(1)
		[Column, Nullable] public short? CODEPAGE           { get; set; } // SMALLINT
		[Column, Nullable] public char?  LOGGED             { get; set; } // CHAR(1)
		[Column, Nullable] public char?  COMPACT            { get; set; } // CHAR(1)
		[Column, Nullable] public int?   INLINE_LENGTH      { get; set; } // INTEGER
		[Column, Nullable] public char?  IDENTITY           { get; set; } // CHAR(1)
		[Column, Nullable] public char?  GENERATED          { get; set; } // CHAR(1)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ADMINTEMPTABLES")]
	public partial class ADMINTEMPTABLE
	{
		[Column, Nullable] public long?     APPLICATION_HANDLE { get; set; } // BIGINT
		[Column, Nullable] public string    APPLICATION_NAME   { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    TABSCHEMA          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABNAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    INSTANTIATOR       { get; set; } // VARCHAR(128)
		[Column, Nullable] public char?     INSTANTIATORTYPE   { get; set; } // CHAR(1)
		[Column, Nullable] public char?     TEMPTABTYPE        { get; set; } // CHAR(1)
		[Column, Nullable] public DateTime? INSTANTIATION_TIME { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    COLCOUNT           { get; set; } // SMALLINT
		[Column, Nullable] public long?     TAB_FILE_ID        { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_ID            { get; set; } // BIGINT
		[Column, Nullable] public short?    PMAP_ID            { get; set; } // SMALLINT
		[Column, Nullable] public char?     PARTITION_MODE     { get; set; } // CHAR(1)
		[Column, Nullable] public short?    CODEPAGE           { get; set; } // SMALLINT
		[Column, Nullable] public char?     ONCOMMIT           { get; set; } // CHAR(1)
		[Column, Nullable] public char?     ONROLLBACK         { get; set; } // CHAR(1)
		[Column, Nullable] public char?     LOGGED             { get; set; } // CHAR(1)
	}

	// View
	/// <summary>
	/// Description of relational tables accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_ALL_TABLES")]
	public partial class ALL_ALL_TABLES
	{
		[Column, NotNull    ] public string    OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    TABLESPACE_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE        { get; set; } // SMALLINT
		[Column,    Nullable] public int?      INITIAL_EXTENT  { get; set; } // INTEGER
		[Column,    Nullable] public int?      NEXT_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE    { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public long      NUM_ROWS        { get; set; } // BIGINT
		[Column, NotNull    ] public long      BLOCKS          { get; set; } // BIGINT
		[Column, NotNull    ] public long      EMPTY_BLOCKS    { get; set; } // BIGINT
		[Column, NotNull    ] public short     AVG_ROW_LEN     { get; set; } // SMALLINT
		[Column, NotNull    ] public string    TABLE_LOCK      { get; set; } // VARCHAR(8)
		[Column,    Nullable] public DateTime? LAST_ANALYZED   { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED     { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      TEMPORARY       { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS    { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION     { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Arguments in objects accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_ARGUMENTS")]
	public partial class ALL_ARGUMENTS
	{
		[Column, NotNull    ] public string OWNER         { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PACKAGE_NAME  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int    OBJECT_ID     { get; set; } // INTEGER
		[Column,    Nullable] public string ARGUMENT_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short  SEQUENCE      { get; set; } // SMALLINT
		[Column,    Nullable] public string DATA_TYPE     { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string IN_OUT        { get; set; } // VARCHAR(6)
		[Column, NotNull    ] public int    DATA_LENGTH   { get; set; } // INTEGER
		[Column, NotNull    ] public short  DATA_SCALE    { get; set; } // SMALLINT
	}

	// View
	/// <summary>
	/// All accessible tables, views and synonyms
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_CATALOG")]
	public partial class ALL_CATALOG
	{
		[Column, NotNull] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_TYPE   { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Comments on columns of accessible tables and views
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_COL_COMMENTS")]
	public partial class ALL_COL_COMMENTS
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME  { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	// View
	/// <summary>
	/// Information about columns in constraint definitions in accessible tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_CONS_COLUMNS")]
	public partial class ALL_CONS_COLUMNS
	{
		[Column, NotNull] public string OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull] public string CONSTRAINT_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public short  POSITION        { get; set; } // SMALLINT
	}

	// View
	/// <summary>
	/// Constraint definitions on accessible tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_CONSTRAINTS")]
	public partial class ALL_CONSTRAINTS
	{
		[Column, NotNull    ] public string OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string CONSTRAINT_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public char   CONSTRAINT_TYPE   { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public string TABLE_SCHEMA      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string R_OWNER           { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string R_CONSTRAINT_NAME { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string DELETE_RULE       { get; set; } // VARCHAR(9)
		[Column,    Nullable] public string STATUS            { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string DEFERRED          { get; set; } // VARCHAR(9)
		[Column,    Nullable] public string VALIDATED         { get; set; } // VARCHAR(13)
		[Column, NotNull    ] public char   GENERATED         { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public char   RELY              { get; set; } // CHAR(1)
		[Column,    Nullable] public string INDEX_OWNER       { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string INDEX_NAME        { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// Dependencies to and from objects accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_DEPENDENCIES")]
	public partial class ALL_DEPENDENCIES
	{
		[Column, NotNull    ] public string OWNER             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME              { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TYPE              { get; set; } // VARCHAR(15)
		[Column, NotNull    ] public string REFERENCED_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string REFERENCED_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string REFERENCED_TYPE   { get; set; } // VARCHAR(20)
	}

	// View
	/// <summary>
	/// Objects accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_ERRORS")]
	public partial class ALL_ERRORS
	{
		[Column, NotNull    ] public string OWNER  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TYPE   { get; set; } // VARCHAR(15)
		[Column,    Nullable] public int?   LINE   { get; set; } // INTEGER
		[Column,    Nullable] public string TEXT   { get; set; } // VARCHAR(32672)
	}

	// View
	/// <summary>
	/// COLUMNs comprising INDEXes on accessible TABLEs
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_IND_COLUMNS")]
	public partial class ALL_IND_COLUMNS
	{
		[Column, NotNull] public string INDEX_OWNER     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string INDEX_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string INDEX_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_OWNER     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public short  COLUMN_POSITION { get; set; } // SMALLINT
		[Column, NotNull] public char   DESCEND         { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Description of partitioned-level partitioning information for index partitions accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_IND_PARTITIONS")]
	public partial class ALL_IND_PARTITIONS
	{
		[Column, NotNull    ] public string    INDEX_OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    PARTITION_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    HIGH_VALUE              { get; set; } // VARCHAR(512)
		[Column, NotNull    ] public int       HIGH_VALUE_LENGTH       { get; set; } // INTEGER
		[Column, NotNull    ] public int       PARTITION_POSITION      { get; set; } // INTEGER
		[Column, NotNull    ] public string    TABLESPACE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE                { get; set; } // SMALLINT
		[Column, NotNull    ] public string    LOGGING                 { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION             { get; set; } // VARCHAR(8)
		[Column, NotNull    ] public short     BLEVEL                  { get; set; } // SMALLINT
		[Column, NotNull    ] public long      LEAF_BLOCKS             { get; set; } // BIGINT
		[Column, NotNull    ] public long      DISTINCT_KEYS           { get; set; } // BIGINT
		[Column, NotNull    ] public int       AVG_LEAF_BLOCKS_PER_KEY { get; set; } // INTEGER
		[Column, NotNull    ] public double    CLUSTERING_FACTOR       { get; set; } // DOUBLE
		[Column, NotNull    ] public long      NUM_ROWS                { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED           { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    BUFFER_POOL             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS            { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of indexes on tables accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_INDEXES")]
	public partial class ALL_INDEXES
	{
		[Column, NotNull    ] public string    OWNER                   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_TYPE              { get; set; } // CHAR(4)
		[Column, NotNull    ] public string    TABLE_OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_TYPE              { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public string    UNIQUENESS              { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string    COMPRESSION             { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string    TABLESPACE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE                { get; set; } // SMALLINT
		[Column, NotNull    ] public string    LOGGING                 { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public short     BLEVEL                  { get; set; } // SMALLINT
		[Column, NotNull    ] public long      LEAF_BLOCKS             { get; set; } // BIGINT
		[Column, NotNull    ] public long      DISTINCT_KEYS           { get; set; } // BIGINT
		[Column, NotNull    ] public int       AVG_LEAF_BLOCKS_PER_KEY { get; set; } // INTEGER
		[Column, NotNull    ] public double    CLUSTERING_FACTOR       { get; set; } // DOUBLE
		[Column, NotNull    ] public string    STATUS                  { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public long      NUM_ROWS                { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED           { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED             { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      GENERATED               { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL             { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// Objects accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_OBJECTS")]
	public partial class ALL_OBJECTS
	{
		[Column, NotNull    ] public string    OWNER          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    OBJECT_SCHEMA  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    OBJECT_NAME    { get; set; } // VARCHAR(128)
		[Column,    Nullable] public int?      OBJECT_ID      { get; set; } // INTEGER
		[Column,    Nullable] public int?      DATA_OBJECT_ID { get; set; } // INTEGER
		[Column, NotNull    ] public string    OBJECT_TYPE    { get; set; } // VARCHAR(24)
		[Column, NotNull    ] public DateTime  CREATED        { get; set; } // TIMESTAMP
		[Column,    Nullable] public DateTime? LAST_DDL_TIME  { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    TIMESTAMP      { get; set; } // CHAR(26)
		[Column, NotNull    ] public string    STATUS         { get; set; } // VARCHAR(7)
		[Column, NotNull    ] public char      TEMPORARY      { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public char      GENERATED      { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Description of partitioned tables accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_PART_INDEXES")]
	public partial class ALL_PART_INDEXES
	{
		[Column, NotNull    ] public string OWNER                  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string INDEX_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string INDEX_NAME             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PARTITIONING_TYPE      { get; set; } // VARCHAR(10)
		[Column, NotNull    ] public string SUBPARTITIONING_TYPE   { get; set; } // VARCHAR(4)
		[Column, NotNull    ] public int    PARTITION_COUNT        { get; set; } // INTEGER
		[Column, NotNull    ] public short  PARTITIONING_KEY_COUNT { get; set; } // SMALLINT
		[Column, NotNull    ] public short  DEF_PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int    DEF_PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string DEF_LOGGING            { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of partitioning key columns for the partitioned objects accessible to the current user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_PART_KEY_COLUMNS")]
	public partial class ALL_PART_KEY_COLUMNS
	{
		[Column, NotNull    ] public string OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_SCHEMA   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_TYPE     { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column,    Nullable] public int?   COLUMN_POSITION { get; set; } // INTEGER
	}

	// View
	/// <summary>
	/// Description of partitioned tables accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_PART_TABLES")]
	public partial class ALL_PART_TABLES
	{
		[Column, NotNull    ] public string OWNER                  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PARTITIONING_TYPE      { get; set; } // VARCHAR(10)
		[Column, NotNull    ] public string SUBPARTITIONING_TYPE   { get; set; } // VARCHAR(4)
		[Column,    Nullable] public int?   PARTITION_COUNT        { get; set; } // INTEGER
		[Column,    Nullable] public int?   PARTITIONING_KEY_COUNT { get; set; } // INTEGER
		[Column, NotNull    ] public short  DEF_PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int    DEF_PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string DEF_LOGGING            { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string DEF_COMPRESSION        { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Description of all procedures available to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_PROCEDURES")]
	public partial class ALL_PROCEDURES
	{
		[Column, NotNull    ] public string OWNER                   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_SCHEMA           { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_NAME             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_SCHEMA        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_SPECIFIC_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string AGGREGATE               { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string PARALLEL                { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of SEQUENCEs accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_SEQUENCES")]
	public partial class ALL_SEQUENCES
	{
		[Column, NotNull    ] public string   SEQUENCE_OWNER  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   SEQUENCE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   SEQUENCE_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public decimal? MIN_VALUE       { get; set; } // DECIMAL
		[Column,    Nullable] public decimal? MAX_VALUE       { get; set; } // DECIMAL
		[Column,    Nullable] public decimal? INCREMENT_BY    { get; set; } // DECIMAL
		[Column, NotNull    ] public char     CYCLE_FLAG      { get; set; } // CHAR(1)
		[Column, NotNull    ] public char     ORDER_FLAG      { get; set; } // CHAR(1)
		[Column, NotNull    ] public int      CACHE_SIZE      { get; set; } // INTEGER
		[Column,    Nullable] public decimal? LAST_NUMBER     { get; set; } // DECFLOAT(16)
	}

	// View
	/// <summary>
	/// Current source on stored objects that the user is allowed to create
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_SOURCE")]
	public partial class ALL_SOURCE
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SCHEMA       { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME         { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string SPECIFICNAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TYPE         { get; set; } // VARCHAR(12)
		[Column,    Nullable] public string TEXT         { get; set; } // CLOB(2097152)
	}

	// View
	/// <summary>
	/// All synonyms accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_SYNONYMS")]
	public partial class ALL_SYNONYMS
	{
		[Column, NotNull    ] public string OWNER          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SYNONYM_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SYNONYM_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_OWNER    { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_SCHEMA   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME     { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// Column statistics for columns of tables accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TAB_COL_STATISTICS")]
	public partial class ALL_TAB_COL_STATISTICS
	{
		[Column, NotNull    ] public string    OWNER         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    COLUMN_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public long      NUM_DISTINCT  { get; set; } // BIGINT
		[Column, NotNull    ] public long      NUM_NULLS     { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    GLOBAL_STATS  { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public int       AVG_COL_LEN   { get; set; } // INTEGER
	}

	// View
	/// <summary>
	/// Columns of tables accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TAB_COLUMNS")]
	public partial class ALL_TAB_COLUMNS
	{
		[Column, NotNull    ] public string    OWNER                { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    COLUMN_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    DATA_TYPE            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    DATA_TYPE_OWNER      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int       DATA_LENGTH          { get; set; } // INTEGER
		[Column,    Nullable] public int?      DATA_PRECISION       { get; set; } // INTEGER
		[Column, NotNull    ] public short     DATA_SCALE           { get; set; } // SMALLINT
		[Column, NotNull    ] public char      NULLABLE             { get; set; } // CHAR(1)
		[Column, NotNull    ] public short     COLUMN_ID            { get; set; } // SMALLINT
		[Column,    Nullable] public int?      DEFAULT_LENGTH       { get; set; } // INTEGER
		[Column,    Nullable] public string    DATA_DEFAULT         { get; set; } // CLOB(65536)
		[Column, NotNull    ] public long      NUM_DISTINCT         { get; set; } // BIGINT
		[Column, NotNull    ] public long      NUM_NULLS            { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED        { get; set; } // TIMESTAMP
		[Column,    Nullable] public int?      CHAR_COL_DECL_LENGTH { get; set; } // INTEGER
		[Column, NotNull    ] public string    GLOBAL_STATS         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public int       AVG_COL_LEN          { get; set; } // INTEGER
		[Column, NotNull    ] public int       CHAR_LENGTH          { get; set; } // INTEGER
		[Column, NotNull    ] public char      CHAR_USED            { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Comments on tables and views accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TAB_COMMENTS")]
	public partial class ALL_TAB_COMMENTS
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_TYPE   { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	// View
	/// <summary>
	/// Description of partitioned-level partitioning information for table partitions accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TAB_PARTITIONS")]
	public partial class ALL_TAB_PARTITIONS
	{
		[Column, NotNull    ] public string    OWNER              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA       { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    PARTITION_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    HIGH_VALUE         { get; set; } // VARCHAR(512)
		[Column, NotNull    ] public int       HIGH_VALUE_LENGTH  { get; set; } // INTEGER
		[Column, NotNull    ] public int       PARTITION_POSITION { get; set; } // INTEGER
		[Column, NotNull    ] public string    TABLESPACE_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int       INITIAL_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       NEXT_EXTENT        { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING            { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION        { get; set; } // VARCHAR(8)
		[Column, NotNull    ] public short     AVG_ROW_LEN        { get; set; } // SMALLINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED      { get; set; } // TIMESTAMP
		[Column,    Nullable] public string    BUFFER_POOL        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS       { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Grants on objects for which the user is the grantor, grantee, owner, or PUBLIC is the grantee
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TAB_PRIVS")]
	public partial class ALL_TAB_PRIVS
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTOR      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// User's grants and grants on user's objects
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TAB_PRIVS_MADE")]
	public partial class ALL_TAB_PRIVS_MADE
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTOR      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Grants on objects for which the user or PUBLIC is the grantee
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TAB_PRIVS_RECD")]
	public partial class ALL_TAB_PRIVS_RECD
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTOR      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of relational tables accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TABLES")]
	public partial class ALL_TABLES
	{
		[Column, NotNull    ] public string    OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    TABLESPACE_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE        { get; set; } // SMALLINT
		[Column,    Nullable] public int?      INITIAL_EXTENT  { get; set; } // INTEGER
		[Column,    Nullable] public int?      NEXT_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE    { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public long      NUM_ROWS        { get; set; } // BIGINT
		[Column, NotNull    ] public long      BLOCKS          { get; set; } // BIGINT
		[Column, NotNull    ] public long      EMPTY_BLOCKS    { get; set; } // BIGINT
		[Column, NotNull    ] public short     AVG_ROW_LEN     { get; set; } // SMALLINT
		[Column, NotNull    ] public string    TABLE_LOCK      { get; set; } // VARCHAR(8)
		[Column,    Nullable] public DateTime? LAST_ANALYZED   { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED     { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      TEMPORARY       { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS    { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION     { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Triggers accessible to the current user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_TRIGGERS")]
	public partial class ALL_TRIGGERS
	{
		[Column, NotNull] public string OWNER            { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_SCHEMA   { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_TYPE     { get; set; } // VARCHAR(15)
		[Column, NotNull] public string TRIGGERING_EVENT { get; set; } // VARCHAR(7)
		[Column, NotNull] public string TABLE_OWNER      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string BASE_OBJECT_TYPE { get; set; } // VARCHAR(5)
		[Column, NotNull] public string TABLE_SCHEMA     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME       { get; set; } // VARCHAR(128)
		[Column, NotNull] public string STATUS           { get; set; } // VARCHAR(8)
		[Column, NotNull] public string TRIGGER_BODY     { get; set; } // CLOB(2097152)
	}

	// View
	/// <summary>
	/// Columns of views accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_VIEW_COLUMNS")]
	public partial class ALL_VIEW_COLUMNS
	{
		[Column, NotNull    ] public string OWNER          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string VIEW_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string VIEW_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string DATA_TYPE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int    DATA_LENGTH    { get; set; } // INTEGER
		[Column,    Nullable] public int?   DATA_PRECISION { get; set; } // INTEGER
		[Column, NotNull    ] public short  DATA_SCALE     { get; set; } // SMALLINT
		[Column, NotNull    ] public short  COLUMN_ID      { get; set; } // SMALLINT
		[Column, NotNull    ] public char   NULLABLE       { get; set; } // CHAR(1)
		[Column,    Nullable] public string DATA_DEFAULT   { get; set; } // CLOB(65536)
	}

	// View
	/// <summary>
	/// Description of views accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ALL_VIEWS")]
	public partial class ALL_VIEWS
	{
		[Column, NotNull] public string OWNER       { get; set; } // VARCHAR(128)
		[Column, NotNull] public string VIEW_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull] public string VIEW_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull] public int    TEXT_LENGTH { get; set; } // INTEGER
		[Column, NotNull] public string TEXT        { get; set; } // CLOB(2097152)
	}

	[Table(Schema="ADMINISTRATOR", Name="ALLTYPES")]
	public partial class ALLTYPE
	{
		[PrimaryKey, Identity] public int       ID                { get; set; } // INTEGER
		[Column,     Nullable] public long?     BIGINTDATATYPE    { get; set; } // BIGINT
		[Column,     Nullable] public int?      INTDATATYPE       { get; set; } // INTEGER
		[Column,     Nullable] public short?    SMALLINTDATATYPE  { get; set; } // SMALLINT
		[Column,     Nullable] public decimal?  DECIMALDATATYPE   { get; set; } // DECIMAL
		[Column,     Nullable] public decimal?  DECFLOATDATATYPE  { get; set; } // DECFLOAT(16)
		[Column,     Nullable] public float?    REALDATATYPE      { get; set; } // REAL
		[Column,     Nullable] public double?   DOUBLEDATATYPE    { get; set; } // DOUBLE
		[Column,     Nullable] public char?     CHARDATATYPE      { get; set; } // CHAR(1)
		[Column,     Nullable] public string    VARCHARDATATYPE   { get; set; } // VARCHAR(20)
		[Column,     Nullable] public string    CLOBDATATYPE      { get; set; } // CLOB(1048576)
		[Column,     Nullable] public string    DBCLOBDATATYPE    { get; set; } // DBCLOB(100)
		[Column,     Nullable] public byte[]    BINARYDATATYPE    { get; set; } // CHAR (5) FOR BIT DATA
		[Column,     Nullable] public byte[]    VARBINARYDATATYPE { get; set; } // VARCHAR (5) FOR BIT DATA
		[Column,     Nullable] public byte[]    BLOBDATATYPE      { get; set; } // BLOB(10)
		[Column,     Nullable] public string    GRAPHICDATATYPE   { get; set; } // GRAPHIC(10)
		[Column,     Nullable] public DateTime? DATEDATATYPE      { get; set; } // DATE
		[Column,     Nullable] public TimeSpan? TIMEDATATYPE      { get; set; } // TIME
		[Column,     Nullable] public DateTime? TIMESTAMPDATATYPE { get; set; } // TIMESTAMP
		[Column,     Nullable] public string    XMLDATATYPE       { get; set; } // XML
	}

	// View
	[Table(Schema="SYSIBMADM", Name="APPL_PERFORMANCE")]
	public partial class APPL_PERFORMANCE
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP    { get; set; } // TIMESTAMP
		[Column, Nullable] public string    AUTHID                { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    APPL_NAME             { get; set; } // VARCHAR(256)
		[Column, Nullable] public long?     AGENT_ID              { get; set; } // BIGINT
		[Column, Nullable] public decimal?  PERCENT_ROWS_SELECTED { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public short?    DBPARTITIONNUM        { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="APPLICATIONS")]
	public partial class APPLICATION
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP   { get; set; } // TIMESTAMP
		[Column, Nullable] public string    CLIENT_DB_ALIAS      { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_NAME              { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     AGENT_ID             { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_NAME            { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    AUTHID               { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    APPL_ID              { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    APPL_STATUS          { get; set; } // VARCHAR(22)
		[Column, Nullable] public DateTime? STATUS_CHANGE_TIME   { get; set; } // TIMESTAMP
		[Column, Nullable] public string    SEQUENCE_NO          { get; set; } // VARCHAR(4)
		[Column, Nullable] public string    CLIENT_PRDID         { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     CLIENT_PID           { get; set; } // BIGINT
		[Column, Nullable] public string    CLIENT_PLATFORM      { get; set; } // VARCHAR(12)
		[Column, Nullable] public string    CLIENT_PROTOCOL      { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    CLIENT_NNAME         { get; set; } // VARCHAR(128)
		[Column, Nullable] public short?    COORD_NODE_NUM       { get; set; } // SMALLINT
		[Column, Nullable] public long?     COORD_AGENT_PID      { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_ASSOC_AGENTS     { get; set; } // BIGINT
		[Column, Nullable] public string    TPMON_CLIENT_USERID  { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    TPMON_CLIENT_WKSTN   { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    TPMON_CLIENT_APP     { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    TPMON_ACC_STR        { get; set; } // VARCHAR(200)
		[Column, Nullable] public short?    DBPARTITIONNUM       { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER               { get; set; } // SMALLINT
		[Column, Nullable] public short?    COORD_MEMBER         { get; set; } // SMALLINT
		[Column, Nullable] public short?    COORD_DBPARTITIONNUM { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSCAT", Name="ATTRIBUTES")]
	public partial class ATTRIBUTE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="AUDITPOLICIES")]
	public partial class AUDITPOLICy
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="AUDITUSE")]
	public partial class AUDITUSE
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="AUTHORIZATIONIDS")]
	public partial class AUTHORIZATIONID
	{
		[Column, NotNull] public string AUTHID     { get; set; } // VARCHAR(128)
		[Column, NotNull] public char   AUTHIDTYPE { get; set; } // CHAR(1)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="BP_HITRATIO")]
	public partial class BP_HITRATIO
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP      { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    BP_NAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TOTAL_LOGICAL_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_PHYSICAL_READS    { get; set; } // BIGINT
		[Column, Nullable] public decimal?  TOTAL_HIT_RATIO_PERCENT { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?     DATA_LOGICAL_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     DATA_PHYSICAL_READS     { get; set; } // BIGINT
		[Column, Nullable] public decimal?  DATA_HIT_RATIO_PERCENT  { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?     INDEX_LOGICAL_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     INDEX_PHYSICAL_READS    { get; set; } // BIGINT
		[Column, Nullable] public decimal?  INDEX_HIT_RATIO_PERCENT { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?     XDA_LOGICAL_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     XDA_PHYSICAL_READS      { get; set; } // BIGINT
		[Column, Nullable] public decimal?  XDA_HIT_RATIO_PERCENT   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public short?    DBPARTITIONNUM          { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                  { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="BP_READ_IO")]
	public partial class BP_READ_IO
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP         { get; set; } // TIMESTAMP
		[Column, Nullable] public string    BP_NAME                    { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TOTAL_PHYSICAL_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_READ_TIME_MS       { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_ASYNC_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_ASYNC_READ_TIME_MS { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SYNC_READS           { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_SYNC_READ_TIME_MS  { get; set; } // BIGINT
		[Column, Nullable] public decimal?  PERCENT_SYNC_READS         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal?  ASYNC_NOT_READ_PERCENT     { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public short?    DBPARTITIONNUM             { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                     { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="BP_WRITE_IO")]
	public partial class BP_WRITE_IO
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP          { get; set; } // TIMESTAMP
		[Column, Nullable] public string    BP_NAME                     { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TOTAL_WRITES                { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_WRITE_TIME_MS       { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_ASYNC_WRITES          { get; set; } // BIGINT
		[Column, Nullable] public long?     PERCENT_WRITES_ASYNC        { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_ASYNC_WRITE_TIME_MS { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SYNC_WRITES           { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_SYNC_WRITE_TIME_MS  { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM              { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                      { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSCAT", Name="BUFFERPOOLS")]
	public partial class BUFFERPOOL
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="BUFFERPOOLDBPARTITIONS")]
	public partial class BUFFERPOOLDBPARTITION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="BUFFERPOOLEXCEPTIONS")]
	public partial class BUFFERPOOLEXCEPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="BUFFERPOOLNODES")]
	public partial class BUFFERPOOLNODE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="CASTFUNCTIONS")]
	public partial class CASTFUNCTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="CHECKS")]
	public partial class CHECK
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="CHECK_CONSTRAINTS")]
	public partial class CHECK_CONSTRAINTS
	{
	}

	[Table(Schema="ADMINISTRATOR", Name="Child")]
	public partial class Child
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID  { get; set; } // INTEGER
	}

	// View
	[Table(Schema="SYSCAT", Name="COLAUTH")]
	public partial class COLAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLCHECKS")]
	public partial class COLCHECK
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLDIST")]
	public partial class COLDIST
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLGROUPS")]
	public partial class COLGROUP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLGROUPCOLS")]
	public partial class COLGROUPCOL
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLGROUPDIST")]
	public partial class COLGROUPDIST
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLGROUPDISTCOUNTS")]
	public partial class COLGROUPDISTCOUNT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLIDENTATTRIBUTES")]
	public partial class COLIDENTATTRIBUTE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLLATIONS")]
	public partial class COLLATION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLOPTIONS")]
	public partial class COLOPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLUMNS")]
	public partial class COLUMN
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="COLUMNS")]
	public partial class COLUMN
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="COLUMNS_S")]
	public partial class COLUMNS_S
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="COLUSE")]
	public partial class COLUSE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="CONDITIONS")]
	public partial class CONDITION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="CONSTDEP")]
	public partial class CONSTDEP
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="CONTACTS")]
	public partial class CONTACT
	{
		[Column, Nullable] public string NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string TYPE            { get; set; } // VARCHAR(5)
		[Column, Nullable] public string ADDRESS         { get; set; } // VARCHAR(128)
		[Column, Nullable] public int?   MAX_PAGE_LENGTH { get; set; } // INTEGER
		[Column, Nullable] public string DESCRIPTION     { get; set; } // VARCHAR(128)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="CONTACTGROUPS")]
	public partial class CONTACTGROUP
	{
		[Column, Nullable] public string NAME        { get; set; } // VARCHAR(128)
		[Column, Nullable] public string DESCRIPTION { get; set; } // VARCHAR(128)
		[Column, Nullable] public string MEMBERNAME  { get; set; } // VARCHAR(128)
		[Column, Nullable] public string MEMBERTYPE  { get; set; } // VARCHAR(7)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="CONTAINER_UTILIZATION")]
	public partial class CONTAINER_UTILIZATION
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    TBSP_NAME          { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TBSP_ID            { get; set; } // BIGINT
		[Column, Nullable] public string    CONTAINER_NAME     { get; set; } // VARCHAR(256)
		[Column, Nullable] public long?     CONTAINER_ID       { get; set; } // BIGINT
		[Column, Nullable] public string    CONTAINER_TYPE     { get; set; } // VARCHAR(16)
		[Column, Nullable] public long?     TOTAL_PAGES        { get; set; } // BIGINT
		[Column, Nullable] public long?     USABLE_PAGES       { get; set; } // BIGINT
		[Column, Nullable] public short?    ACCESSIBLE         { get; set; } // SMALLINT
		[Column, Nullable] public long?     STRIPE_SET         { get; set; } // BIGINT
		[Column, Nullable] public string    FS_ID              { get; set; } // VARCHAR(22)
		[Column, Nullable] public long?     FS_TOTAL_SIZE_KB   { get; set; } // BIGINT
		[Column, Nullable] public long?     FS_USED_SIZE_KB    { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSCAT", Name="CONTEXTS")]
	public partial class CONTEXT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="CONTEXTATTRIBUTES")]
	public partial class CONTEXTATTRIBUTE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="CONTROLS")]
	public partial class CONTROL
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="CONTROLDEP")]
	public partial class CONTROLDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="DATAPARTITIONS")]
	public partial class DATAPARTITION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="DATAPARTITIONEXPRESSION")]
	public partial class DATAPARTITIONEXPRESSION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="DATATYPES")]
	public partial class DATATYPE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="DATATYPEDEP")]
	public partial class DATATYPEDEP
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DB_HISTORY")]
	public partial class DB_HISTORY
	{
		[Column, Nullable] public short? DBPARTITIONNUM { get; set; } // SMALLINT
		[Column, Nullable] public long?  EID            { get; set; } // BIGINT
		[Column, Nullable] public string START_TIME     { get; set; } // VARCHAR(14)
		[Column, Nullable] public short? SEQNUM         { get; set; } // SMALLINT
		[Column, Nullable] public string END_TIME       { get; set; } // VARCHAR(14)
		[Column, Nullable] public int?   NUM_LOG_ELEMS  { get; set; } // INTEGER
		[Column, Nullable] public string FIRSTLOG       { get; set; } // VARCHAR(4000)
		[Column, Nullable] public string LASTLOG        { get; set; } // VARCHAR(4000)
		[Column, Nullable] public string BACKUP_ID      { get; set; } // VARCHAR(24)
		[Column, Nullable] public string TABSCHEMA      { get; set; } // VARCHAR(128)
		[Column, Nullable] public string TABNAME        { get; set; } // VARCHAR(128)
		[Column, Nullable] public string COMMENT        { get; set; } // VARCHAR(254)
		[Column, Nullable] public string CMD_TEXT       { get; set; } // CLOB(2097152)
		[Column, Nullable] public int?   NUM_TBSPS      { get; set; } // INTEGER
		[Column, Nullable] public string TBSPNAMES      { get; set; } // CLOB(5242880)
		[Column, Nullable] public char?  OPERATION      { get; set; } // CHAR(1)
		[Column, Nullable] public char?  OPERATIONTYPE  { get; set; } // CHAR(1)
		[Column, Nullable] public char?  OBJECTTYPE     { get; set; } // CHAR(1)
		[Column, Nullable] public string LOCATION       { get; set; } // VARCHAR(255)
		[Column, Nullable] public char?  DEVICETYPE     { get; set; } // CHAR(1)
		[Column, Nullable] public char?  ENTRY_STATUS   { get; set; } // CHAR(1)
		[Column, Nullable] public string SQLCAID        { get; set; } // VARCHAR(8)
		[Column, Nullable] public int?   SQLCABC        { get; set; } // INTEGER
		[Column, Nullable] public int?   SQLCODE        { get; set; } // INTEGER
		[Column, Nullable] public short? SQLERRML       { get; set; } // SMALLINT
		[Column, Nullable] public string SQLERRMC       { get; set; } // VARCHAR(70)
		[Column, Nullable] public string SQLERRP        { get; set; } // VARCHAR(8)
		[Column, Nullable] public int?   SQLERRD1       { get; set; } // INTEGER
		[Column, Nullable] public int?   SQLERRD2       { get; set; } // INTEGER
		[Column, Nullable] public int?   SQLERRD3       { get; set; } // INTEGER
		[Column, Nullable] public int?   SQLERRD4       { get; set; } // INTEGER
		[Column, Nullable] public int?   SQLERRD5       { get; set; } // INTEGER
		[Column, Nullable] public int?   SQLERRD6       { get; set; } // INTEGER
		[Column, Nullable] public string SQLWARN        { get; set; } // VARCHAR(11)
		[Column, Nullable] public string SQLSTATE       { get; set; } // VARCHAR(5)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DB2_CF")]
	public partial class DB2_CF
	{
		[Column, Nullable] public short? ID           { get; set; } // SMALLINT
		[Column, Nullable] public string CURRENT_HOST { get; set; } // VARCHAR(255)
		[Column, Nullable] public string STATE        { get; set; } // VARCHAR(32)
		[Column, Nullable] public string ALERT        { get; set; } // VARCHAR(8)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DB2_CLUSTER_HOST_STATE")]
	public partial class DB2_CLUSTER_HOST_STATE
	{
		[Column, Nullable] public string HOSTNAME         { get; set; } // VARCHAR(255)
		[Column, Nullable] public string STATE            { get; set; } // VARCHAR(32)
		[Column, Nullable] public string INSTANCE_STOPPED { get; set; } // VARCHAR(8)
		[Column, Nullable] public string ALERT            { get; set; } // VARCHAR(8)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DB2_INSTANCE_ALERTS")]
	public partial class DB2_INSTANCE_ALERTS
	{
		[Column, Nullable] public string MESSAGE { get; set; } // VARCHAR(32672)
		[Column, Nullable] public string ACTION  { get; set; } // VARCHAR(32672)
		[Column, Nullable] public string IMPACT  { get; set; } // VARCHAR(32672)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DB2_MEMBER")]
	public partial class DB2_MEMBER
	{
		[Column, Nullable] public short? ID           { get; set; } // SMALLINT
		[Column, Nullable] public string HOME_HOST    { get; set; } // VARCHAR(255)
		[Column, Nullable] public string CURRENT_HOST { get; set; } // VARCHAR(255)
		[Column, Nullable] public string STATE        { get; set; } // VARCHAR(32)
		[Column, Nullable] public string ALERT        { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Description of all relational tables in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_ALL_TABLES")]
	public partial class DBA_ALL_TABLES
	{
		[Column, NotNull    ] public string    OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    TABLESPACE_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE        { get; set; } // SMALLINT
		[Column,    Nullable] public int?      INITIAL_EXTENT  { get; set; } // INTEGER
		[Column,    Nullable] public int?      NEXT_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE    { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public long      NUM_ROWS        { get; set; } // BIGINT
		[Column, NotNull    ] public long      BLOCKS          { get; set; } // BIGINT
		[Column, NotNull    ] public long      EMPTY_BLOCKS    { get; set; } // BIGINT
		[Column, NotNull    ] public short     AVG_ROW_LEN     { get; set; } // SMALLINT
		[Column, NotNull    ] public string    TABLE_LOCK      { get; set; } // VARCHAR(8)
		[Column,    Nullable] public DateTime? LAST_ANALYZED   { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED     { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      TEMPORARY       { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS    { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION     { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Arguments in all objects in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_ARGUMENTS")]
	public partial class DBA_ARGUMENTS
	{
		[Column, NotNull    ] public string OWNER         { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PACKAGE_NAME  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int    OBJECT_ID     { get; set; } // INTEGER
		[Column,    Nullable] public string ARGUMENT_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short  SEQUENCE      { get; set; } // SMALLINT
		[Column,    Nullable] public string DATA_TYPE     { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string IN_OUT        { get; set; } // VARCHAR(6)
		[Column, NotNull    ] public int    DATA_LENGTH   { get; set; } // INTEGER
		[Column, NotNull    ] public short  DATA_SCALE    { get; set; } // SMALLINT
	}

	// View
	/// <summary>
	/// All database tables, views and synonyms
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_CATALOG")]
	public partial class DBA_CATALOG
	{
		[Column, NotNull] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_TYPE   { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Comments on columns of all tables and views
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_COL_COMMENTS")]
	public partial class DBA_COL_COMMENTS
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME  { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	// View
	/// <summary>
	/// Information about all columns in constraint definitions
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_CONS_COLUMNS")]
	public partial class DBA_CONS_COLUMNS
	{
		[Column, NotNull] public string OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull] public string CONSTRAINT_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public short  POSITION        { get; set; } // SMALLINT
	}

	// View
	/// <summary>
	/// Constraint definitions on all tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_CONSTRAINTS")]
	public partial class DBA_CONSTRAINTS
	{
		[Column, NotNull    ] public string OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string CONSTRAINT_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public char   CONSTRAINT_TYPE   { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public string TABLE_SCHEMA      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string R_OWNER           { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string R_CONSTRAINT_NAME { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string DELETE_RULE       { get; set; } // VARCHAR(9)
		[Column,    Nullable] public string STATUS            { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string DEFERRED          { get; set; } // VARCHAR(9)
		[Column,    Nullable] public string VALIDATED         { get; set; } // VARCHAR(13)
		[Column, NotNull    ] public char   GENERATED         { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public char   RELY              { get; set; } // CHAR(1)
		[Column,    Nullable] public string INDEX_OWNER       { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string INDEX_NAME        { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// Dependencies to and from objects
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_DEPENDENCIES")]
	public partial class DBA_DEPENDENCIES
	{
		[Column, NotNull    ] public string OWNER             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME              { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TYPE              { get; set; } // VARCHAR(15)
		[Column, NotNull    ] public string REFERENCED_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string REFERENCED_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string REFERENCED_TYPE   { get; set; } // VARCHAR(20)
	}

	// View
	/// <summary>
	/// Current errors on all stored objects in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_ERRORS")]
	public partial class DBA_ERRORS
	{
		[Column, NotNull    ] public string OWNER  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TYPE   { get; set; } // VARCHAR(15)
		[Column,    Nullable] public int?   LINE   { get; set; } // INTEGER
		[Column,    Nullable] public string TEXT   { get; set; } // VARCHAR(32672)
	}

	// View
	/// <summary>
	/// COLUMNs comprising INDEXes on all TABLEs
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_IND_COLUMNS")]
	public partial class DBA_IND_COLUMNS
	{
		[Column, NotNull] public string INDEX_OWNER     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string INDEX_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string INDEX_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_OWNER     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public short  COLUMN_POSITION { get; set; } // SMALLINT
		[Column, NotNull] public char   DESCEND         { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Description of partitioned-level partitioning information for all index partitions in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_IND_PARTITIONS")]
	public partial class DBA_IND_PARTITIONS
	{
		[Column, NotNull    ] public string    INDEX_OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    PARTITION_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    HIGH_VALUE              { get; set; } // VARCHAR(512)
		[Column, NotNull    ] public int       HIGH_VALUE_LENGTH       { get; set; } // INTEGER
		[Column, NotNull    ] public int       PARTITION_POSITION      { get; set; } // INTEGER
		[Column, NotNull    ] public string    TABLESPACE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE                { get; set; } // SMALLINT
		[Column, NotNull    ] public string    LOGGING                 { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION             { get; set; } // VARCHAR(8)
		[Column, NotNull    ] public short     BLEVEL                  { get; set; } // SMALLINT
		[Column, NotNull    ] public long      LEAF_BLOCKS             { get; set; } // BIGINT
		[Column, NotNull    ] public long      DISTINCT_KEYS           { get; set; } // BIGINT
		[Column, NotNull    ] public int       AVG_LEAF_BLOCKS_PER_KEY { get; set; } // INTEGER
		[Column, NotNull    ] public double    CLUSTERING_FACTOR       { get; set; } // DOUBLE
		[Column, NotNull    ] public long      NUM_ROWS                { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED           { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    BUFFER_POOL             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS            { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description for all indexes in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_INDEXES")]
	public partial class DBA_INDEXES
	{
		[Column, NotNull    ] public string    OWNER                   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_TYPE              { get; set; } // CHAR(4)
		[Column, NotNull    ] public string    TABLE_OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_TYPE              { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public string    UNIQUENESS              { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string    COMPRESSION             { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string    TABLESPACE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE                { get; set; } // SMALLINT
		[Column, NotNull    ] public string    LOGGING                 { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public short     BLEVEL                  { get; set; } // SMALLINT
		[Column, NotNull    ] public long      LEAF_BLOCKS             { get; set; } // BIGINT
		[Column, NotNull    ] public long      DISTINCT_KEYS           { get; set; } // BIGINT
		[Column, NotNull    ] public int       AVG_LEAF_BLOCKS_PER_KEY { get; set; } // INTEGER
		[Column, NotNull    ] public double    CLUSTERING_FACTOR       { get; set; } // DOUBLE
		[Column, NotNull    ] public string    STATUS                  { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public long      NUM_ROWS                { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED           { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED             { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      GENERATED               { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL             { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// All objects in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_OBJECTS")]
	public partial class DBA_OBJECTS
	{
		[Column, NotNull    ] public string    OWNER          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    OBJECT_SCHEMA  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    OBJECT_NAME    { get; set; } // VARCHAR(128)
		[Column,    Nullable] public int?      OBJECT_ID      { get; set; } // INTEGER
		[Column,    Nullable] public int?      DATA_OBJECT_ID { get; set; } // INTEGER
		[Column, NotNull    ] public string    OBJECT_TYPE    { get; set; } // VARCHAR(24)
		[Column, NotNull    ] public DateTime  CREATED        { get; set; } // TIMESTAMP
		[Column,    Nullable] public DateTime? LAST_DDL_TIME  { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    TIMESTAMP      { get; set; } // CHAR(26)
		[Column, NotNull    ] public string    STATUS         { get; set; } // VARCHAR(7)
		[Column, NotNull    ] public char      TEMPORARY      { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public char      GENERATED      { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Description of all partitioned indexes in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_PART_INDEXES")]
	public partial class DBA_PART_INDEXES
	{
		[Column, NotNull    ] public string OWNER                  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string INDEX_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string INDEX_NAME             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PARTITIONING_TYPE      { get; set; } // VARCHAR(10)
		[Column, NotNull    ] public string SUBPARTITIONING_TYPE   { get; set; } // VARCHAR(4)
		[Column, NotNull    ] public int    PARTITION_COUNT        { get; set; } // INTEGER
		[Column, NotNull    ] public short  PARTITIONING_KEY_COUNT { get; set; } // SMALLINT
		[Column, NotNull    ] public short  DEF_PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int    DEF_PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string DEF_LOGGING            { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of the partitioning key columns for all partitioned objects in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_PART_KEY_COLUMNS")]
	public partial class DBA_PART_KEY_COLUMNS
	{
		[Column, NotNull    ] public string OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_SCHEMA   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_TYPE     { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column,    Nullable] public int?   COLUMN_POSITION { get; set; } // INTEGER
	}

	// View
	/// <summary>
	/// Description of all partitioned tables in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_PART_TABLES")]
	public partial class DBA_PART_TABLES
	{
		[Column, NotNull    ] public string OWNER                  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PARTITIONING_TYPE      { get; set; } // VARCHAR(10)
		[Column, NotNull    ] public string SUBPARTITIONING_TYPE   { get; set; } // VARCHAR(4)
		[Column,    Nullable] public int?   PARTITION_COUNT        { get; set; } // INTEGER
		[Column,    Nullable] public int?   PARTITIONING_KEY_COUNT { get; set; } // INTEGER
		[Column, NotNull    ] public short  DEF_PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int    DEF_PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string DEF_LOGGING            { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string DEF_COMPRESSION        { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Description of all procedures
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_PROCEDURES")]
	public partial class DBA_PROCEDURES
	{
		[Column, NotNull    ] public string OWNER                   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_SCHEMA           { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_NAME             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_SCHEMA        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_SPECIFIC_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string AGGREGATE               { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string PARALLEL                { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Roles granted to users and roles
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_ROLE_PRIVS")]
	public partial class DBA_ROLE_PRIVS
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTED_ROLE { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string ADMIN_OPTION { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string DEFAULT_ROLE { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// All roles which exist in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_ROLES")]
	public partial class DBA_ROLES
	{
		[Column, NotNull] public string ROLE              { get; set; } // VARCHAR(128)
		[Column, NotNull] public string PASSWORD_REQUIRED { get; set; } // VARCHAR(2)
	}

	// View
	/// <summary>
	/// Description of all SEQUENCEs in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_SEQUENCES")]
	public partial class DBA_SEQUENCES
	{
		[Column, NotNull    ] public string   SEQUENCE_OWNER  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   SEQUENCE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   SEQUENCE_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public decimal? MIN_VALUE       { get; set; } // DECIMAL
		[Column,    Nullable] public decimal? MAX_VALUE       { get; set; } // DECIMAL
		[Column,    Nullable] public decimal? INCREMENT_BY    { get; set; } // DECIMAL
		[Column, NotNull    ] public char     CYCLE_FLAG      { get; set; } // CHAR(1)
		[Column, NotNull    ] public char     ORDER_FLAG      { get; set; } // CHAR(1)
		[Column, NotNull    ] public int      CACHE_SIZE      { get; set; } // INTEGER
		[Column,    Nullable] public decimal? LAST_NUMBER     { get; set; } // DECFLOAT(16)
	}

	// View
	/// <summary>
	/// Source of all stored objects in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_SOURCE")]
	public partial class DBA_SOURCE
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SCHEMA       { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME         { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string SPECIFICNAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TYPE         { get; set; } // VARCHAR(12)
		[Column,    Nullable] public string TEXT         { get; set; } // CLOB(2097152)
	}

	// View
	/// <summary>
	/// All synonyms in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_SYNONYMS")]
	public partial class DBA_SYNONYMS
	{
		[Column, NotNull    ] public string OWNER          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SYNONYM_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SYNONYM_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_OWNER    { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_SCHEMA   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME     { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// System privileges granted to users and roles
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_SYS_PRIVS")]
	public partial class DBA_SYS_PRIVS
	{
		[Column, NotNull] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string PRIVILEGE    { get; set; } // VARCHAR(25)
		[Column, NotNull] public string ADMIN_OPTION { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Column statistics for columns of all tables in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TAB_COL_STATISTICS")]
	public partial class DBA_TAB_COL_STATISTICS
	{
		[Column, NotNull    ] public string    OWNER         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    COLUMN_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public long      NUM_DISTINCT  { get; set; } // BIGINT
		[Column, NotNull    ] public long      NUM_NULLS     { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    GLOBAL_STATS  { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public int       AVG_COL_LEN   { get; set; } // INTEGER
	}

	// View
	/// <summary>
	/// Columns of all tables in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TAB_COLUMNS")]
	public partial class DBA_TAB_COLUMNS
	{
		[Column, NotNull    ] public string    OWNER                { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    COLUMN_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    DATA_TYPE            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    DATA_TYPE_OWNER      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int       DATA_LENGTH          { get; set; } // INTEGER
		[Column,    Nullable] public int?      DATA_PRECISION       { get; set; } // INTEGER
		[Column, NotNull    ] public short     DATA_SCALE           { get; set; } // SMALLINT
		[Column, NotNull    ] public char      NULLABLE             { get; set; } // CHAR(1)
		[Column, NotNull    ] public short     COLUMN_ID            { get; set; } // SMALLINT
		[Column,    Nullable] public int?      DEFAULT_LENGTH       { get; set; } // INTEGER
		[Column,    Nullable] public string    DATA_DEFAULT         { get; set; } // CLOB(65536)
		[Column, NotNull    ] public long      NUM_DISTINCT         { get; set; } // BIGINT
		[Column, NotNull    ] public long      NUM_NULLS            { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED        { get; set; } // TIMESTAMP
		[Column,    Nullable] public int?      CHAR_COL_DECL_LENGTH { get; set; } // INTEGER
		[Column, NotNull    ] public string    GLOBAL_STATS         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public int       AVG_COL_LEN          { get; set; } // INTEGER
		[Column, NotNull    ] public int       CHAR_LENGTH          { get; set; } // INTEGER
		[Column, NotNull    ] public char      CHAR_USED            { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Comments on all tables and views in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TAB_COMMENTS")]
	public partial class DBA_TAB_COMMENTS
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_TYPE   { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	// View
	/// <summary>
	/// Description of partitioned-level partitioning information for all table partitions in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TAB_PARTITIONS")]
	public partial class DBA_TAB_PARTITIONS
	{
		[Column, NotNull    ] public string    OWNER              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA       { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    PARTITION_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    HIGH_VALUE         { get; set; } // VARCHAR(512)
		[Column, NotNull    ] public int       HIGH_VALUE_LENGTH  { get; set; } // INTEGER
		[Column, NotNull    ] public int       PARTITION_POSITION { get; set; } // INTEGER
		[Column, NotNull    ] public string    TABLESPACE_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int       INITIAL_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       NEXT_EXTENT        { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING            { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION        { get; set; } // VARCHAR(8)
		[Column, NotNull    ] public short     AVG_ROW_LEN        { get; set; } // SMALLINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED      { get; set; } // TIMESTAMP
		[Column,    Nullable] public string    BUFFER_POOL        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS       { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// All grants on objects in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TAB_PRIVS")]
	public partial class DBA_TAB_PRIVS
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTOR      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of all relational tables in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TABLES")]
	public partial class DBA_TABLES
	{
		[Column, NotNull    ] public string    OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    TABLESPACE_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE        { get; set; } // SMALLINT
		[Column,    Nullable] public int?      INITIAL_EXTENT  { get; set; } // INTEGER
		[Column,    Nullable] public int?      NEXT_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE    { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public long      NUM_ROWS        { get; set; } // BIGINT
		[Column, NotNull    ] public long      BLOCKS          { get; set; } // BIGINT
		[Column, NotNull    ] public long      EMPTY_BLOCKS    { get; set; } // BIGINT
		[Column, NotNull    ] public short     AVG_ROW_LEN     { get; set; } // SMALLINT
		[Column, NotNull    ] public string    TABLE_LOCK      { get; set; } // VARCHAR(8)
		[Column,    Nullable] public DateTime? LAST_ANALYZED   { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED     { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      TEMPORARY       { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS    { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION     { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Description of all tablespaces
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TABLESPACES")]
	public partial class DBA_TABLESPACES
	{
		[Column, NotNull    ] public string   TABLESPACE_NAME          { get; set; } // VARCHAR(128)
		[Column,    Nullable] public short?   DBPARTITIONNUM           { get; set; } // SMALLINT
		[Column, NotNull    ] public int      BLOCK_SIZE               { get; set; } // INTEGER
		[Column, NotNull    ] public int      INITIAL_EXTENT           { get; set; } // INTEGER
		[Column, NotNull    ] public int      NEXT_EXTENT              { get; set; } // INTEGER
		[Column,    Nullable] public long?    MIN_EXTENTS              { get; set; } // BIGINT
		[Column,    Nullable] public long?    MAX_EXTENTS              { get; set; } // BIGINT
		[Column,    Nullable] public decimal? PCT_INCREASE             { get; set; } // DECFLOAT(16)
		[Column, NotNull    ] public int      MIN_EXTLEN               { get; set; } // INTEGER
		[Column, NotNull    ] public string   STATUS                   { get; set; } // VARCHAR(7)
		[Column, NotNull    ] public string   CONTENTS                 { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string   LOGGING                  { get; set; } // VARCHAR(7)
		[Column, NotNull    ] public string   SEGMENT_SPACE_MANAGEMENT { get; set; } // VARCHAR(6)
	}

	// View
	/// <summary>
	/// All triggers in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_TRIGGERS")]
	public partial class DBA_TRIGGERS
	{
		[Column, NotNull] public string OWNER            { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_SCHEMA   { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_TYPE     { get; set; } // VARCHAR(15)
		[Column, NotNull] public string TRIGGERING_EVENT { get; set; } // VARCHAR(7)
		[Column, NotNull] public string TABLE_OWNER      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string BASE_OBJECT_TYPE { get; set; } // VARCHAR(5)
		[Column, NotNull] public string TABLE_SCHEMA     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME       { get; set; } // VARCHAR(128)
		[Column, NotNull] public string STATUS           { get; set; } // VARCHAR(8)
		[Column, NotNull] public string TRIGGER_BODY     { get; set; } // CLOB(2097152)
	}

	// View
	/// <summary>
	/// Columns of all views in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_VIEW_COLUMNS")]
	public partial class DBA_VIEW_COLUMNS
	{
		[Column, NotNull    ] public string OWNER          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string VIEW_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string VIEW_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string DATA_TYPE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int    DATA_LENGTH    { get; set; } // INTEGER
		[Column,    Nullable] public int?   DATA_PRECISION { get; set; } // INTEGER
		[Column, NotNull    ] public short  DATA_SCALE     { get; set; } // SMALLINT
		[Column, NotNull    ] public short  COLUMN_ID      { get; set; } // SMALLINT
		[Column, NotNull    ] public char   NULLABLE       { get; set; } // CHAR(1)
		[Column,    Nullable] public string DATA_DEFAULT   { get; set; } // CLOB(65536)
	}

	// View
	/// <summary>
	/// Description of all views in the database
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DBA_VIEWS")]
	public partial class DBA_VIEWS
	{
		[Column, NotNull] public string OWNER       { get; set; } // VARCHAR(128)
		[Column, NotNull] public string VIEW_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull] public string VIEW_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull] public int    TEXT_LENGTH { get; set; } // INTEGER
		[Column, NotNull] public string TEXT        { get; set; } // CLOB(2097152)
	}

	// View
	[Table(Schema="SYSCAT", Name="DBAUTH")]
	public partial class DBAUTH
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DBCFG")]
	public partial class DBCFG
	{
		[Column, Nullable] public string NAME                 { get; set; } // VARCHAR(32)
		[Column, Nullable] public string VALUE                { get; set; } // VARCHAR(1024)
		[Column, Nullable] public string VALUE_FLAGS          { get; set; } // VARCHAR(10)
		[Column, Nullable] public string DEFERRED_VALUE       { get; set; } // VARCHAR(1024)
		[Column, Nullable] public string DEFERRED_VALUE_FLAGS { get; set; } // VARCHAR(10)
		[Column, Nullable] public string DATATYPE             { get; set; } // VARCHAR(128)
		[Column, Nullable] public short? DBPARTITIONNUM       { get; set; } // SMALLINT
		[Column, Nullable] public short? MEMBER               { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DBMCFG")]
	public partial class DBMCFG
	{
		[Column, Nullable] public string NAME                 { get; set; } // VARCHAR(32)
		[Column, Nullable] public string VALUE                { get; set; } // VARCHAR(256)
		[Column, Nullable] public string VALUE_FLAGS          { get; set; } // VARCHAR(10)
		[Column, Nullable] public string DEFERRED_VALUE       { get; set; } // VARCHAR(256)
		[Column, Nullable] public string DEFERRED_VALUE_FLAGS { get; set; } // VARCHAR(10)
		[Column, Nullable] public string DATATYPE             { get; set; } // VARCHAR(128)
	}

	// View
	[Table(Schema="SYSCAT", Name="DBPARTITIONGROUPS")]
	public partial class DBPARTITIONGROUP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="DBPARTITIONGROUPDEF")]
	public partial class DBPARTITIONGROUPDEF
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="DBPATHS")]
	public partial class DBPATH
	{
		[Column, Nullable] public short? DBPARTITIONNUM { get; set; } // SMALLINT
		[Column, Nullable] public string TYPE           { get; set; } // VARCHAR(64)
		[Column, Nullable] public string PATH           { get; set; } // VARCHAR(5000)
	}

	// View
	/// <summary>
	/// Description of columns in data dictionary tables and views
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DICT_COLUMNS")]
	public partial class DICT_COLUMNS
	{
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME  { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	// View
	/// <summary>
	/// Description of data dictionary tables and views
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="DICTIONARY")]
	public partial class DICTIONARY
	{
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	[Table(Schema="ADMINISTRATOR", Name="Doctor")]
	public partial class Doctor
	{
		[Column, NotNull] public int    PersonID { get; set; } // INTEGER
		[Column, NotNull] public string Taxonomy { get; set; } // VARCHAR(50)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false)]
		public Person Person { get; set; }

		#endregion
	}

	// View
	[Table(Schema="SYSIBM", Name="DUAL")]
	public partial class DUAL
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ENV_CF_SYS_RESOURCES")]
	public partial class ENV_CF_SYS_RESOURCES
	{
		[Column, Nullable] public string NAME     { get; set; } // VARCHAR(128)
		[Column, Nullable] public string VALUE    { get; set; } // VARCHAR(1024)
		[Column, Nullable] public string DATATYPE { get; set; } // VARCHAR(128)
		[Column, Nullable] public string UNIT     { get; set; } // VARCHAR(128)
		[Column, Nullable] public short? ID       { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ENV_FEATURE_INFO")]
	public partial class ENV_FEATURE_INFO
	{
		[Column, Nullable] public string FEATURE_NAME       { get; set; } // VARCHAR(26)
		[Column, Nullable] public string FEATURE_FULLNAME   { get; set; } // VARCHAR(100)
		[Column, Nullable] public char?  LICENSE_INSTALLED  { get; set; } // CHAR(1)
		[Column, Nullable] public string PRODUCT_NAME       { get; set; } // VARCHAR(26)
		[Column, Nullable] public string FEATURE_USE_STATUS { get; set; } // VARCHAR(30)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ENV_INST_INFO")]
	public partial class ENV_INST_INFO
	{
		[Column, Nullable] public string INST_NAME             { get; set; } // VARCHAR(128)
		[Column, Nullable] public short? IS_INST_PARTITIONABLE { get; set; } // SMALLINT
		[Column, Nullable] public int?   NUM_DBPARTITIONS      { get; set; } // INTEGER
		[Column, Nullable] public int?   INST_PTR_SIZE         { get; set; } // INTEGER
		[Column, Nullable] public string RELEASE_NUM           { get; set; } // VARCHAR(128)
		[Column, Nullable] public string SERVICE_LEVEL         { get; set; } // VARCHAR(128)
		[Column, Nullable] public string BLD_LEVEL             { get; set; } // VARCHAR(128)
		[Column, Nullable] public string PTF                   { get; set; } // VARCHAR(128)
		[Column, Nullable] public int?   FIXPACK_NUM           { get; set; } // INTEGER
		[Column, Nullable] public int?   NUM_MEMBERS           { get; set; } // INTEGER
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ENV_PROD_INFO")]
	public partial class ENV_PROD_INFO
	{
		[Column, Nullable] public string INSTALLED_PROD          { get; set; } // VARCHAR(26)
		[Column, Nullable] public string INSTALLED_PROD_FULLNAME { get; set; } // VARCHAR(100)
		[Column, Nullable] public char?  LICENSE_INSTALLED       { get; set; } // CHAR(1)
		[Column, Nullable] public string PROD_RELEASE            { get; set; } // VARCHAR(26)
		[Column, Nullable] public string LICENSE_TYPE            { get; set; } // VARCHAR(50)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ENV_SYS_INFO")]
	public partial class ENV_SYS_INFO
	{
		[Column, Nullable] public string OS_NAME         { get; set; } // VARCHAR(256)
		[Column, Nullable] public string OS_VERSION      { get; set; } // VARCHAR(256)
		[Column, Nullable] public string OS_RELEASE      { get; set; } // VARCHAR(256)
		[Column, Nullable] public string HOST_NAME       { get; set; } // VARCHAR(256)
		[Column, Nullable] public int?   TOTAL_CPUS      { get; set; } // INTEGER
		[Column, Nullable] public int?   CONFIGURED_CPUS { get; set; } // INTEGER
		[Column, Nullable] public int?   TOTAL_MEMORY    { get; set; } // INTEGER
	}

	// View
	[Table(Schema="SYSIBMADM", Name="ENV_SYS_RESOURCES")]
	public partial class ENV_SYS_RESOURCES
	{
		[Column, Nullable] public string NAME           { get; set; } // VARCHAR(128)
		[Column, Nullable] public string VALUE          { get; set; } // VARCHAR(1024)
		[Column, Nullable] public string DATATYPE       { get; set; } // VARCHAR(128)
		[Column, Nullable] public string UNIT           { get; set; } // VARCHAR(128)
		[Column, Nullable] public short? DBPARTITIONNUM { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSCAT", Name="EVENTS")]
	public partial class EVENT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="EVENTMONITORS")]
	public partial class EVENTMONITOR
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="EVENTTABLES")]
	public partial class EVENTTABLE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="FULLHIERARCHIES")]
	public partial class FULLHIERARCHy
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="FUNCDEP")]
	public partial class FUNCDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="FUNCMAPOPTIONS")]
	public partial class FUNCMAPOPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="FUNCMAPPARMOPTIONS")]
	public partial class FUNCMAPPARMOPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="FUNCMAPPINGS")]
	public partial class FUNCMAPPING
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="FUNCPARMS")]
	public partial class FUNCPARM
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="FUNCTIONS")]
	public partial class FUNCTION
	{
	}

	[Table(Schema="ADMINISTRATOR", Name="GrandChild")]
	public partial class GrandChild
	{
		[Column, Nullable] public int? ParentID     { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID      { get; set; } // INTEGER
		[Column, Nullable] public int? GrandChildID { get; set; } // INTEGER
	}

	// View
	[Table(Schema="SYSCAT", Name="HIERARCHIES")]
	public partial class HIERARCHy
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="HISTOGRAMTEMPLATES")]
	public partial class HISTOGRAMTEMPLATE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="HISTOGRAMTEMPLATEBINS")]
	public partial class HISTOGRAMTEMPLATEBIN
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="HISTOGRAMTEMPLATEUSE")]
	public partial class HISTOGRAMTEMPLATEUSE
	{
	}

	[Table(Schema="SYSTOOLS", Name="HMON_ATM_INFO")]
	public partial class HMON_ATM_INFO
	{
		[Column, NotNull    ] public string    SCHEMA             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    NAME               { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public DateTime  CREATE_TIME        { get; set; } // TIMESTAMP
		[Column, NotNull    ] public char      STATS_FLAG         { get; set; } // CHAR(1)
		[Column, NotNull    ] public char      STATS_LOCK         { get; set; } // CHAR(1)
		[Column, NotNull    ] public int       STATS_OPTS         { get; set; } // INTEGER
		[Column, NotNull    ] public int       LAST_WAIT          { get; set; } // INTEGER
		[Column, NotNull    ] public int       TO_WAIT            { get; set; } // INTEGER
		[Column, NotNull    ] public char      SIGNAL             { get; set; } // CHAR(1)
		[Column, NotNull    ] public char      LEO_TAB            { get; set; } // CHAR(1)
		[Column, NotNull    ] public long      EXEC_COUNT         { get; set; } // BIGINT
		[Column, NotNull    ] public short     STATS_STATE        { get; set; } // SMALLINT
		[Column, NotNull    ] public char      STATS_NOTIFY       { get; set; } // CHAR(1)
		[Column,    Nullable] public string    STATS_DETAIL       { get; set; } // VARCHAR(200)
		[Column,    Nullable] public byte[]    STATS_HISTORY      { get; set; } // VARCHAR (200) FOR BIT DATA
		[Column,    Nullable] public DateTime? STATS_TIME         { get; set; } // TIMESTAMP
		[Column, NotNull    ] public char      REORG_FLAG         { get; set; } // CHAR(1)
		[Column, NotNull    ] public char      REORG_LOCK         { get; set; } // CHAR(1)
		[Column, NotNull    ] public short     REORG_STATE        { get; set; } // SMALLINT
		[Column,    Nullable] public DateTime? REORG_TIME         { get; set; } // TIMESTAMP
		[Column, NotNull    ] public char      REORG_NOTIFY       { get; set; } // CHAR(1)
		[Column,    Nullable] public string    REORG_DETAIL       { get; set; } // VARCHAR(200)
		[Column,    Nullable] public byte[]    REORG_HISTORY      { get; set; } // VARCHAR (200) FOR BIT DATA
		[Column,    Nullable] public int?      REORG_AVG_RUNTIME  { get; set; } // INTEGER
		[Column,    Nullable] public string    REORG_INDEX_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    REORG_INDEX_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public char?     REORG_INDEX_ONLINE { get; set; } // CHAR(1)
	}

	[Table(Schema="SYSTOOLS", Name="HMON_COLLECTION")]
	public partial class HMON_COLLECTION
	{
		[Column, NotNull    ] public long     HI_ID            { get; set; } // BIGINT
		[Column, NotNull    ] public string   OBJ_NAME1        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   OBJ_NAME2        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   OBJ_NAME3        { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string   OBJ_DETAIL       { get; set; } // VARCHAR(512)
		[Column, NotNull    ] public int      OBJ_STATE        { get; set; } // INTEGER
		[Column, NotNull    ] public DateTime OBJ_REFRESH_TIME { get; set; } // TIMESTAMP
		[Column, NotNull    ] public char     NOTIFY           { get; set; } // CHAR(1)
		[Column,    Nullable] public byte[]   HISTORY          { get; set; } // VARCHAR (200) FOR BIT DATA
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXES")]
	public partial class INDEX
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXAUTH")]
	public partial class INDEXAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXCOLUSE")]
	public partial class INDEXCOLUSE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXDEP")]
	public partial class INDEXDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXEXPLOITRULES")]
	public partial class INDEXEXPLOITRULE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXEXTENSIONS")]
	public partial class INDEXEXTENSION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXEXTENSIONDEP")]
	public partial class INDEXEXTENSIONDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXEXTENSIONMETHODS")]
	public partial class INDEXEXTENSIONMETHOD
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXEXTENSIONPARMS")]
	public partial class INDEXEXTENSIONPARM
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXOPTIONS")]
	public partial class INDEXOPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXPARTITIONS")]
	public partial class INDEXPARTITION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INDEXXMLPATTERNS")]
	public partial class INDEXXMLPATTERN
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="INVALIDOBJECTS")]
	public partial class INVALIDOBJECT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="KEYCOLUSE")]
	public partial class KEYCOLUSE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="LIBRARIES")]
	public partial class LIBRARy
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="LIBRARYAUTH")]
	public partial class LIBRARYAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="LIBRARYBINDFILES")]
	public partial class LIBRARYBINDFILE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="LIBRARYVERSIONS")]
	public partial class LIBRARYVERSION
	{
	}

	[Table(Schema="ADMINISTRATOR", Name="LinqDataTypes")]
	public partial class LinqDataType
	{
		[Column, Nullable] public int?      ID             { get; set; } // INTEGER
		[Column, Nullable] public decimal?  MoneyValue     { get; set; } // DECIMAL(10,4)
		[Column, Nullable] public DateTime? DateTimeValue  { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? DateTimeValue2 { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    BoolValue      { get; set; } // SMALLINT
		[Column, Nullable] public byte[]    GuidValue      { get; set; } // CHAR (16) FOR BIT DATA
		[Column, Nullable] public byte[]    BinaryValue    { get; set; } // BLOB(5000)
		[Column, Nullable] public short?    SmallIntValue  { get; set; } // SMALLINT
		[Column, Nullable] public int?      IntValue       { get; set; } // INTEGER
		[Column, Nullable] public long?     BigIntValue    { get; set; } // BIGINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="LOCKS_HELD")]
	public partial class LOCKS_HELD
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     AGENT_ID           { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_NAME          { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    AUTHID             { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TBSP_NAME          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABSCHEMA          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABNAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TAB_FILE_ID        { get; set; } // BIGINT
		[Column, Nullable] public string    LOCK_OBJECT_TYPE   { get; set; } // VARCHAR(18)
		[Column, Nullable] public string    LOCK_NAME          { get; set; } // VARCHAR(32)
		[Column, Nullable] public string    LOCK_MODE          { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    LOCK_STATUS        { get; set; } // VARCHAR(10)
		[Column, Nullable] public short?    LOCK_ESCALATION    { get; set; } // SMALLINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="LOCKWAITS")]
	public partial class LOCKWAIT
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP   { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME              { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     AGENT_ID             { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_NAME            { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    AUTHID               { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TBSP_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABSCHEMA            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABNAME              { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     SUBSECTION_NUMBER    { get; set; } // BIGINT
		[Column, Nullable] public string    LOCK_OBJECT_TYPE     { get; set; } // VARCHAR(18)
		[Column, Nullable] public DateTime? LOCK_WAIT_START_TIME { get; set; } // TIMESTAMP
		[Column, Nullable] public string    LOCK_NAME            { get; set; } // VARCHAR(32)
		[Column, Nullable] public string    LOCK_MODE            { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    LOCK_MODE_REQUESTED  { get; set; } // VARCHAR(10)
		[Column, Nullable] public long?     AGENT_ID_HOLDING_LK  { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_ID_HOLDING_LK   { get; set; } // VARCHAR(128)
		[Column, Nullable] public short?    LOCK_ESCALATION      { get; set; } // SMALLINT
		[Column, Nullable] public short?    DBPARTITIONNUM       { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER               { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="LOG_UTILIZATION")]
	public partial class LOG_UTILIZATION
	{
		[Column, Nullable] public string   DB_NAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public decimal? LOG_UTILIZATION_PERCENT { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    TOTAL_LOG_USED_KB       { get; set; } // BIGINT
		[Column, Nullable] public long?    TOTAL_LOG_AVAILABLE_KB  { get; set; } // BIGINT
		[Column, Nullable] public long?    TOTAL_LOG_USED_TOP_KB   { get; set; } // BIGINT
		[Column, Nullable] public short?   DBPARTITIONNUM          { get; set; } // SMALLINT
		[Column, Nullable] public short?   MEMBER                  { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="LONG_RUNNING_SQL")]
	public partial class LONG_RUNNING_SQL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP   { get; set; } // TIMESTAMP
		[Column, Nullable] public int?      ELAPSED_TIME_MIN     { get; set; } // INTEGER
		[Column, Nullable] public long?     AGENT_ID             { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_NAME            { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    APPL_STATUS          { get; set; } // VARCHAR(22)
		[Column, Nullable] public string    AUTHID               { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    INBOUND_COMM_ADDRESS { get; set; } // VARCHAR(32)
		[Column, Nullable] public string    STMT_TEXT            { get; set; } // CLOB(16777216)
		[Column, Nullable] public short?    DBPARTITIONNUM       { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER               { get; set; } // SMALLINT
	}

	[Table(Schema="ADMINISTRATOR", Name="MASTERTABLE")]
	public partial class MASTERTABLE
	{
		[PrimaryKey(0), NotNull] public int ID1 { get; set; } // INTEGER
		[PrimaryKey(1), NotNull] public int ID2 { get; set; } // INTEGER

		#region Associations

		/// <summary>
		/// FK_SLAVETABLE_MASTERTABLE_BackReference
		/// </summary>
		[Association(ThisKey="ID1, ID2", OtherKey="ID222222222222222222222222, ID1", CanBeNull=false)]
		public IEnumerable<SLAVETABLE> SLAVETABLEs { get; set; }

		#endregion
	}

	// View
	[Table(Schema="SYSCAT", Name="MODULES")]
	public partial class MODULE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="MODULEAUTH")]
	public partial class MODULEAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="MODULEOBJECTS")]
	public partial class MODULEOBJECT
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_BP_UTILIZATION")]
	public partial class MON_BP_UTILIZATION
	{
		[Column, Nullable] public string   BP_NAME                     { get; set; } // VARCHAR(128)
		[Column, Nullable] public short?   MEMBER                      { get; set; } // SMALLINT
		[Column, Nullable] public long?    DATA_PHYSICAL_READS         { get; set; } // BIGINT
		[Column, Nullable] public decimal? DATA_HIT_RATIO_PERCENT      { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    INDEX_PHYSICAL_READS        { get; set; } // BIGINT
		[Column, Nullable] public decimal? INDEX_HIT_RATIO_PERCENT     { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    XDA_PHYSICAL_READS          { get; set; } // BIGINT
		[Column, Nullable] public decimal? XDA_HIT_RATIO_PERCENT       { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    TOTAL_PHYSICAL_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_PHYSICAL_READ_TIME      { get; set; } // BIGINT
		[Column, Nullable] public decimal? PREFETCH_RATIO_PERCENT      { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? ASYNC_NOT_READ_PERCENT      { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    TOTAL_WRITES                { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_WRITE_TIME              { get; set; } // BIGINT
		[Column, Nullable] public decimal? SYNC_WRITES_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? GBP_DATA_HIT_RATIO_PERCENT  { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? GBP_INDEX_HIT_RATIO_PERCENT { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? GBP_XDA_HIT_RATIO_PERCENT   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    AVG_SYNC_READ_TIME          { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_ASYNC_READ_TIME         { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_SYNC_WRITE_TIME         { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_ASYNC_WRITE_TIME        { get; set; } // BIGINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_CONNECTION_SUMMARY")]
	public partial class MON_CONNECTION_SUMMARY
	{
		[Column, Nullable] public long?    APPLICATION_HANDLE                     { get; set; } // BIGINT
		[Column, Nullable] public string   APPLICATION_NAME                       { get; set; } // VARCHAR(128)
		[Column, Nullable] public string   APPLICATION_ID                         { get; set; } // VARCHAR(128)
		[Column, Nullable] public string   SESSION_AUTH_ID                        { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?    TOTAL_APP_COMMITS                      { get; set; } // BIGINT
		[Column, Nullable] public long?    TOTAL_APP_ROLLBACKS                    { get; set; } // BIGINT
		[Column, Nullable] public long?    ACT_COMPLETED_TOTAL                    { get; set; } // BIGINT
		[Column, Nullable] public long?    APP_RQSTS_COMPLETED_TOTAL              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_RQST_CPU_TIME                      { get; set; } // BIGINT
		[Column, Nullable] public decimal? ROUTINE_TIME_RQST_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RQST_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? ACT_WAIT_TIME_PERCENT                  { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? IO_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? LOCK_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? AGENT_WAIT_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? NETWORK_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_SORT_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? COMPILE_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TRANSACT_END_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? UTILS_PROC_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    AVG_LOCK_WAITS_PER_ACT                 { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_TIMEOUTS_PER_ACT              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_DEADLOCKS_PER_ACT                  { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_ESCALS_PER_ACT                { get; set; } // BIGINT
		[Column, Nullable] public long?    ROWS_READ_PER_ROWS_RETURNED            { get; set; } // BIGINT
		[Column, Nullable] public decimal? TOTAL_BP_HIT_RATIO_PERCENT             { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TOTAL_GBP_HIT_RATIO_PERCENT            { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? CF_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RECLAIM_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SPACEMAPPAGE_RECLAIM_WAIT_TIME_PERCENT { get; set; } // DECIMAL(5,2)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_CURRENT_SQL")]
	public partial class MON_CURRENT_SQL
	{
		[Column, Nullable] public short? COORD_MEMBER        { get; set; } // SMALLINT
		[Column, Nullable] public long?  APPLICATION_HANDLE  { get; set; } // BIGINT
		[Column, Nullable] public string APPLICATION_NAME    { get; set; } // VARCHAR(128)
		[Column, Nullable] public string SESSION_AUTH_ID     { get; set; } // VARCHAR(128)
		[Column, Nullable] public string CLIENT_APPLNAME     { get; set; } // VARCHAR(255)
		[Column, Nullable] public int?   ELAPSED_TIME_SEC    { get; set; } // INTEGER
		[Column, Nullable] public string ACTIVITY_STATE      { get; set; } // VARCHAR(32)
		[Column, Nullable] public string ACTIVITY_TYPE       { get; set; } // VARCHAR(32)
		[Column, Nullable] public long?  TOTAL_CPU_TIME      { get; set; } // BIGINT
		[Column, Nullable] public long?  ROWS_READ           { get; set; } // BIGINT
		[Column, Nullable] public long?  ROWS_RETURNED       { get; set; } // BIGINT
		[Column, Nullable] public long?  QUERY_COST_ESTIMATE { get; set; } // BIGINT
		[Column, Nullable] public long?  DIRECT_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?  DIRECT_WRITES       { get; set; } // BIGINT
		[Column, Nullable] public string STMT_TEXT           { get; set; } // CLOB(2097152)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_CURRENT_UOW")]
	public partial class MON_CURRENT_UOW
	{
		[Column, Nullable] public short? COORD_MEMBER              { get; set; } // SMALLINT
		[Column, Nullable] public int?   UOW_ID                    { get; set; } // INTEGER
		[Column, Nullable] public long?  APPLICATION_HANDLE        { get; set; } // BIGINT
		[Column, Nullable] public string APPLICATION_NAME          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string SESSION_AUTH_ID           { get; set; } // VARCHAR(128)
		[Column, Nullable] public string CLIENT_APPLNAME           { get; set; } // VARCHAR(255)
		[Column, Nullable] public int?   ELAPSED_TIME_SEC          { get; set; } // INTEGER
		[Column, Nullable] public string WORKLOAD_OCCURRENCE_STATE { get; set; } // VARCHAR(32)
		[Column, Nullable] public long?  TOTAL_CPU_TIME            { get; set; } // BIGINT
		[Column, Nullable] public long?  TOTAL_ROWS_MODIFIED       { get; set; } // BIGINT
		[Column, Nullable] public long?  TOTAL_ROWS_READ           { get; set; } // BIGINT
		[Column, Nullable] public long?  TOTAL_ROWS_RETURNED       { get; set; } // BIGINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_DB_SUMMARY")]
	public partial class MON_DB_SUMMARY
	{
		[Column, Nullable] public long?    TOTAL_APP_COMMITS                      { get; set; } // BIGINT
		[Column, Nullable] public long?    TOTAL_APP_ROLLBACKS                    { get; set; } // BIGINT
		[Column, Nullable] public long?    ACT_COMPLETED_TOTAL                    { get; set; } // BIGINT
		[Column, Nullable] public long?    APP_RQSTS_COMPLETED_TOTAL              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_RQST_CPU_TIME                      { get; set; } // BIGINT
		[Column, Nullable] public decimal? ROUTINE_TIME_RQST_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RQST_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? ACT_WAIT_TIME_PERCENT                  { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? IO_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? LOCK_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? AGENT_WAIT_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? NETWORK_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_SORT_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? COMPILE_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TRANSACT_END_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? UTILS_PROC_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    AVG_LOCK_WAITS_PER_ACT                 { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_TIMEOUTS_PER_ACT              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_DEADLOCKS_PER_ACT                  { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_ESCALS_PER_ACT                { get; set; } // BIGINT
		[Column, Nullable] public long?    ROWS_READ_PER_ROWS_RETURNED            { get; set; } // BIGINT
		[Column, Nullable] public decimal? TOTAL_BP_HIT_RATIO_PERCENT             { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TOTAL_GBP_HIT_RATIO_PERCENT            { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? CF_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RECLAIM_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SPACEMAPPAGE_RECLAIM_WAIT_TIME_PERCENT { get; set; } // DECIMAL(5,2)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_LOCKWAITS")]
	public partial class MON_LOCKWAITS
	{
		[Column, Nullable] public string LOCK_NAME              { get; set; } // VARCHAR(32)
		[Column, Nullable] public string LOCK_OBJECT_TYPE       { get; set; } // VARCHAR(32)
		[Column, Nullable] public int?   LOCK_WAIT_ELAPSED_TIME { get; set; } // INTEGER
		[Column, Nullable] public string TABSCHEMA              { get; set; } // VARCHAR(128)
		[Column, Nullable] public string TABNAME                { get; set; } // VARCHAR(128)
		[Column, Nullable] public int?   DATA_PARTITION_ID      { get; set; } // INTEGER
		[Column, Nullable] public string LOCK_MODE              { get; set; } // VARCHAR(3)
		[Column, Nullable] public string LOCK_CURRENT_MODE      { get; set; } // VARCHAR(3)
		[Column, Nullable] public string LOCK_MODE_REQUESTED    { get; set; } // VARCHAR(3)
		[Column, Nullable] public long?  REQ_APPLICATION_HANDLE { get; set; } // BIGINT
		[Column, Nullable] public long?  REQ_AGENT_TID          { get; set; } // BIGINT
		[Column, Nullable] public short? REQ_MEMBER             { get; set; } // SMALLINT
		[Column, Nullable] public string REQ_APPLICATION_NAME   { get; set; } // VARCHAR(128)
		[Column, Nullable] public string REQ_USERID             { get; set; } // VARCHAR(128)
		[Column, Nullable] public string REQ_STMT_TEXT          { get; set; } // CLOB(2097152)
		[Column, Nullable] public long?  HLD_APPLICATION_HANDLE { get; set; } // BIGINT
		[Column, Nullable] public short? HLD_MEMBER             { get; set; } // SMALLINT
		[Column, Nullable] public string HLD_APPLICATION_NAME   { get; set; } // VARCHAR(128)
		[Column, Nullable] public string HLD_USERID             { get; set; } // VARCHAR(128)
		[Column, Nullable] public string HLD_CURRENT_STMT_TEXT  { get; set; } // CLOB(2097152)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_PKG_CACHE_SUMMARY")]
	public partial class MON_PKG_CACHE_SUMMARY
	{
		[Column, Nullable] public char?  SECTION_TYPE                       { get; set; } // CHAR(1)
		[Column, Nullable] public byte[] EXECUTABLE_ID                      { get; set; } // VARCHAR (32) FOR BIT DATA
		[Column, Nullable] public long?  NUM_COORD_EXEC                     { get; set; } // BIGINT
		[Column, Nullable] public long?  NUM_COORD_EXEC_WITH_METRICS        { get; set; } // BIGINT
		[Column, Nullable] public long?  TOTAL_STMT_EXEC_TIME               { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_STMT_EXEC_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?  TOTAL_CPU_TIME                     { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_CPU_TIME                       { get; set; } // BIGINT
		[Column, Nullable] public long?  TOTAL_LOCK_WAIT_TIME               { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_LOCK_WAIT_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?  TOTAL_IO_WAIT_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_IO_WAIT_TIME                   { get; set; } // BIGINT
		[Column, Nullable] public long?  PREP_TIME                          { get; set; } // BIGINT
		[Column, Nullable] public long?  ROWS_READ_PER_ROWS_RETURNED        { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_ACT_WAIT_TIME                  { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_LOCK_ESCALS                    { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_RECLAIM_WAIT_TIME              { get; set; } // BIGINT
		[Column, Nullable] public long?  AVG_SPACEMAPPAGE_RECLAIM_WAIT_TIME { get; set; } // BIGINT
		[Column, Nullable] public string STMT_TEXT                          { get; set; } // CLOB(2097152)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_SERVICE_SUBCLASS_SUMMARY")]
	public partial class MON_SERVICE_SUBCLASS_SUMMARY
	{
		[Column, Nullable] public string   SERVICE_SUPERCLASS_NAME                { get; set; } // VARCHAR(128)
		[Column, Nullable] public string   SERVICE_SUBCLASS_NAME                  { get; set; } // VARCHAR(128)
		[Column, Nullable] public int?     SERVICE_CLASS_ID                       { get; set; } // INTEGER
		[Column, Nullable] public long?    TOTAL_APP_COMMITS                      { get; set; } // BIGINT
		[Column, Nullable] public long?    TOTAL_APP_ROLLBACKS                    { get; set; } // BIGINT
		[Column, Nullable] public long?    ACT_COMPLETED_TOTAL                    { get; set; } // BIGINT
		[Column, Nullable] public long?    APP_RQSTS_COMPLETED_TOTAL              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_RQST_CPU_TIME                      { get; set; } // BIGINT
		[Column, Nullable] public decimal? ROUTINE_TIME_RQST_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RQST_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? ACT_WAIT_TIME_PERCENT                  { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? IO_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? LOCK_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? AGENT_WAIT_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? NETWORK_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_SORT_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? COMPILE_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TRANSACT_END_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? UTILS_PROC_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    AVG_LOCK_WAITS_PER_ACT                 { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_TIMEOUTS_PER_ACT              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_DEADLOCKS_PER_ACT                  { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_ESCALS_PER_ACT                { get; set; } // BIGINT
		[Column, Nullable] public long?    ROWS_READ_PER_ROWS_RETURNED            { get; set; } // BIGINT
		[Column, Nullable] public decimal? TOTAL_BP_HIT_RATIO_PERCENT             { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TOTAL_GBP_HIT_RATIO_PERCENT            { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? CF_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RECLAIM_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SPACEMAPPAGE_RECLAIM_WAIT_TIME_PERCENT { get; set; } // DECIMAL(5,2)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_TBSP_UTILIZATION")]
	public partial class MON_TBSP_UTILIZATION
	{
		[Column, Nullable] public string   TBSP_NAME                   { get; set; } // VARCHAR(128)
		[Column, Nullable] public short?   MEMBER                      { get; set; } // SMALLINT
		[Column, Nullable] public string   TBSP_TYPE                   { get; set; } // VARCHAR(10)
		[Column, Nullable] public string   TBSP_CONTENT_TYPE           { get; set; } // VARCHAR(10)
		[Column, Nullable] public string   TBSP_STATE                  { get; set; } // VARCHAR(256)
		[Column, Nullable] public long?    TBSP_PAGE_SIZE              { get; set; } // BIGINT
		[Column, Nullable] public long?    TBSP_EXTENT_SIZE            { get; set; } // BIGINT
		[Column, Nullable] public long?    TBSP_PREFETCH_SIZE          { get; set; } // BIGINT
		[Column, Nullable] public short?   TBSP_USING_AUTO_STORAGE     { get; set; } // SMALLINT
		[Column, Nullable] public short?   TBSP_AUTO_RESIZE_ENABLED    { get; set; } // SMALLINT
		[Column, Nullable] public long?    TBSP_TOTAL_SIZE_KB          { get; set; } // BIGINT
		[Column, Nullable] public long?    TBSP_USABLE_SIZE_KB         { get; set; } // BIGINT
		[Column, Nullable] public decimal? TBSP_UTILIZATION_PERCENT    { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    TBSP_PAGE_TOP               { get; set; } // BIGINT
		[Column, Nullable] public long?    DATA_PHYSICAL_READS         { get; set; } // BIGINT
		[Column, Nullable] public decimal? DATA_HIT_RATIO_PERCENT      { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    INDEX_PHYSICAL_READS        { get; set; } // BIGINT
		[Column, Nullable] public decimal? INDEX_HIT_RATIO_PERCENT     { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    XDA_PHYSICAL_READS          { get; set; } // BIGINT
		[Column, Nullable] public decimal? XDA_HIT_RATIO_PERCENT       { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? GBP_DATA_HIT_RATIO_PERCENT  { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? GBP_INDEX_HIT_RATIO_PERCENT { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? GBP_XDA_HIT_RATIO_PERCENT   { get; set; } // DECIMAL(5,2)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="MON_WORKLOAD_SUMMARY")]
	public partial class MON_WORKLOAD_SUMMARY
	{
		[Column, Nullable] public string   WORKLOAD_NAME                          { get; set; } // VARCHAR(128)
		[Column, Nullable] public int?     WORKLOAD_ID                            { get; set; } // INTEGER
		[Column, Nullable] public long?    TOTAL_APP_COMMITS                      { get; set; } // BIGINT
		[Column, Nullable] public long?    TOTAL_APP_ROLLBACKS                    { get; set; } // BIGINT
		[Column, Nullable] public long?    ACT_COMPLETED_TOTAL                    { get; set; } // BIGINT
		[Column, Nullable] public long?    APP_RQSTS_COMPLETED_TOTAL              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_RQST_CPU_TIME                      { get; set; } // BIGINT
		[Column, Nullable] public decimal? ROUTINE_TIME_RQST_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RQST_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? ACT_WAIT_TIME_PERCENT                  { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? IO_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? LOCK_WAIT_TIME_PERCENT                 { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? AGENT_WAIT_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? NETWORK_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SECTION_SORT_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? COMPILE_PROC_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TRANSACT_END_PROC_TIME_PERCENT         { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? UTILS_PROC_TIME_PERCENT                { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public long?    AVG_LOCK_WAITS_PER_ACT                 { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_TIMEOUTS_PER_ACT              { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_DEADLOCKS_PER_ACT                  { get; set; } // BIGINT
		[Column, Nullable] public long?    AVG_LOCK_ESCALS_PER_ACT                { get; set; } // BIGINT
		[Column, Nullable] public long?    ROWS_READ_PER_ROWS_RETURNED            { get; set; } // BIGINT
		[Column, Nullable] public decimal? TOTAL_BP_HIT_RATIO_PERCENT             { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? TOTAL_GBP_HIT_RATIO_PERCENT            { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? CF_WAIT_TIME_PERCENT                   { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? RECLAIM_WAIT_TIME_PERCENT              { get; set; } // DECIMAL(5,2)
		[Column, Nullable] public decimal? SPACEMAPPAGE_RECLAIM_WAIT_TIME_PERCENT { get; set; } // DECIMAL(5,2)
	}

	// View
	[Table(Schema="SYSCAT", Name="NAMEMAPPINGS")]
	public partial class NAMEMAPPING
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="NICKNAMES")]
	public partial class NICKNAME
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="NODEGROUPS")]
	public partial class NODEGROUP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="NODEGROUPDEF")]
	public partial class NODEGROUPDEF
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="NOTIFICATIONLIST")]
	public partial class NOTIFICATIONLIST
	{
		[Column, Nullable] public string NAME { get; set; } // VARCHAR(128)
		[Column, Nullable] public string TYPE { get; set; } // VARCHAR(7)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="OBJECTOWNERS")]
	public partial class OBJECTOWNER
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public char   OWNERTYPE    { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public string OBJECTNAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECTSCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECTTYPE   { get; set; } // VARCHAR(24)
	}

	// View
	[Table(Schema="SYSCAT", Name="PACKAGES")]
	public partial class PACKAGE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="PACKAGEAUTH")]
	public partial class PACKAGEAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="PACKAGEDEP")]
	public partial class PACKAGEDEP
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="PARAMETERS")]
	public partial class PARAMETER
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="PARAMETERS_S")]
	public partial class PARAMETERS_S
	{
	}

	[Table(Schema="ADMINISTRATOR", Name="Parent")]
	public partial class Parent
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? Value1   { get; set; } // INTEGER
	}

	// View
	[Table(Schema="SYSCAT", Name="PARTITIONMAPS")]
	public partial class PARTITIONMAP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="PASSTHRUAUTH")]
	public partial class PASSTHRUAUTH
	{
	}

	[Table(Schema="ADMINISTRATOR", Name="Patient")]
	public partial class Patient
	{
		[Column, NotNull] public int    PersonID  { get; set; } // INTEGER
		[Column, NotNull] public string Diagnosis { get; set; } // VARCHAR(256)
	}

	// View
	[Table(Schema="SYSIBMADM", Name="PDLOGMSGS_LAST24HOURS")]
	public partial class PDLOGMSGS_LAST24HOURS
	{
		[Column, Nullable] public DateTime? TIMESTAMP      { get; set; } // TIMESTAMP
		[Column, Nullable] public int?      TIMEZONE       { get; set; } // INTEGER
		[Column, Nullable] public string    INSTANCENAME   { get; set; } // VARCHAR(128)
		[Column, Nullable] public short?    DBPARTITIONNUM { get; set; } // SMALLINT
		[Column, Nullable] public string    DBNAME         { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     PID            { get; set; } // BIGINT
		[Column, Nullable] public string    PROCESSNAME    { get; set; } // VARCHAR(255)
		[Column, Nullable] public long?     TID            { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_ID        { get; set; } // VARCHAR(64)
		[Column, Nullable] public string    COMPONENT      { get; set; } // VARCHAR(255)
		[Column, Nullable] public string    FUNCTION       { get; set; } // VARCHAR(255)
		[Column, Nullable] public int?      PROBE          { get; set; } // INTEGER
		[Column, Nullable] public int?      MSGNUM         { get; set; } // INTEGER
		[Column, Nullable] public string    MSGTYPE        { get; set; } // CHAR(3)
		[Column, Nullable] public char?     MSGSEVERITY    { get; set; } // CHAR(1)
		[Column, Nullable] public string    MSG            { get; set; } // CLOB(16384)
		[Column, Nullable] public short?    MEMBER         { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSCAT", Name="PERIODS")]
	public partial class PERIOD
	{
	}

	[Table(Schema="ADMINISTRATOR", Name="Person")]
	public partial class Person
	{
		[PrimaryKey, Identity   ] public int    PersonID   { get; set; } // INTEGER
		[Column,     NotNull    ] public string FirstName  { get; set; } // VARCHAR(50)
		[Column,     NotNull    ] public string LastName   { get; set; } // VARCHAR(50)
		[Column,        Nullable] public string MiddleName { get; set; } // VARCHAR(50)
		[Column,     NotNull    ] public char   Gender     { get; set; } // CHAR(1)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person_BackReference
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false)]
		public IEnumerable<Doctor> Doctors { get; set; }

		#endregion
	}

	// View
	[Table(Schema="ADMINISTRATOR", Name="PERSONVIEW")]
	public partial class PERSONVIEW
	{
		[Column, NotNull    ] public int    PersonID   { get; set; } // INTEGER
		[Column, NotNull    ] public string FirstName  { get; set; } // VARCHAR(50)
		[Column, NotNull    ] public string LastName   { get; set; } // VARCHAR(50)
		[Column,    Nullable] public string MiddleName { get; set; } // VARCHAR(50)
		[Column, NotNull    ] public char   Gender     { get; set; } // CHAR(1)
	}

	[Table(Schema="SYSTOOLS", Name="POLICY")]
	public partial class POLICY
	{
		[Column, NotNull    ] public string   MED         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   DECISION    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   NAME        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public DateTime UPDATE_TIME { get; set; } // TIMESTAMP
		[Column,    Nullable] public byte[]   POLICY      { get; set; } // BLOB(2097152)
	}

	// View
	[Table(Schema="SYSCAT", Name="PREDICATESPECS")]
	public partial class PREDICATESPEC
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="PRIVILEGES")]
	public partial class PRIVILEGE
	{
		[Column, NotNull    ] public string AUTHID       { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public char   AUTHIDTYPE   { get; set; } // CHAR(1)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(11)
		[Column,    Nullable] public char?  GRANTABLE    { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string OBJECTNAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECTSCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECTTYPE   { get; set; } // VARCHAR(24)
	}

	// View
	[Table(Schema="SYSCAT", Name="PROCEDURES")]
	public partial class PROCEDURE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="PROCPARMS")]
	public partial class PROCPARM
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="QUERY_PREP_COST")]
	public partial class QUERY_PREP_COST
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP        { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     NUM_EXECUTIONS            { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_EXECUTION_TIME_S  { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_EXECUTION_TIME_MS { get; set; } // BIGINT
		[Column, Nullable] public long?     PREP_TIME_MS              { get; set; } // BIGINT
		[Column, Nullable] public decimal?  PREP_TIME_PERCENT         { get; set; } // DECIMAL(8,2)
		[Column, Nullable] public string    STMT_TEXT                 { get; set; } // CLOB(2097152)
		[Column, Nullable] public short?    DBPARTITIONNUM            { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                    { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBM", Name="REF_CONSTRAINTS")]
	public partial class REF_CONSTRAINTS
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="REFERENCES")]
	public partial class REFERENCE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="REFERENTIAL_CONSTRAINTS")]
	public partial class REFERENTIAL_CONSTRAINTS
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="REG_VARIABLES")]
	public partial class REG_VARIABLES
	{
		[Column, Nullable] public short? DBPARTITIONNUM { get; set; } // SMALLINT
		[Column, Nullable] public string REG_VAR_NAME   { get; set; } // VARCHAR(256)
		[Column, Nullable] public string REG_VAR_VALUE  { get; set; } // VARCHAR(2048)
		[Column, Nullable] public short? IS_AGGREGATE   { get; set; } // SMALLINT
		[Column, Nullable] public string AGGREGATE_NAME { get; set; } // VARCHAR(256)
		[Column, Nullable] public char?  LEVEL          { get; set; } // CHAR(1)
	}

	// View
	[Table(Schema="SYSCAT", Name="ROLES")]
	public partial class ROLE
	{
	}

	// View
	/// <summary>
	/// Roles which are granted to roles
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ROLE_ROLE_PRIVS")]
	public partial class ROLE_ROLE_PRIVS
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTED_ROLE { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string ADMIN_OPTION { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// System privileges granted to roles
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ROLE_SYS_PRIVS")]
	public partial class ROLE_SYS_PRIVS
	{
		[Column, NotNull] public string ROLE         { get; set; } // VARCHAR(128)
		[Column, NotNull] public string PRIVILEGE    { get; set; } // VARCHAR(25)
		[Column, NotNull] public string ADMIN_OPTION { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Table privileges granted to roles
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="ROLE_TAB_PRIVS")]
	public partial class ROLE_TAB_PRIVS
	{
		[Column, NotNull    ] public string ROLE         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	[Table(Schema="SYSCAT", Name="ROLEAUTH")]
	public partial class ROLEAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROUTINES")]
	public partial class ROUTINE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="ROUTINES")]
	public partial class ROUTINE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROUTINEAUTH")]
	public partial class ROUTINEAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROUTINEDEP")]
	public partial class ROUTINEDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROUTINEOPTIONS")]
	public partial class ROUTINEOPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROUTINEPARMS")]
	public partial class ROUTINEPARM
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROUTINEPARMOPTIONS")]
	public partial class ROUTINEPARMOPTION
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="ROUTINES_S")]
	public partial class ROUTINES_S
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROUTINESFEDERATED")]
	public partial class ROUTINESFEDERATED
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="ROWFIELDS")]
	public partial class ROWFIELD
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SCHEMATA")]
	public partial class Schema
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SCHEMAAUTH")]
	public partial class SCHEMAAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SCPREFTBSPACES")]
	public partial class SCPREFTBSPACE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SECURITYLABELS")]
	public partial class SECURITYLABEL
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SECURITYLABELACCESS")]
	public partial class SECURITYLABELACCESS
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SECURITYLABELCOMPONENTS")]
	public partial class SECURITYLABELCOMPONENT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SECURITYLABELCOMPONENTELEMENTS")]
	public partial class SECURITYLABELCOMPONENTELEMENT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SECURITYPOLICIES")]
	public partial class SECURITYPOLICy
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SECURITYPOLICYCOMPONENTRULES")]
	public partial class SECURITYPOLICYCOMPONENTRULE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SECURITYPOLICYEXEMPTIONS")]
	public partial class SECURITYPOLICYEXEMPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SEQUENCES")]
	public partial class SEQUENCE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SEQUENCEAUTH")]
	public partial class SEQUENCEAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SERVERS")]
	public partial class SERVER
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SERVEROPTIONS")]
	public partial class SERVEROPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SERVICECLASSES")]
	public partial class SERVICECLASS
	{
	}

	// View
	/// <summary>
	/// Privileges which the user currently has set
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="SESSION_PRIVS")]
	public partial class SESSION_PRIVS
	{
		[Column, NotNull] public string PRIVILEGE { get; set; } // VARCHAR(25)
	}

	// View
	/// <summary>
	/// Roles which the user currently has enabled
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="SESSION_ROLES")]
	public partial class SESSION_ROLES
	{
		[Column, NotNull] public string ROLE { get; set; } // VARCHAR(128)
	}

	[Table(Schema="ADMINISTRATOR", Name="SLAVETABLE")]
	public partial class SLAVETABLE
	{
		[Column,                                  NotNull] public int ID1                        { get; set; } // INTEGER
		[Column("ID 2222222222222222222222  22"), NotNull] public int ID222222222222222222222222 { get; set; } // INTEGER
		[Column("ID 2222222222222222"),           NotNull] public int ID2222222222222222         { get; set; } // INTEGER

		#region Associations

		/// <summary>
		/// FK_SLAVETABLE_MASTERTABLE
		/// </summary>
		[Association(ThisKey="ID222222222222222222222222, ID1", OtherKey="ID1, ID2", CanBeNull=false)]
		public MASTERTABLE MASTERTABLE { get; set; }

		#endregion
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPAGENT")]
	public partial class SNAPAGENT
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     AGENT_ID           { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENT_PID          { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_TIMEOUT_VAL   { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPAGENT_MEMORY_POOL")]
	public partial class SNAPAGENT_MEMORY_POOL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     AGENT_ID           { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENT_PID          { get; set; } // BIGINT
		[Column, Nullable] public string    POOL_ID            { get; set; } // VARCHAR(14)
		[Column, Nullable] public long?     POOL_CUR_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_WATERMARK     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_CONFIG_SIZE   { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPAPPL")]
	public partial class SNAPAPPL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP             { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME                        { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     AGENT_ID                       { get; set; } // BIGINT
		[Column, Nullable] public long?     UOW_LOG_SPACE_USED             { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_READ                      { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_WRITTEN                   { get; set; } // BIGINT
		[Column, Nullable] public long?     INACT_STMTHIST_SZ              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_L_READS              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_P_READS              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_WRITES               { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_L_READS             { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_P_READS             { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_WRITES              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_L_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_P_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_L_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_P_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_L_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_P_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_L_READS               { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_P_READS               { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_WRITES                { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_READ_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_WRITE_TIME                { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READS                   { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITES                  { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_REQS               { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_REQS              { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_TIME               { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_TIME              { get; set; } // BIGINT
		[Column, Nullable] public long?     UNREAD_PREFETCH_PAGES          { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCKS_HELD                     { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_WAITS                     { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_WAIT_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_ESCALS                    { get; set; } // BIGINT
		[Column, Nullable] public long?     X_LOCK_ESCALS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     DEADLOCKS                      { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SORTS                    { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SORT_TIME                { get; set; } // BIGINT
		[Column, Nullable] public long?     SORT_OVERFLOWS                 { get; set; } // BIGINT
		[Column, Nullable] public long?     COMMIT_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     ROLLBACK_SQL_STMTS             { get; set; } // BIGINT
		[Column, Nullable] public long?     DYNAMIC_SQL_STMTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     STATIC_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     FAILED_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     SELECT_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     DDL_SQL_STMTS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     UID_SQL_STMTS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_AUTO_REBINDS               { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_DELETED               { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_UPDATED               { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_COMMITS                    { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROLLBACKS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_DEADLOCK_ROLLBACKS         { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_DELETED                   { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_INSERTED                  { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_UPDATED                   { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_SELECTED                  { get; set; } // BIGINT
		[Column, Nullable] public long?     BINDS_PRECOMPILES              { get; set; } // BIGINT
		[Column, Nullable] public long?     OPEN_REM_CURS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     OPEN_REM_CURS_BLK              { get; set; } // BIGINT
		[Column, Nullable] public long?     REJ_CURS_BLK                   { get; set; } // BIGINT
		[Column, Nullable] public long?     ACC_CURS_BLK                   { get; set; } // BIGINT
		[Column, Nullable] public long?     SQL_REQS_SINCE_COMMIT          { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_TIMEOUTS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_INSERTED              { get; set; } // BIGINT
		[Column, Nullable] public long?     OPEN_LOC_CURS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     OPEN_LOC_CURS_BLK              { get; set; } // BIGINT
		[Column, Nullable] public long?     PKG_CACHE_LOOKUPS              { get; set; } // BIGINT
		[Column, Nullable] public long?     PKG_CACHE_INSERTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     CAT_CACHE_LOOKUPS              { get; set; } // BIGINT
		[Column, Nullable] public long?     CAT_CACHE_INSERTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     CAT_CACHE_OVERFLOWS            { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_AGENTS                     { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_STOLEN                  { get; set; } // BIGINT
		[Column, Nullable] public long?     ASSOCIATED_AGENTS_TOP          { get; set; } // BIGINT
		[Column, Nullable] public long?     APPL_PRIORITY                  { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_PRIORITY_TYPE             { get; set; } // VARCHAR(16)
		[Column, Nullable] public long?     PREFETCH_WAIT_TIME             { get; set; } // BIGINT
		[Column, Nullable] public long?     APPL_SECTION_LOOKUPS           { get; set; } // BIGINT
		[Column, Nullable] public long?     APPL_SECTION_INSERTS           { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCKS_WAITING                  { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_HASH_JOINS               { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_HASH_LOOPS               { get; set; } // BIGINT
		[Column, Nullable] public long?     HASH_JOIN_OVERFLOWS            { get; set; } // BIGINT
		[Column, Nullable] public long?     HASH_JOIN_SMALL_OVERFLOWS      { get; set; } // BIGINT
		[Column, Nullable] public long?     APPL_IDLE_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?     UOW_LOCK_WAIT_TIME             { get; set; } // BIGINT
		[Column, Nullable] public string    UOW_COMP_STATUS                { get; set; } // VARCHAR(14)
		[Column, Nullable] public long?     AGENT_USR_CPU_TIME_S           { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENT_USR_CPU_TIME_MS          { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENT_SYS_CPU_TIME_S           { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENT_SYS_CPU_TIME_MS          { get; set; } // BIGINT
		[Column, Nullable] public DateTime? APPL_CON_TIME                  { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? CONN_COMPLETE_TIME             { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? LAST_RESET                     { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? UOW_START_TIME                 { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? UOW_STOP_TIME                  { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? PREV_UOW_STOP_TIME             { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     UOW_ELAPSED_TIME_S             { get; set; } // BIGINT
		[Column, Nullable] public long?     UOW_ELAPSED_TIME_MS            { get; set; } // BIGINT
		[Column, Nullable] public long?     ELAPSED_EXEC_TIME_S            { get; set; } // BIGINT
		[Column, Nullable] public long?     ELAPSED_EXEC_TIME_MS           { get; set; } // BIGINT
		[Column, Nullable] public string    INBOUND_COMM_ADDRESS           { get; set; } // VARCHAR(32)
		[Column, Nullable] public long?     LOCK_TIMEOUT_VAL               { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_NUM_OVERFLOWS   { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_SECTION_INSERTS { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_SECTION_LOOKUPS { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_SIZE_TOP        { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_NUM_OVERFLOWS    { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_SECTION_INSERTS  { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_SECTION_LOOKUPS  { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_SIZE_TOP         { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM                 { get; set; } // SMALLINT
		[Column, Nullable] public long?     CAT_CACHE_SIZE_TOP             { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_OLAP_FUNCS               { get; set; } // BIGINT
		[Column, Nullable] public long?     OLAP_FUNC_OVERFLOWS            { get; set; } // BIGINT
		[Column, Nullable] public short?    MEMBER                         { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPAPPL_INFO")]
	public partial class SNAPAPPL_INFO
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP   { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     AGENT_ID             { get; set; } // BIGINT
		[Column, Nullable] public string    APPL_STATUS          { get; set; } // VARCHAR(22)
		[Column, Nullable] public long?     CODEPAGE_ID          { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_ASSOC_AGENTS     { get; set; } // BIGINT
		[Column, Nullable] public short?    COORD_NODE_NUM       { get; set; } // SMALLINT
		[Column, Nullable] public string    AUTHORITY_LVL        { get; set; } // VARCHAR(512)
		[Column, Nullable] public long?     CLIENT_PID           { get; set; } // BIGINT
		[Column, Nullable] public long?     COORD_AGENT_PID      { get; set; } // BIGINT
		[Column, Nullable] public DateTime? STATUS_CHANGE_TIME   { get; set; } // TIMESTAMP
		[Column, Nullable] public string    CLIENT_PLATFORM      { get; set; } // VARCHAR(12)
		[Column, Nullable] public string    CLIENT_PROTOCOL      { get; set; } // VARCHAR(10)
		[Column, Nullable] public short?    TERRITORY_CODE       { get; set; } // SMALLINT
		[Column, Nullable] public string    APPL_NAME            { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    APPL_ID              { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    SEQUENCE_NO          { get; set; } // VARCHAR(4)
		[Column, Nullable] public string    PRIMARY_AUTH_ID      { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    SESSION_AUTH_ID      { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    CLIENT_NNAME         { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    CLIENT_PRDID         { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    INPUT_DB_ALIAS       { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    CLIENT_DB_ALIAS      { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_NAME              { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_PATH              { get; set; } // VARCHAR(1024)
		[Column, Nullable] public string    EXECUTION_ID         { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    CORR_TOKEN           { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TPMON_CLIENT_USERID  { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    TPMON_CLIENT_WKSTN   { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    TPMON_CLIENT_APP     { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    TPMON_ACC_STR        { get; set; } // VARCHAR(200)
		[Column, Nullable] public short?    DBPARTITIONNUM       { get; set; } // SMALLINT
		[Column, Nullable] public int?      WORKLOAD_ID          { get; set; } // INTEGER
		[Column, Nullable] public short?    IS_SYSTEM_APPL       { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER               { get; set; } // SMALLINT
		[Column, Nullable] public short?    COORD_MEMBER         { get; set; } // SMALLINT
		[Column, Nullable] public short?    COORD_DBPARTITIONNUM { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPBP")]
	public partial class SNAPBP
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP         { get; set; } // TIMESTAMP
		[Column, Nullable] public string    BP_NAME                    { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_NAME                    { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_PATH                    { get; set; } // VARCHAR(1024)
		[Column, Nullable] public string    INPUT_DB_ALIAS             { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     POOL_DATA_L_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_P_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_WRITES           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_L_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_P_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_WRITES          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_L_READS           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_P_READS           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_WRITES            { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_READ_TIME             { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_WRITE_TIME            { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_WRITES     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_WRITES    { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_WRITES      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_READ_TIME       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_WRITE_TIME      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_READ_REQS  { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_READ_REQS { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_READ_REQS   { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READS               { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITES              { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_REQS           { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_REQS          { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_TIME           { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_TIME          { get; set; } // BIGINT
		[Column, Nullable] public long?     UNREAD_PREFETCH_PAGES      { get; set; } // BIGINT
		[Column, Nullable] public long?     FILES_CLOSED               { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_L_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_P_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_L_READS    { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_P_READS    { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_L_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_P_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_NO_VICTIM_BUFFER      { get; set; } // BIGINT
		[Column, Nullable] public long?     PAGES_FROM_BLOCK_IOS       { get; set; } // BIGINT
		[Column, Nullable] public long?     PAGES_FROM_VECTORED_IOS    { get; set; } // BIGINT
		[Column, Nullable] public long?     VECTORED_IOS               { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM             { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                     { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPBP_PART")]
	public partial class SNAPBP_PART
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP      { get; set; } // TIMESTAMP
		[Column, Nullable] public string    BP_NAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_NAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     BP_CUR_BUFFSZ           { get; set; } // BIGINT
		[Column, Nullable] public long?     BP_NEW_BUFFSZ           { get; set; } // BIGINT
		[Column, Nullable] public long?     BP_PAGES_LEFT_TO_REMOVE { get; set; } // BIGINT
		[Column, Nullable] public long?     BP_TBSP_USE_COUNT       { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM          { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                  { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPCONTAINER")]
	public partial class SNAPCONTAINER
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    TBSP_NAME          { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TBSP_ID            { get; set; } // BIGINT
		[Column, Nullable] public string    CONTAINER_NAME     { get; set; } // VARCHAR(256)
		[Column, Nullable] public long?     CONTAINER_ID       { get; set; } // BIGINT
		[Column, Nullable] public string    CONTAINER_TYPE     { get; set; } // VARCHAR(16)
		[Column, Nullable] public long?     TOTAL_PAGES        { get; set; } // BIGINT
		[Column, Nullable] public long?     USABLE_PAGES       { get; set; } // BIGINT
		[Column, Nullable] public short?    ACCESSIBLE         { get; set; } // SMALLINT
		[Column, Nullable] public long?     STRIPE_SET         { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public string    FS_ID              { get; set; } // VARCHAR(22)
		[Column, Nullable] public long?     FS_TOTAL_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?     FS_USED_SIZE       { get; set; } // BIGINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPDB")]
	public partial class SNAPDB
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP             { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME                        { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_PATH                        { get; set; } // VARCHAR(1024)
		[Column, Nullable] public string    INPUT_DB_ALIAS                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_STATUS                      { get; set; } // VARCHAR(16)
		[Column, Nullable] public short?    CATALOG_PARTITION              { get; set; } // SMALLINT
		[Column, Nullable] public string    CATALOG_PARTITION_NAME         { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    SERVER_PLATFORM                { get; set; } // VARCHAR(12)
		[Column, Nullable] public string    DB_LOCATION                    { get; set; } // VARCHAR(12)
		[Column, Nullable] public DateTime? DB_CONN_TIME                   { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? LAST_RESET                     { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? LAST_BACKUP                    { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     CONNECTIONS_TOP                { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_CONS                     { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SEC_CONS                 { get; set; } // BIGINT
		[Column, Nullable] public long?     APPLS_CUR_CONS                 { get; set; } // BIGINT
		[Column, Nullable] public long?     APPLS_IN_DB2                   { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_ASSOC_AGENTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_TOP                     { get; set; } // BIGINT
		[Column, Nullable] public long?     COORD_AGENTS_TOP               { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCKS_HELD                     { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_WAITS                     { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_WAIT_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_LIST_IN_USE               { get; set; } // BIGINT
		[Column, Nullable] public long?     DEADLOCKS                      { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_ESCALS                    { get; set; } // BIGINT
		[Column, Nullable] public long?     X_LOCK_ESCALS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCKS_WAITING                  { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCK_TIMEOUTS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_INDOUBT_TRANS              { get; set; } // BIGINT
		[Column, Nullable] public long?     SORT_HEAP_ALLOCATED            { get; set; } // BIGINT
		[Column, Nullable] public long?     SORT_SHRHEAP_ALLOCATED         { get; set; } // BIGINT
		[Column, Nullable] public long?     SORT_SHRHEAP_TOP               { get; set; } // BIGINT
		[Column, Nullable] public long?     POST_SHRTHRESHOLD_SORTS        { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SORTS                    { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SORT_TIME                { get; set; } // BIGINT
		[Column, Nullable] public long?     SORT_OVERFLOWS                 { get; set; } // BIGINT
		[Column, Nullable] public long?     ACTIVE_SORTS                   { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_L_READS              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_P_READS              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_L_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_P_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_WRITES               { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_WRITES         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_L_READS             { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_P_READS             { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_L_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_P_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_WRITES              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_WRITES        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_P_READS               { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_L_READS               { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_WRITES                { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_READS           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_WRITES          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_P_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_L_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_READ_TIME                 { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_WRITE_TIME                { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_READ_TIME           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_WRITE_TIME          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_READ_REQS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_READ_REQS     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_READ_REQS       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_NO_VICTIM_BUFFER          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_LSN_GAP_CLNS              { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DRTY_PG_STEAL_CLNS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DRTY_PG_THRSH_CLNS        { get; set; } // BIGINT
		[Column, Nullable] public long?     PREFETCH_WAIT_TIME             { get; set; } // BIGINT
		[Column, Nullable] public long?     UNREAD_PREFETCH_PAGES          { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READS                   { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITES                  { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_REQS               { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_REQS              { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_TIME               { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_TIME              { get; set; } // BIGINT
		[Column, Nullable] public long?     FILES_CLOSED                   { get; set; } // BIGINT
		[Column, Nullable] public long?     ELAPSED_EXEC_TIME_S            { get; set; } // BIGINT
		[Column, Nullable] public long?     ELAPSED_EXEC_TIME_MS           { get; set; } // BIGINT
		[Column, Nullable] public long?     COMMIT_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     ROLLBACK_SQL_STMTS             { get; set; } // BIGINT
		[Column, Nullable] public long?     DYNAMIC_SQL_STMTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     STATIC_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     FAILED_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     SELECT_SQL_STMTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     UID_SQL_STMTS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     DDL_SQL_STMTS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_AUTO_REBINDS               { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_DELETED               { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_INSERTED              { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_UPDATED               { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_COMMITS                    { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROLLBACKS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_DEADLOCK_ROLLBACKS         { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_DELETED                   { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_INSERTED                  { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_UPDATED                   { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_SELECTED                  { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_READ                      { get; set; } // BIGINT
		[Column, Nullable] public long?     BINDS_PRECOMPILES              { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_LOG_AVAILABLE            { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_LOG_USED                 { get; set; } // BIGINT
		[Column, Nullable] public long?     SEC_LOG_USED_TOP               { get; set; } // BIGINT
		[Column, Nullable] public long?     TOT_LOG_USED_TOP               { get; set; } // BIGINT
		[Column, Nullable] public long?     SEC_LOGS_ALLOCATED             { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_READS                      { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_READ_TIME_S                { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_READ_TIME_NS               { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_WRITES                     { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_WRITE_TIME_S               { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_WRITE_TIME_NS              { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_LOG_WRITE_IO               { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_LOG_READ_IO                { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_LOG_PART_PAGE_IO           { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_LOG_BUFFER_FULL            { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_LOG_DATA_FOUND_IN_BUFFER   { get; set; } // BIGINT
		[Column, Nullable] public long?     APPL_ID_OLDEST_XACT            { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_TO_REDO_FOR_RECOVERY       { get; set; } // BIGINT
		[Column, Nullable] public long?     LOG_HELD_BY_DIRTY_PAGES        { get; set; } // BIGINT
		[Column, Nullable] public long?     PKG_CACHE_LOOKUPS              { get; set; } // BIGINT
		[Column, Nullable] public long?     PKG_CACHE_INSERTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     PKG_CACHE_NUM_OVERFLOWS        { get; set; } // BIGINT
		[Column, Nullable] public long?     PKG_CACHE_SIZE_TOP             { get; set; } // BIGINT
		[Column, Nullable] public long?     APPL_SECTION_LOOKUPS           { get; set; } // BIGINT
		[Column, Nullable] public long?     APPL_SECTION_INSERTS           { get; set; } // BIGINT
		[Column, Nullable] public long?     CAT_CACHE_LOOKUPS              { get; set; } // BIGINT
		[Column, Nullable] public long?     CAT_CACHE_INSERTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     CAT_CACHE_OVERFLOWS            { get; set; } // BIGINT
		[Column, Nullable] public long?     CAT_CACHE_SIZE_TOP             { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_SIZE_TOP        { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_NUM_OVERFLOWS   { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_SECTION_INSERTS { get; set; } // BIGINT
		[Column, Nullable] public long?     PRIV_WORKSPACE_SECTION_LOOKUPS { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_SIZE_TOP         { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_NUM_OVERFLOWS    { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_SECTION_INSERTS  { get; set; } // BIGINT
		[Column, Nullable] public long?     SHR_WORKSPACE_SECTION_LOOKUPS  { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_HASH_JOINS               { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_HASH_LOOPS               { get; set; } // BIGINT
		[Column, Nullable] public long?     HASH_JOIN_OVERFLOWS            { get; set; } // BIGINT
		[Column, Nullable] public long?     HASH_JOIN_SMALL_OVERFLOWS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POST_SHRTHRESHOLD_HASH_JOINS   { get; set; } // BIGINT
		[Column, Nullable] public long?     ACTIVE_HASH_JOINS              { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_DB_STORAGE_PATHS           { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM                 { get; set; } // SMALLINT
		[Column, Nullable] public int?      SMALLEST_LOG_AVAIL_NODE        { get; set; } // INTEGER
		[Column, Nullable] public long?     TOTAL_OLAP_FUNCS               { get; set; } // BIGINT
		[Column, Nullable] public long?     OLAP_FUNC_OVERFLOWS            { get; set; } // BIGINT
		[Column, Nullable] public long?     ACTIVE_OLAP_FUNCS              { get; set; } // BIGINT
		[Column, Nullable] public long?     STATS_CACHE_SIZE               { get; set; } // BIGINT
		[Column, Nullable] public long?     STATS_FABRICATIONS             { get; set; } // BIGINT
		[Column, Nullable] public long?     SYNC_RUNSTATS                  { get; set; } // BIGINT
		[Column, Nullable] public long?     ASYNC_RUNSTATS                 { get; set; } // BIGINT
		[Column, Nullable] public long?     STATS_FABRICATE_TIME           { get; set; } // BIGINT
		[Column, Nullable] public long?     SYNC_RUNSTATS_TIME             { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_THRESHOLD_VIOLATIONS       { get; set; } // BIGINT
		[Column, Nullable] public short?    MEMBER                         { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPDB_MEMORY_POOL")]
	public partial class SNAPDB_MEMORY_POOL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    POOL_ID            { get; set; } // VARCHAR(14)
		[Column, Nullable] public string    POOL_SECONDARY_ID  { get; set; } // VARCHAR(32)
		[Column, Nullable] public long?     POOL_CUR_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_WATERMARK     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_CONFIG_SIZE   { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPDBM")]
	public partial class SNAPDBM
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP        { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     SORT_HEAP_ALLOCATED       { get; set; } // BIGINT
		[Column, Nullable] public long?     POST_THRESHOLD_SORTS      { get; set; } // BIGINT
		[Column, Nullable] public long?     PIPED_SORTS_REQUESTED     { get; set; } // BIGINT
		[Column, Nullable] public long?     PIPED_SORTS_ACCEPTED      { get; set; } // BIGINT
		[Column, Nullable] public long?     REM_CONS_IN               { get; set; } // BIGINT
		[Column, Nullable] public long?     REM_CONS_IN_EXEC          { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCAL_CONS                { get; set; } // BIGINT
		[Column, Nullable] public long?     LOCAL_CONS_IN_EXEC        { get; set; } // BIGINT
		[Column, Nullable] public long?     CON_LOCAL_DBASES          { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_REGISTERED         { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_WAITING_ON_TOKEN   { get; set; } // BIGINT
		[Column, Nullable] public string    DB2_STATUS                { get; set; } // VARCHAR(12)
		[Column, Nullable] public long?     AGENTS_REGISTERED_TOP     { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_WAITING_TOP        { get; set; } // BIGINT
		[Column, Nullable] public long?     COMM_PRIVATE_MEM          { get; set; } // BIGINT
		[Column, Nullable] public long?     IDLE_AGENTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_FROM_POOL          { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_CREATED_EMPTY_POOL { get; set; } // BIGINT
		[Column, Nullable] public long?     COORD_AGENTS_TOP          { get; set; } // BIGINT
		[Column, Nullable] public long?     MAX_AGENT_OVERFLOWS       { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_STOLEN             { get; set; } // BIGINT
		[Column, Nullable] public long?     GW_TOTAL_CONS             { get; set; } // BIGINT
		[Column, Nullable] public long?     GW_CUR_CONS               { get; set; } // BIGINT
		[Column, Nullable] public long?     GW_CONS_WAIT_HOST         { get; set; } // BIGINT
		[Column, Nullable] public long?     GW_CONS_WAIT_CLIENT       { get; set; } // BIGINT
		[Column, Nullable] public long?     POST_THRESHOLD_HASH_JOINS { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_GW_CONN_SWITCHES      { get; set; } // BIGINT
		[Column, Nullable] public DateTime? DB2START_TIME             { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? LAST_RESET                { get; set; } // TIMESTAMP
		[Column, Nullable] public int?      NUM_NODES_IN_DB2_INSTANCE { get; set; } // INTEGER
		[Column, Nullable] public string    PRODUCT_NAME              { get; set; } // VARCHAR(32)
		[Column, Nullable] public string    SERVICE_LEVEL             { get; set; } // VARCHAR(18)
		[Column, Nullable] public long?     SORT_HEAP_TOP             { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM            { get; set; } // SMALLINT
		[Column, Nullable] public long?     POST_THRESHOLD_OLAP_FUNCS { get; set; } // BIGINT
		[Column, Nullable] public short?    MEMBER                    { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPDBM_MEMORY_POOL")]
	public partial class SNAPDBM_MEMORY_POOL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    POOL_ID            { get; set; } // VARCHAR(14)
		[Column, Nullable] public long?     POOL_CUR_SIZE      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_WATERMARK     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_CONFIG_SIZE   { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPDETAILLOG")]
	public partial class SNAPDETAILLOG
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP  { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME             { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     FIRST_ACTIVE_LOG    { get; set; } // BIGINT
		[Column, Nullable] public long?     LAST_ACTIVE_LOG     { get; set; } // BIGINT
		[Column, Nullable] public long?     CURRENT_ACTIVE_LOG  { get; set; } // BIGINT
		[Column, Nullable] public long?     CURRENT_ARCHIVE_LOG { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM      { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER              { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPDYN_SQL")]
	public partial class SNAPDYN_SQL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP      { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     NUM_EXECUTIONS          { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_COMPILATIONS        { get; set; } // BIGINT
		[Column, Nullable] public long?     PREP_TIME_WORST         { get; set; } // BIGINT
		[Column, Nullable] public long?     PREP_TIME_BEST          { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_DELETED        { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_INSERTED       { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_UPDATED        { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_READ               { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_WRITTEN            { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_SORTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     SORT_OVERFLOWS          { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SORT_TIME         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_L_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_P_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_L_READS  { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_P_READS  { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_L_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_P_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_L_READS { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_P_READS { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_L_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_P_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_L_READS   { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_P_READS   { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_EXEC_TIME         { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_EXEC_TIME_MS      { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_USR_CPU_TIME      { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_USR_CPU_TIME_MS   { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SYS_CPU_TIME      { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SYS_CPU_TIME_MS   { get; set; } // BIGINT
		[Column, Nullable] public string    STMT_TEXT               { get; set; } // CLOB(2097152)
		[Column, Nullable] public short?    DBPARTITIONNUM          { get; set; } // SMALLINT
		[Column, Nullable] public long?     STATS_FABRICATE_TIME    { get; set; } // BIGINT
		[Column, Nullable] public long?     SYNC_RUNSTATS_TIME      { get; set; } // BIGINT
		[Column, Nullable] public short?    MEMBER                  { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPFCM")]
	public partial class SNAPFCM
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     BUFF_FREE          { get; set; } // BIGINT
		[Column, Nullable] public long?     BUFF_FREE_BOTTOM   { get; set; } // BIGINT
		[Column, Nullable] public long?     CH_FREE            { get; set; } // BIGINT
		[Column, Nullable] public long?     CH_FREE_BOTTOM     { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPFCM_PART")]
	public partial class SNAPFCM_PART
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    CONNECTION_STATUS  { get; set; } // VARCHAR(10)
		[Column, Nullable] public long?     TOTAL_BUFFERS_SENT { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_BUFFERS_RCVD { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    FCM_DBPARTITIONNUM { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
		[Column, Nullable] public short?    FCM_MEMBER         { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPHADR")]
	public partial class SNAPHADR
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP    { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME               { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    HADR_ROLE             { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    HADR_STATE            { get; set; } // VARCHAR(14)
		[Column, Nullable] public string    HADR_SYNCMODE         { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    HADR_CONNECT_STATUS   { get; set; } // VARCHAR(12)
		[Column, Nullable] public DateTime? HADR_CONNECT_TIME     { get; set; } // TIMESTAMP
		[Column, Nullable] public int?      HADR_HEARTBEAT        { get; set; } // INTEGER
		[Column, Nullable] public string    HADR_LOCAL_HOST       { get; set; } // VARCHAR(255)
		[Column, Nullable] public string    HADR_LOCAL_SERVICE    { get; set; } // VARCHAR(40)
		[Column, Nullable] public string    HADR_REMOTE_HOST      { get; set; } // VARCHAR(255)
		[Column, Nullable] public string    HADR_REMOTE_SERVICE   { get; set; } // VARCHAR(40)
		[Column, Nullable] public string    HADR_REMOTE_INSTANCE  { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     HADR_TIMEOUT          { get; set; } // BIGINT
		[Column, Nullable] public string    HADR_PRIMARY_LOG_FILE { get; set; } // VARCHAR(255)
		[Column, Nullable] public long?     HADR_PRIMARY_LOG_PAGE { get; set; } // BIGINT
		[Column, Nullable] public long?     HADR_PRIMARY_LOG_LSN  { get; set; } // BIGINT
		[Column, Nullable] public string    HADR_STANDBY_LOG_FILE { get; set; } // VARCHAR(255)
		[Column, Nullable] public long?     HADR_STANDBY_LOG_PAGE { get; set; } // BIGINT
		[Column, Nullable] public long?     HADR_STANDBY_LOG_LSN  { get; set; } // BIGINT
		[Column, Nullable] public long?     HADR_LOG_GAP          { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM        { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPLOCK")]
	public partial class SNAPLOCK
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     AGENT_ID           { get; set; } // BIGINT
		[Column, Nullable] public long?     TAB_FILE_ID        { get; set; } // BIGINT
		[Column, Nullable] public string    LOCK_OBJECT_TYPE   { get; set; } // VARCHAR(18)
		[Column, Nullable] public string    LOCK_MODE          { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    LOCK_STATUS        { get; set; } // VARCHAR(10)
		[Column, Nullable] public short?    LOCK_ESCALATION    { get; set; } // SMALLINT
		[Column, Nullable] public string    TABNAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABSCHEMA          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TBSP_NAME          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    LOCK_ATTRIBUTES    { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     LOCK_COUNT         { get; set; } // BIGINT
		[Column, Nullable] public string    LOCK_CURRENT_MODE  { get; set; } // VARCHAR(10)
		[Column, Nullable] public long?     LOCK_HOLD_COUNT    { get; set; } // BIGINT
		[Column, Nullable] public string    LOCK_NAME          { get; set; } // VARCHAR(32)
		[Column, Nullable] public long?     LOCK_RELEASE_FLAGS { get; set; } // BIGINT
		[Column, Nullable] public int?      DATA_PARTITION_ID  { get; set; } // INTEGER
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPLOCKWAIT")]
	public partial class SNAPLOCKWAIT
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP   { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     AGENT_ID             { get; set; } // BIGINT
		[Column, Nullable] public long?     SUBSECTION_NUMBER    { get; set; } // BIGINT
		[Column, Nullable] public string    LOCK_MODE            { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    LOCK_OBJECT_TYPE     { get; set; } // VARCHAR(18)
		[Column, Nullable] public long?     AGENT_ID_HOLDING_LK  { get; set; } // BIGINT
		[Column, Nullable] public DateTime? LOCK_WAIT_START_TIME { get; set; } // TIMESTAMP
		[Column, Nullable] public string    LOCK_MODE_REQUESTED  { get; set; } // VARCHAR(10)
		[Column, Nullable] public short?    LOCK_ESCALATION      { get; set; } // SMALLINT
		[Column, Nullable] public string    TABNAME              { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABSCHEMA            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TBSP_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    APPL_ID_HOLDING_LK   { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    LOCK_ATTRIBUTES      { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    LOCK_CURRENT_MODE    { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    LOCK_NAME            { get; set; } // VARCHAR(32)
		[Column, Nullable] public long?     LOCK_RELEASE_FLAGS   { get; set; } // BIGINT
		[Column, Nullable] public int?      DATA_PARTITION_ID    { get; set; } // INTEGER
		[Column, Nullable] public short?    DBPARTITIONNUM       { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER               { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPSTMT")]
	public partial class SNAPSTMT
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP      { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     AGENT_ID                { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_READ               { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_WRITTEN            { get; set; } // BIGINT
		[Column, Nullable] public long?     NUM_AGENTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     AGENTS_TOP              { get; set; } // BIGINT
		[Column, Nullable] public string    STMT_TYPE               { get; set; } // VARCHAR(20)
		[Column, Nullable] public string    STMT_OPERATION          { get; set; } // VARCHAR(20)
		[Column, Nullable] public long?     SECTION_NUMBER          { get; set; } // BIGINT
		[Column, Nullable] public long?     QUERY_COST_ESTIMATE     { get; set; } // BIGINT
		[Column, Nullable] public long?     QUERY_CARD_ESTIMATE     { get; set; } // BIGINT
		[Column, Nullable] public long?     DEGREE_PARALLELISM      { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_SORTS              { get; set; } // BIGINT
		[Column, Nullable] public long?     TOTAL_SORT_TIME         { get; set; } // BIGINT
		[Column, Nullable] public long?     SORT_OVERFLOWS          { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_DELETED        { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_UPDATED        { get; set; } // BIGINT
		[Column, Nullable] public long?     INT_ROWS_INSERTED       { get; set; } // BIGINT
		[Column, Nullable] public long?     FETCH_COUNT             { get; set; } // BIGINT
		[Column, Nullable] public DateTime? STMT_START              { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? STMT_STOP               { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     STMT_USR_CPU_TIME_S     { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_USR_CPU_TIME_MS    { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_SYS_CPU_TIME_S     { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_SYS_CPU_TIME_MS    { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_ELAPSED_TIME_S     { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_ELAPSED_TIME_MS    { get; set; } // BIGINT
		[Column, Nullable] public short?    BLOCKING_CURSOR         { get; set; } // SMALLINT
		[Column, Nullable] public short?    STMT_NODE_NUMBER        { get; set; } // SMALLINT
		[Column, Nullable] public string    CURSOR_NAME             { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    CREATOR                 { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    PACKAGE_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    STMT_TEXT               { get; set; } // CLOB(16777216)
		[Column, Nullable] public string    CONSISTENCY_TOKEN       { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    PACKAGE_VERSION_ID      { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     POOL_DATA_L_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_P_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_L_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_P_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_L_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_P_READS        { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_L_READS  { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_P_READS  { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_L_READS { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_P_READS { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_L_READS   { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_P_READS   { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM          { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                  { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPSTORAGE_PATHS")]
	public partial class SNAPSTORAGE_PATHS
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP       { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME                  { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    DB_STORAGE_PATH          { get; set; } // VARCHAR(256)
		[Column, Nullable] public string    DB_STORAGE_PATH_WITH_DPE { get; set; } // VARCHAR(256)
		[Column, Nullable] public short?    DBPARTITIONNUM           { get; set; } // SMALLINT
		[Column, Nullable] public string    DB_STORAGE_PATH_STATE    { get; set; } // VARCHAR(16)
		[Column, Nullable] public string    FS_ID                    { get; set; } // VARCHAR(22)
		[Column, Nullable] public long?     FS_TOTAL_SIZE            { get; set; } // BIGINT
		[Column, Nullable] public long?     FS_USED_SIZE             { get; set; } // BIGINT
		[Column, Nullable] public long?     STO_PATH_FREE_SIZE       { get; set; } // BIGINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPSUBSECTION")]
	public partial class SNAPSUBSECTION
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    DB_NAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    STMT_TEXT          { get; set; } // CLOB(16777216)
		[Column, Nullable] public long?     SS_EXEC_TIME       { get; set; } // BIGINT
		[Column, Nullable] public long?     TQ_TOT_SEND_SPILLS { get; set; } // BIGINT
		[Column, Nullable] public long?     TQ_CUR_SEND_SPILLS { get; set; } // BIGINT
		[Column, Nullable] public long?     TQ_MAX_SEND_SPILLS { get; set; } // BIGINT
		[Column, Nullable] public long?     TQ_ROWS_READ       { get; set; } // BIGINT
		[Column, Nullable] public long?     TQ_ROWS_WRITTEN    { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_READ          { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_WRITTEN       { get; set; } // BIGINT
		[Column, Nullable] public long?     SS_USR_CPU_TIME_S  { get; set; } // BIGINT
		[Column, Nullable] public long?     SS_USR_CPU_TIME_MS { get; set; } // BIGINT
		[Column, Nullable] public long?     SS_SYS_CPU_TIME_S  { get; set; } // BIGINT
		[Column, Nullable] public long?     SS_SYS_CPU_TIME_MS { get; set; } // BIGINT
		[Column, Nullable] public int?      SS_NUMBER          { get; set; } // INTEGER
		[Column, Nullable] public string    SS_STATUS          { get; set; } // VARCHAR(20)
		[Column, Nullable] public short?    SS_NODE_NUMBER     { get; set; } // SMALLINT
		[Column, Nullable] public short?    TQ_NODE_WAITED_FOR { get; set; } // SMALLINT
		[Column, Nullable] public int?      TQ_WAIT_FOR_ANY    { get; set; } // INTEGER
		[Column, Nullable] public int?      TQ_ID_WAITING_ON   { get; set; } // INTEGER
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPSWITCHES")]
	public partial class SNAPSWITCH
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    UOW_SW_STATE       { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? UOW_SW_TIME        { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    STATEMENT_SW_STATE { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? STATEMENT_SW_TIME  { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    TABLE_SW_STATE     { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? TABLE_SW_TIME      { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    BUFFPOOL_SW_STATE  { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? BUFFPOOL_SW_TIME   { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    LOCK_SW_STATE      { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? LOCK_SW_TIME       { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    SORT_SW_STATE      { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? SORT_SW_TIME       { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    TIMESTAMP_SW_STATE { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? TIMESTAMP_SW_TIME  { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPTAB")]
	public partial class SNAPTAB
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    TABSCHEMA          { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABNAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TAB_FILE_ID        { get; set; } // BIGINT
		[Column, Nullable] public string    TAB_TYPE           { get; set; } // VARCHAR(14)
		[Column, Nullable] public long?     DATA_OBJECT_PAGES  { get; set; } // BIGINT
		[Column, Nullable] public long?     INDEX_OBJECT_PAGES { get; set; } // BIGINT
		[Column, Nullable] public long?     LOB_OBJECT_PAGES   { get; set; } // BIGINT
		[Column, Nullable] public long?     LONG_OBJECT_PAGES  { get; set; } // BIGINT
		[Column, Nullable] public long?     XDA_OBJECT_PAGES   { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_READ          { get; set; } // BIGINT
		[Column, Nullable] public long?     ROWS_WRITTEN       { get; set; } // BIGINT
		[Column, Nullable] public long?     OVERFLOW_ACCESSES  { get; set; } // BIGINT
		[Column, Nullable] public long?     PAGE_REORGS        { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public long?     TBSP_ID            { get; set; } // BIGINT
		[Column, Nullable] public int?      DATA_PARTITION_ID  { get; set; } // INTEGER
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPTAB_REORG")]
	public partial class SNAPTAB_REORG
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP    { get; set; } // TIMESTAMP
		[Column, Nullable] public string    TABNAME               { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    TABSCHEMA             { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     PAGE_REORGS           { get; set; } // BIGINT
		[Column, Nullable] public string    REORG_PHASE           { get; set; } // VARCHAR(16)
		[Column, Nullable] public int?      REORG_MAX_PHASE       { get; set; } // INTEGER
		[Column, Nullable] public long?     REORG_CURRENT_COUNTER { get; set; } // BIGINT
		[Column, Nullable] public long?     REORG_MAX_COUNTER     { get; set; } // BIGINT
		[Column, Nullable] public string    REORG_TYPE            { get; set; } // VARCHAR(128)
		[Column, Nullable] public string    REORG_STATUS          { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    REORG_COMPLETION      { get; set; } // VARCHAR(10)
		[Column, Nullable] public DateTime? REORG_START           { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? REORG_END             { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? REORG_PHASE_START     { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     REORG_INDEX_ID        { get; set; } // BIGINT
		[Column, Nullable] public long?     REORG_TBSPC_ID        { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM        { get; set; } // SMALLINT
		[Column, Nullable] public int?      DATA_PARTITION_ID     { get; set; } // INTEGER
		[Column, Nullable] public long?     REORG_ROWSCOMPRESSED  { get; set; } // BIGINT
		[Column, Nullable] public long?     REORG_ROWSREJECTED    { get; set; } // BIGINT
		[Column, Nullable] public long?     REORG_LONG_TBSPC_ID   { get; set; } // BIGINT
		[Column, Nullable] public short?    MEMBER                { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPTBSP")]
	public partial class SNAPTBSP
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP         { get; set; } // TIMESTAMP
		[Column, Nullable] public string    TBSP_NAME                  { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TBSP_ID                    { get; set; } // BIGINT
		[Column, Nullable] public string    TBSP_TYPE                  { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    TBSP_CONTENT_TYPE          { get; set; } // VARCHAR(10)
		[Column, Nullable] public long?     TBSP_PAGE_SIZE             { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_EXTENT_SIZE           { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_PREFETCH_SIZE         { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_CUR_POOL_ID           { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_NEXT_POOL_ID          { get; set; } // BIGINT
		[Column, Nullable] public short?    FS_CACHING                 { get; set; } // SMALLINT
		[Column, Nullable] public long?     POOL_DATA_L_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_P_READS          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_L_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_DATA_P_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_DATA_WRITES           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_WRITES     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_L_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_P_READS         { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_L_READS    { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_INDEX_P_READS    { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_READS     { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_INDEX_WRITES          { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_WRITES    { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_L_READS           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_P_READS           { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_XDA_WRITES            { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_READS       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_WRITES      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_L_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_TEMP_XDA_P_READS      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_READ_TIME             { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_WRITE_TIME            { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_READ_TIME       { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_WRITE_TIME      { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_DATA_READ_REQS  { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_INDEX_READ_REQS { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_ASYNC_XDA_READ_REQS   { get; set; } // BIGINT
		[Column, Nullable] public long?     POOL_NO_VICTIM_BUFFER      { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READS               { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITES              { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_REQS           { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_REQS          { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_READ_TIME           { get; set; } // BIGINT
		[Column, Nullable] public long?     DIRECT_WRITE_TIME          { get; set; } // BIGINT
		[Column, Nullable] public long?     FILES_CLOSED               { get; set; } // BIGINT
		[Column, Nullable] public long?     UNREAD_PREFETCH_PAGES      { get; set; } // BIGINT
		[Column, Nullable] public string    TBSP_REBALANCER_MODE       { get; set; } // VARCHAR(10)
		[Column, Nullable] public short?    TBSP_USING_AUTO_STORAGE    { get; set; } // SMALLINT
		[Column, Nullable] public short?    TBSP_AUTO_RESIZE_ENABLED   { get; set; } // SMALLINT
		[Column, Nullable] public short?    DBPARTITIONNUM             { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                     { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPTBSP_PART")]
	public partial class SNAPTBSP_PART
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP           { get; set; } // TIMESTAMP
		[Column, Nullable] public string    TBSP_NAME                    { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     TBSP_ID                      { get; set; } // BIGINT
		[Column, Nullable] public string    TBSP_STATE                   { get; set; } // VARCHAR(256)
		[Column, Nullable] public long?     TBSP_PREFETCH_SIZE           { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_NUM_QUIESCERS           { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_STATE_CHANGE_OBJECT_ID  { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_STATE_CHANGE_TBSP_ID    { get; set; } // BIGINT
		[Column, Nullable] public DateTime? TBSP_MIN_RECOVERY_TIME       { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     TBSP_TOTAL_PAGES             { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_USABLE_PAGES            { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_USED_PAGES              { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_FREE_PAGES              { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_PENDING_FREE_PAGES      { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_PAGE_TOP                { get; set; } // BIGINT
		[Column, Nullable] public string    REBALANCER_MODE              { get; set; } // VARCHAR(30)
		[Column, Nullable] public long?     REBALANCER_EXTENTS_REMAINING { get; set; } // BIGINT
		[Column, Nullable] public long?     REBALANCER_EXTENTS_PROCESSED { get; set; } // BIGINT
		[Column, Nullable] public long?     REBALANCER_PRIORITY          { get; set; } // BIGINT
		[Column, Nullable] public DateTime? REBALANCER_START_TIME        { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? REBALANCER_RESTART_TIME      { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     REBALANCER_LAST_EXTENT_MOVED { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_NUM_RANGES              { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_NUM_CONTAINERS          { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_INITIAL_SIZE            { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_CURRENT_SIZE            { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_MAX_SIZE                { get; set; } // BIGINT
		[Column, Nullable] public long?     TBSP_INCREASE_SIZE           { get; set; } // BIGINT
		[Column, Nullable] public short?    TBSP_INCREASE_SIZE_PERCENT   { get; set; } // SMALLINT
		[Column, Nullable] public DateTime? TBSP_LAST_RESIZE_TIME        { get; set; } // TIMESTAMP
		[Column, Nullable] public short?    TBSP_LAST_RESIZE_FAILED      { get; set; } // SMALLINT
		[Column, Nullable] public short?    TBSP_PATHS_DROPPED           { get; set; } // SMALLINT
		[Column, Nullable] public short?    DBPARTITIONNUM               { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPTBSP_QUIESCER")]
	public partial class SNAPTBSP_QUIESCER
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP { get; set; } // TIMESTAMP
		[Column, Nullable] public string    TBSP_NAME          { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     QUIESCER_TS_ID     { get; set; } // BIGINT
		[Column, Nullable] public long?     QUIESCER_OBJ_ID    { get; set; } // BIGINT
		[Column, Nullable] public string    QUIESCER_AUTH_ID   { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     QUIESCER_AGENT_ID  { get; set; } // BIGINT
		[Column, Nullable] public string    QUIESCER_STATE     { get; set; } // VARCHAR(14)
		[Column, Nullable] public short?    DBPARTITIONNUM     { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPTBSP_RANGE")]
	public partial class SNAPTBSP_RANGE
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP      { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     TBSP_ID                 { get; set; } // BIGINT
		[Column, Nullable] public string    TBSP_NAME               { get; set; } // VARCHAR(128)
		[Column, Nullable] public long?     RANGE_NUMBER            { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_STRIPE_SET_NUMBER { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_OFFSET            { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_MAX_PAGE          { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_MAX_EXTENT        { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_START_STRIPE      { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_END_STRIPE        { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_ADJUSTMENT        { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_NUM_CONTAINER     { get; set; } // BIGINT
		[Column, Nullable] public long?     RANGE_CONTAINER_ID      { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM          { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPUTIL")]
	public partial class SNAPUTIL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP        { get; set; } // TIMESTAMP
		[Column, Nullable] public int?      UTILITY_ID                { get; set; } // INTEGER
		[Column, Nullable] public string    UTILITY_TYPE              { get; set; } // VARCHAR(26)
		[Column, Nullable] public int?      UTILITY_PRIORITY          { get; set; } // INTEGER
		[Column, Nullable] public string    UTILITY_DESCRIPTION       { get; set; } // VARCHAR(2048)
		[Column, Nullable] public string    UTILITY_DBNAME            { get; set; } // VARCHAR(128)
		[Column, Nullable] public DateTime? UTILITY_START_TIME        { get; set; } // TIMESTAMP
		[Column, Nullable] public string    UTILITY_STATE             { get; set; } // VARCHAR(10)
		[Column, Nullable] public string    UTILITY_INVOKER_TYPE      { get; set; } // VARCHAR(10)
		[Column, Nullable] public short?    DBPARTITIONNUM            { get; set; } // SMALLINT
		[Column, Nullable] public string    PROGRESS_LIST_ATTR        { get; set; } // VARCHAR(10)
		[Column, Nullable] public int?      PROGRESS_LIST_CUR_SEQ_NUM { get; set; } // INTEGER
		[Column, Nullable] public short?    MEMBER                    { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBMADM", Name="SNAPUTIL_PROGRESS")]
	public partial class SNAPUTIL_PROGRESS
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP       { get; set; } // TIMESTAMP
		[Column, Nullable] public int?      UTILITY_ID               { get; set; } // INTEGER
		[Column, Nullable] public int?      PROGRESS_SEQ_NUM         { get; set; } // INTEGER
		[Column, Nullable] public string    UTILITY_STATE            { get; set; } // VARCHAR(16)
		[Column, Nullable] public string    PROGRESS_DESCRIPTION     { get; set; } // VARCHAR(2048)
		[Column, Nullable] public DateTime? PROGRESS_START_TIME      { get; set; } // TIMESTAMP
		[Column, Nullable] public string    PROGRESS_WORK_METRIC     { get; set; } // VARCHAR(16)
		[Column, Nullable] public long?     PROGRESS_TOTAL_UNITS     { get; set; } // BIGINT
		[Column, Nullable] public long?     PROGRESS_COMPLETED_UNITS { get; set; } // BIGINT
		[Column, Nullable] public short?    DBPARTITIONNUM           { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                   { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLCOLPRIVILEGES")]
	public partial class SQLCOLPRIVILEGE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLCOLUMNS")]
	public partial class SQLCOLUMN
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLFOREIGNKEYS")]
	public partial class SQLFOREIGNKEY
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLPRIMARYKEYS")]
	public partial class SQLPRIMARYKEY
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLPROCEDURES")]
	public partial class SQLPROCEDURE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLPROCEDURECOLS")]
	public partial class SQLPROCEDURECOL
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLSCHEMAS")]
	public partial class SQLSCHEMA
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLSPECIALCOLUMNS")]
	public partial class SQLSPECIALCOLUMN
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLSTATISTICS")]
	public partial class SQLSTATISTIC
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLTABLES")]
	public partial class SQLTABLE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLTABLEPRIVILEGES")]
	public partial class SQLTABLEPRIVILEGE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLTABLETYPES")]
	public partial class SQLTABLETYPE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLTYPEINFO")]
	public partial class SQLTYPEINFO
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SQLUDTS")]
	public partial class SQLUDT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="STATEMENTS")]
	public partial class STATEMENT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="STATEMENTTEXTS")]
	public partial class STATEMENTTEXT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="STOGROUPS")]
	public partial class STOGROUP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="SURROGATEAUTHIDS")]
	public partial class SURROGATEAUTHID
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SYSDUMMY1")]
	public partial class SYSDUMMY1
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SYSFUNCPARMS")]
	public partial class SYSFUNCPARM
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SYSFUNCTIONS")]
	public partial class SYSFUNCTION
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SYSPROCEDURES")]
	public partial class SYSPROCEDURE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SYSPROCPARMS")]
	public partial class SYSPROCPARM
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SYSREVTYPEMAPPINGS")]
	public partial class SYSREVTYPEMAPPING
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="SYSROUTINEPROPERTIESJAVA")]
	public partial class SYSROUTINEPROPERTIESJAVA
	{
	}

	// View
	/// <summary>
	/// Description of the user's own relational tables, views, and synonyms
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="TAB")]
	public partial class TAB
	{
		[Column, NotNull] public string TSCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TNAME   { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABTYPE { get; set; } // VARCHAR(22)
	}

	// View
	[Table(Schema="SYSCAT", Name="TABAUTH")]
	public partial class TABAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TABCONST")]
	public partial class TABCONST
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TABDEP")]
	public partial class TABDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TABDETACHEDDEP")]
	public partial class TABDETACHEDDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TABLES")]
	public partial class TABLE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="TABLES")]
	public partial class TABLE
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="TABLE_CONSTRAINTS")]
	public partial class TABLE_CONSTRAINTS
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="TABLES_S")]
	public partial class TABLES_S
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TABLESPACES")]
	public partial class TABLESPACE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TABOPTIONS")]
	public partial class TABOPTION
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="TBSP_UTILIZATION")]
	public partial class TBSP_UTILIZATION
	{
		[Column,    Nullable] public DateTime? SNAPSHOT_TIMESTAMP         { get; set; } // TIMESTAMP
		[Column,    Nullable] public long?     TBSP_ID                    { get; set; } // BIGINT
		[Column,    Nullable] public string    TBSP_NAME                  { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    TBSP_TYPE                  { get; set; } // VARCHAR(10)
		[Column,    Nullable] public string    TBSP_CONTENT_TYPE          { get; set; } // VARCHAR(10)
		[Column, NotNull    ] public DateTime  TBSP_CREATE_TIME           { get; set; } // TIMESTAMP
		[Column,    Nullable] public string    TBSP_STATE                 { get; set; } // VARCHAR(256)
		[Column,    Nullable] public long?     TBSP_TOTAL_SIZE_KB         { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_USABLE_SIZE_KB        { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_USED_SIZE_KB          { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_FREE_SIZE_KB          { get; set; } // BIGINT
		[Column,    Nullable] public decimal?  TBSP_UTILIZATION_PERCENT   { get; set; } // DECIMAL(5,2)
		[Column,    Nullable] public long?     TBSP_TOTAL_PAGES           { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_USABLE_PAGES          { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_USED_PAGES            { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_FREE_PAGES            { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_PAGE_TOP              { get; set; } // BIGINT
		[Column, NotNull    ] public int       TBSP_PAGE_SIZE             { get; set; } // INTEGER
		[Column, NotNull    ] public int       TBSP_EXTENT_SIZE           { get; set; } // INTEGER
		[Column,    Nullable] public long?     TBSP_PREFETCH_SIZE         { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_MAX_SIZE              { get; set; } // BIGINT
		[Column,    Nullable] public long?     TBSP_INCREASE_SIZE         { get; set; } // BIGINT
		[Column,    Nullable] public short?    TBSP_INCREASE_SIZE_PERCENT { get; set; } // SMALLINT
		[Column,    Nullable] public DateTime? TBSP_LAST_RESIZE_TIME      { get; set; } // TIMESTAMP
		[Column,    Nullable] public short?    TBSP_LAST_RESIZE_FAILED    { get; set; } // SMALLINT
		[Column,    Nullable] public short?    TBSP_USING_AUTO_STORAGE    { get; set; } // SMALLINT
		[Column,    Nullable] public short?    TBSP_AUTO_RESIZE_ENABLED   { get; set; } // SMALLINT
		[Column, NotNull    ] public string    DBPGNAME                   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public long?     TBSP_NUM_CONTAINERS        { get; set; } // BIGINT
		[Column,    Nullable] public string    REMARKS                    { get; set; } // VARCHAR(254)
		[Column,    Nullable] public short?    DBPARTITIONNUM             { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSCAT", Name="TBSPACEAUTH")]
	public partial class TBSPACEAUTH
	{
	}

	[Table(Schema="ADMINISTRATOR", Name="TestIdentity")]
	public partial class TestIdentity
	{
		[PrimaryKey, Identity] public int ID { get; set; } // INTEGER
	}

	// View
	[Table(Schema="SYSCAT", Name="THRESHOLDS")]
	public partial class THRESHOLD
	{
	}

	// View
	[Table(Schema="SYSIBMADM", Name="TOP_DYNAMIC_SQL")]
	public partial class TOP_DYNAMIC_SQL
	{
		[Column, Nullable] public DateTime? SNAPSHOT_TIMESTAMP       { get; set; } // TIMESTAMP
		[Column, Nullable] public long?     NUM_EXECUTIONS           { get; set; } // BIGINT
		[Column, Nullable] public long?     AVERAGE_EXECUTION_TIME_S { get; set; } // BIGINT
		[Column, Nullable] public long?     STMT_SORTS               { get; set; } // BIGINT
		[Column, Nullable] public long?     SORTS_PER_EXECUTION      { get; set; } // BIGINT
		[Column, Nullable] public string    STMT_TEXT                { get; set; } // CLOB(2097152)
		[Column, Nullable] public short?    DBPARTITIONNUM           { get; set; } // SMALLINT
		[Column, Nullable] public short?    MEMBER                   { get; set; } // SMALLINT
	}

	// View
	[Table(Schema="SYSCAT", Name="TRANSFORMS")]
	public partial class TRANSFORM
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TRIGDEP")]
	public partial class TRIGDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TRIGGERS")]
	public partial class TRIGGER
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="TYPEMAPPINGS")]
	public partial class TYPEMAPPING
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="UDT_S")]
	public partial class UDT_S
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="USAGELISTS")]
	public partial class USAGELIST
	{
	}

	// View
	/// <summary>
	/// Description of the user's own relational tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_ALL_TABLES")]
	public partial class USER_ALL_TABLES
	{
		[Column, NotNull    ] public string    TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    TABLESPACE_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE        { get; set; } // SMALLINT
		[Column,    Nullable] public int?      INITIAL_EXTENT  { get; set; } // INTEGER
		[Column,    Nullable] public int?      NEXT_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE    { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public long      NUM_ROWS        { get; set; } // BIGINT
		[Column, NotNull    ] public long      BLOCKS          { get; set; } // BIGINT
		[Column, NotNull    ] public long      EMPTY_BLOCKS    { get; set; } // BIGINT
		[Column, NotNull    ] public short     AVG_ROW_LEN     { get; set; } // SMALLINT
		[Column, NotNull    ] public string    TABLE_LOCK      { get; set; } // VARCHAR(8)
		[Column,    Nullable] public DateTime? LAST_ANALYZED   { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED     { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      TEMPORARY       { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS    { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION     { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Arguments in objects owned by the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_ARGUMENTS")]
	public partial class USER_ARGUMENTS
	{
		[Column, NotNull    ] public string OWNER         { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PACKAGE_NAME  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int    OBJECT_ID     { get; set; } // INTEGER
		[Column,    Nullable] public string ARGUMENT_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short  SEQUENCE      { get; set; } // SMALLINT
		[Column,    Nullable] public string DATA_TYPE     { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string IN_OUT        { get; set; } // VARCHAR(6)
		[Column, NotNull    ] public int    DATA_LENGTH   { get; set; } // INTEGER
		[Column, NotNull    ] public short  DATA_SCALE    { get; set; } // SMALLINT
	}

	// View
	/// <summary>
	/// All user's own tables, views and synonyms
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_CATALOG")]
	public partial class USER_CATALOG
	{
		[Column, NotNull] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_TYPE   { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Comments on columns of user's tables and views
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_COL_COMMENTS")]
	public partial class USER_COL_COMMENTS
	{
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME  { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	// View
	/// <summary>
	/// Information about columns in constraint definitions in user's own tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_CONS_COLUMNS")]
	public partial class USER_CONS_COLUMNS
	{
		[Column, NotNull] public string OWNER           { get; set; } // VARCHAR(128)
		[Column, NotNull] public string CONSTRAINT_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public short  POSITION        { get; set; } // SMALLINT
	}

	// View
	/// <summary>
	/// Constraint definitions on user's own tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_CONSTRAINTS")]
	public partial class USER_CONSTRAINTS
	{
		[Column, NotNull    ] public string OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string CONSTRAINT_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public char   CONSTRAINT_TYPE   { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public string TABLE_SCHEMA      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string R_OWNER           { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string R_CONSTRAINT_NAME { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string DELETE_RULE       { get; set; } // VARCHAR(9)
		[Column,    Nullable] public string DEFERRED          { get; set; } // VARCHAR(9)
		[Column,    Nullable] public string STATUS            { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string VALIDATED         { get; set; } // VARCHAR(13)
		[Column, NotNull    ] public char   GENERATED         { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public char   RELY              { get; set; } // CHAR(1)
		[Column,    Nullable] public string INDEX_OWNER       { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string INDEX_NAME        { get; set; } // VARCHAR(128)
	}

	// View
	[Table(Schema="SYSIBM", Name="USER_DEFINED_TYPES")]
	public partial class USER_DEFINED_TYPES
	{
	}

	// View
	/// <summary>
	/// Dependencies to and from a user's objects
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_DEPENDENCIES")]
	public partial class USER_DEPENDENCIES
	{
		[Column,    Nullable] public string SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME              { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TYPE              { get; set; } // VARCHAR(15)
		[Column, NotNull    ] public string REFERENCED_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string REFERENCED_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string REFERENCED_TYPE   { get; set; } // VARCHAR(20)
	}

	// View
	/// <summary>
	/// Current errors on stored objects owned by the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_ERRORS")]
	public partial class USER_ERRORS
	{
		[Column, NotNull    ] public string SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TYPE   { get; set; } // VARCHAR(15)
		[Column,    Nullable] public int?   LINE   { get; set; } // INTEGER
		[Column,    Nullable] public string TEXT   { get; set; } // VARCHAR(32672)
	}

	// View
	/// <summary>
	/// COLUMNs comprising user's INDEXes and INDEXes on user's TABLEs
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_IND_COLUMNS")]
	public partial class USER_IND_COLUMNS
	{
		[Column, NotNull] public string INDEX_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string INDEX_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public short  COLUMN_POSITION { get; set; } // SMALLINT
		[Column, NotNull] public char   DESCEND         { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Description of partitioned-level partitioning information for the user's own index partitions
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_IND_PARTITIONS")]
	public partial class USER_IND_PARTITIONS
	{
		[Column, NotNull    ] public string    INDEX_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    PARTITION_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    HIGH_VALUE              { get; set; } // VARCHAR(512)
		[Column, NotNull    ] public int       HIGH_VALUE_LENGTH       { get; set; } // INTEGER
		[Column, NotNull    ] public int       PARTITION_POSITION      { get; set; } // INTEGER
		[Column, NotNull    ] public string    TABLESPACE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE                { get; set; } // SMALLINT
		[Column, NotNull    ] public string    LOGGING                 { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION             { get; set; } // VARCHAR(8)
		[Column, NotNull    ] public short     BLEVEL                  { get; set; } // SMALLINT
		[Column, NotNull    ] public long      LEAF_BLOCKS             { get; set; } // BIGINT
		[Column, NotNull    ] public long      DISTINCT_KEYS           { get; set; } // BIGINT
		[Column, NotNull    ] public int       AVG_LEAF_BLOCKS_PER_KEY { get; set; } // INTEGER
		[Column, NotNull    ] public double    CLUSTERING_FACTOR       { get; set; } // DOUBLE
		[Column, NotNull    ] public long      NUM_ROWS                { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED           { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    BUFFER_POOL             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS            { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of the user's own indexes
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_INDEXES")]
	public partial class USER_INDEXES
	{
		[Column, NotNull    ] public string    INDEX_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    INDEX_TYPE              { get; set; } // CHAR(4)
		[Column, NotNull    ] public string    TABLE_OWNER             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_SCHEMA            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME              { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_TYPE              { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public string    UNIQUENESS              { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string    COMPRESSION             { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string    TABLESPACE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE                { get; set; } // SMALLINT
		[Column, NotNull    ] public string    LOGGING                 { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public short     BLEVEL                  { get; set; } // SMALLINT
		[Column, NotNull    ] public long      LEAF_BLOCKS             { get; set; } // BIGINT
		[Column, NotNull    ] public long      DISTINCT_KEYS           { get; set; } // BIGINT
		[Column, NotNull    ] public int       AVG_LEAF_BLOCKS_PER_KEY { get; set; } // INTEGER
		[Column, NotNull    ] public double    CLUSTERING_FACTOR       { get; set; } // DOUBLE
		[Column, NotNull    ] public string    STATUS                  { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public long      NUM_ROWS                { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED           { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED             { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      GENERATED               { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL             { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// Objects owned by the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_OBJECTS")]
	public partial class USER_OBJECTS
	{
		[Column, NotNull    ] public string    OBJECT_SCHEMA  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    OBJECT_NAME    { get; set; } // VARCHAR(128)
		[Column,    Nullable] public int?      OBJECT_ID      { get; set; } // INTEGER
		[Column,    Nullable] public int?      DATA_OBJECT_ID { get; set; } // INTEGER
		[Column, NotNull    ] public string    OBJECT_TYPE    { get; set; } // VARCHAR(24)
		[Column, NotNull    ] public DateTime  CREATED        { get; set; } // TIMESTAMP
		[Column,    Nullable] public DateTime? LAST_DDL_TIME  { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    TIMESTAMP      { get; set; } // CHAR(26)
		[Column, NotNull    ] public string    STATUS         { get; set; } // VARCHAR(7)
		[Column, NotNull    ] public char      TEMPORARY      { get; set; } // VARCHAR(1)
		[Column, NotNull    ] public char      GENERATED      { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Description of the user's own partitioned indexes
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_PART_INDEXES")]
	public partial class USER_PART_INDEXES
	{
		[Column, NotNull    ] public string INDEX_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string INDEX_NAME             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PARTITIONING_TYPE      { get; set; } // VARCHAR(10)
		[Column, NotNull    ] public string SUBPARTITIONING_TYPE   { get; set; } // VARCHAR(4)
		[Column, NotNull    ] public int    PARTITION_COUNT        { get; set; } // INTEGER
		[Column, NotNull    ] public short  PARTITIONING_KEY_COUNT { get; set; } // SMALLINT
		[Column, NotNull    ] public short  DEF_PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int    DEF_PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string DEF_LOGGING            { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of the partitioning key columns for the user's own partitioned objects
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_PART_KEY_COLUMNS")]
	public partial class USER_PART_KEY_COLUMNS
	{
		[Column, NotNull    ] public string OBJECT_SCHEMA   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OBJECT_TYPE     { get; set; } // VARCHAR(5)
		[Column, NotNull    ] public string COLUMN_NAME     { get; set; } // VARCHAR(128)
		[Column,    Nullable] public int?   COLUMN_POSITION { get; set; } // INTEGER
	}

	// View
	/// <summary>
	/// Description of the user's own partitioned tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_PART_TABLES")]
	public partial class USER_PART_TABLES
	{
		[Column, NotNull    ] public string TABLE_SCHEMA           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME             { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string PARTITIONING_TYPE      { get; set; } // VARCHAR(10)
		[Column, NotNull    ] public string SUBPARTITIONING_TYPE   { get; set; } // VARCHAR(4)
		[Column,    Nullable] public int?   PARTITION_COUNT        { get; set; } // INTEGER
		[Column,    Nullable] public int?   PARTITIONING_KEY_COUNT { get; set; } // INTEGER
		[Column, NotNull    ] public short  DEF_PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int    DEF_PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string DEF_LOGGING            { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string DEF_COMPRESSION        { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Description of the user's own procedures
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_PROCEDURES")]
	public partial class USER_PROCEDURES
	{
		[Column,    Nullable] public string OBJECT_SCHEMA           { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string OBJECT_NAME             { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_SCHEMA        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PROCEDURE_SPECIFIC_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string AGGREGATE               { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string PARALLEL                { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Roles granted to current user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_ROLE_PRIVS")]
	public partial class USER_ROLE_PRIVS
	{
		[Column, NotNull    ] public string USERNAME     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTED_ROLE { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string ADMIN_OPTION { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string DEFAULT_ROLE { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string OS_GRANTED   { get; set; } // VARCHAR(2)
	}

	// View
	/// <summary>
	/// Description of the user's own SEQUENCEs
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_SEQUENCES")]
	public partial class USER_SEQUENCES
	{
		[Column, NotNull    ] public string   SEQUENCE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string   SEQUENCE_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public decimal? MIN_VALUE       { get; set; } // DECIMAL
		[Column,    Nullable] public decimal? MAX_VALUE       { get; set; } // DECIMAL
		[Column,    Nullable] public decimal? INCREMENT_BY    { get; set; } // DECIMAL
		[Column, NotNull    ] public char     CYCLE_FLAG      { get; set; } // CHAR(1)
		[Column, NotNull    ] public char     ORDER_FLAG      { get; set; } // CHAR(1)
		[Column, NotNull    ] public int      CACHE_SIZE      { get; set; } // INTEGER
		[Column,    Nullable] public decimal? LAST_NUMBER     { get; set; } // DECFLOAT(16)
	}

	// View
	/// <summary>
	/// Source of stored objects accessible to the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_SOURCE")]
	public partial class USER_SOURCE
	{
		[Column, NotNull    ] public string SCHEMA       { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string NAME         { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string SPECIFICNAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TYPE         { get; set; } // VARCHAR(12)
		[Column,    Nullable] public string TEXT         { get; set; } // CLOB(2097152)
	}

	// View
	/// <summary>
	/// The user's private synonyms
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_SYNONYMS")]
	public partial class USER_SYNONYMS
	{
		[Column, NotNull    ] public string SYNONYM_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string SYNONYM_NAME   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_OWNER    { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_SCHEMA   { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME     { get; set; } // VARCHAR(128)
	}

	// View
	/// <summary>
	/// System privileges granted to current user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_SYS_PRIVS")]
	public partial class USER_SYS_PRIVS
	{
		[Column, NotNull] public string USERNAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string PRIVILEGE    { get; set; } // VARCHAR(25)
		[Column, NotNull] public string ADMIN_OPTION { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Columns statistics for columns of user's tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TAB_COL_STATISTICS")]
	public partial class USER_TAB_COL_STATISTICS
	{
		[Column, NotNull    ] public string    TABLE_SCHEMA  { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    COLUMN_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public long      NUM_DISTINCT  { get; set; } // BIGINT
		[Column, NotNull    ] public long      NUM_NULLS     { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    GLOBAL_STATS  { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public int       AVG_COL_LEN   { get; set; } // INTEGER
	}

	// View
	/// <summary>
	/// Columns of user's tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TAB_COLUMNS")]
	public partial class USER_TAB_COLUMNS
	{
		[Column, NotNull    ] public string    TABLE_SCHEMA         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME           { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    COLUMN_NAME          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    DATA_TYPE            { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    DATA_TYPE_OWNER      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int       DATA_LENGTH          { get; set; } // INTEGER
		[Column,    Nullable] public int?      DATA_PRECISION       { get; set; } // INTEGER
		[Column, NotNull    ] public short     DATA_SCALE           { get; set; } // SMALLINT
		[Column, NotNull    ] public char      NULLABLE             { get; set; } // CHAR(1)
		[Column, NotNull    ] public short     COLUMN_ID            { get; set; } // SMALLINT
		[Column,    Nullable] public int?      DEFAULT_LENGTH       { get; set; } // INTEGER
		[Column,    Nullable] public string    DATA_DEFAULT         { get; set; } // CLOB(65536)
		[Column, NotNull    ] public long      NUM_DISTINCT         { get; set; } // BIGINT
		[Column, NotNull    ] public long      NUM_NULLS            { get; set; } // BIGINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED        { get; set; } // TIMESTAMP
		[Column,    Nullable] public int?      CHAR_COL_DECL_LENGTH { get; set; } // INTEGER
		[Column, NotNull    ] public string    GLOBAL_STATS         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public int       AVG_COL_LEN          { get; set; } // INTEGER
		[Column, NotNull    ] public int       CHAR_LENGTH          { get; set; } // INTEGER
		[Column, NotNull    ] public char      CHAR_USED            { get; set; } // VARCHAR(1)
	}

	// View
	/// <summary>
	/// Comments on tables and views owned by the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TAB_COMMENTS")]
	public partial class USER_TAB_COMMENTS
	{
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_TYPE   { get; set; } // VARCHAR(8)
		[Column,    Nullable] public string COMMENTS     { get; set; } // VARCHAR(254)
	}

	// View
	/// <summary>
	/// Description of partitioned-level partitioning information for the user's own table partitions
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TAB_PARTITIONS")]
	public partial class USER_TAB_PARTITIONS
	{
		[Column, NotNull    ] public string    TABLE_SCHEMA       { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME         { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    PARTITION_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    HIGH_VALUE         { get; set; } // VARCHAR(512)
		[Column, NotNull    ] public int       HIGH_VALUE_LENGTH  { get; set; } // INTEGER
		[Column, NotNull    ] public int       PARTITION_POSITION { get; set; } // INTEGER
		[Column, NotNull    ] public string    TABLESPACE_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE           { get; set; } // SMALLINT
		[Column, NotNull    ] public int       INITIAL_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       NEXT_EXTENT        { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE       { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING            { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION        { get; set; } // VARCHAR(8)
		[Column, NotNull    ] public short     AVG_ROW_LEN        { get; set; } // SMALLINT
		[Column,    Nullable] public DateTime? LAST_ANALYZED      { get; set; } // TIMESTAMP
		[Column,    Nullable] public string    BUFFER_POOL        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS       { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Grants on objects for which the user is the owner
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TAB_PRIVS")]
	public partial class USER_TAB_PRIVS
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTOR      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// All grants on objects owner by the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TAB_PRIVS_MADE")]
	public partial class USER_TAB_PRIVS_MADE
	{
		[Column, NotNull    ] public string GRANTEE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTOR      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Grants on objects for which the user is the grantee
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TAB_PRIVS_RECD")]
	public partial class USER_TAB_PRIVS_RECD
	{
		[Column, NotNull    ] public string OWNER        { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string TABLE_SCHEMA { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string TABLE_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string GRANTOR      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string PRIVILEGE    { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string GRANTABLE    { get; set; } // VARCHAR(3)
	}

	// View
	/// <summary>
	/// Description of the user's own relational tables
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TABLES")]
	public partial class USER_TABLES
	{
		[Column, NotNull    ] public string    TABLE_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    TABLE_NAME      { get; set; } // VARCHAR(128)
		[Column,    Nullable] public string    TABLESPACE_NAME { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public short     PCT_FREE        { get; set; } // SMALLINT
		[Column,    Nullable] public int?      INITIAL_EXTENT  { get; set; } // INTEGER
		[Column,    Nullable] public int?      NEXT_EXTENT     { get; set; } // INTEGER
		[Column, NotNull    ] public int       PCT_INCREASE    { get; set; } // INTEGER
		[Column, NotNull    ] public string    LOGGING         { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public long      NUM_ROWS        { get; set; } // BIGINT
		[Column, NotNull    ] public long      BLOCKS          { get; set; } // BIGINT
		[Column, NotNull    ] public long      EMPTY_BLOCKS    { get; set; } // BIGINT
		[Column, NotNull    ] public short     AVG_ROW_LEN     { get; set; } // SMALLINT
		[Column, NotNull    ] public string    TABLE_LOCK      { get; set; } // VARCHAR(8)
		[Column,    Nullable] public DateTime? LAST_ANALYZED   { get; set; } // TIMESTAMP
		[Column, NotNull    ] public string    PARTITIONED     { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public char      TEMPORARY       { get; set; } // VARCHAR(1)
		[Column,    Nullable] public string    BUFFER_POOL     { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string    GLOBAL_STATS    { get; set; } // VARCHAR(3)
		[Column, NotNull    ] public string    COMPRESSION     { get; set; } // VARCHAR(8)
	}

	// View
	/// <summary>
	/// Description of accessible tablespaces
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TABLESPACES")]
	public partial class USER_TABLESPACES
	{
		[Column, NotNull    ] public string   TABLESPACE_NAME          { get; set; } // VARCHAR(128)
		[Column,    Nullable] public short?   DBPARTITIONNUM           { get; set; } // SMALLINT
		[Column, NotNull    ] public int      BLOCK_SIZE               { get; set; } // INTEGER
		[Column, NotNull    ] public int      INITIAL_EXTENT           { get; set; } // INTEGER
		[Column, NotNull    ] public int      NEXT_EXTENT              { get; set; } // INTEGER
		[Column,    Nullable] public long?    MIN_EXTENTS              { get; set; } // BIGINT
		[Column,    Nullable] public long?    MAX_EXTENTS              { get; set; } // BIGINT
		[Column,    Nullable] public decimal? PCT_INCREASE             { get; set; } // DECFLOAT(16)
		[Column, NotNull    ] public int      MIN_EXTLEN               { get; set; } // INTEGER
		[Column, NotNull    ] public string   STATUS                   { get; set; } // VARCHAR(7)
		[Column, NotNull    ] public string   CONTENTS                 { get; set; } // VARCHAR(9)
		[Column, NotNull    ] public string   LOGGING                  { get; set; } // VARCHAR(7)
		[Column, NotNull    ] public string   SEGMENT_SPACE_MANAGEMENT { get; set; } // VARCHAR(6)
	}

	// View
	/// <summary>
	/// Triggers owned by the user
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_TRIGGERS")]
	public partial class USER_TRIGGERS
	{
		[Column, NotNull] public string TRIGGER_SCHEMA   { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_NAME     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TRIGGER_TYPE     { get; set; } // VARCHAR(15)
		[Column, NotNull] public string TRIGGERING_EVENT { get; set; } // VARCHAR(7)
		[Column, NotNull] public string TABLE_OWNER      { get; set; } // VARCHAR(128)
		[Column, NotNull] public string BASE_OBJECT_TYPE { get; set; } // VARCHAR(5)
		[Column, NotNull] public string TABLE_SCHEMA     { get; set; } // VARCHAR(128)
		[Column, NotNull] public string TABLE_NAME       { get; set; } // VARCHAR(128)
		[Column, NotNull] public string STATUS           { get; set; } // VARCHAR(8)
		[Column, NotNull] public string TRIGGER_BODY     { get; set; } // CLOB(2097152)
	}

	// View
	/// <summary>
	/// Columns of user's views
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_VIEW_COLUMNS")]
	public partial class USER_VIEW_COLUMNS
	{
		[Column, NotNull    ] public string OWNER          { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string VIEW_SCHEMA    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string VIEW_NAME      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string COLUMN_NAME    { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public string DATA_TYPE      { get; set; } // VARCHAR(128)
		[Column, NotNull    ] public int    DATA_LENGTH    { get; set; } // INTEGER
		[Column,    Nullable] public int?   DATA_PRECISION { get; set; } // INTEGER
		[Column, NotNull    ] public short  DATA_SCALE     { get; set; } // SMALLINT
		[Column, NotNull    ] public short  COLUMN_ID      { get; set; } // SMALLINT
		[Column, NotNull    ] public char   NULLABLE       { get; set; } // CHAR(1)
		[Column,    Nullable] public string DATA_DEFAULT   { get; set; } // CLOB(65536)
	}

	// View
	/// <summary>
	/// Description of the user's own views
	/// </summary>
	[Table(Schema="SYSIBMADM", Name="USER_VIEWS")]
	public partial class USER_VIEWS
	{
		[Column, NotNull] public string VIEW_SCHEMA { get; set; } // VARCHAR(128)
		[Column, NotNull] public string VIEW_NAME   { get; set; } // VARCHAR(128)
		[Column, NotNull] public int    TEXT_LENGTH { get; set; } // INTEGER
		[Column, NotNull] public string TEXT        { get; set; } // CLOB(2097152)
	}

	// View
	[Table(Schema="SYSCAT", Name="USEROPTIONS")]
	public partial class USEROPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="VARIABLES")]
	public partial class VARIABLE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="VARIABLEAUTH")]
	public partial class VARIABLEAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="VARIABLEDEP")]
	public partial class VARIABLEDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="VIEWS")]
	public partial class VIEW
	{
	}

	// View
	[Table(Schema="SYSIBM", Name="VIEWS")]
	public partial class VIEW
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="VIEWDEP")]
	public partial class VIEWDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKACTIONS")]
	public partial class WORKACTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKACTIONSETS")]
	public partial class WORKACTIONSET
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKCLASSES")]
	public partial class WORKCLASS
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKCLASSATTRIBUTES")]
	public partial class WORKCLASSATTRIBUTE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKCLASSSETS")]
	public partial class WORKCLASSSET
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKLOADS")]
	public partial class WORKLOAD
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKLOADAUTH")]
	public partial class WORKLOADAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WORKLOADCONNATTR")]
	public partial class WORKLOADCONNATTR
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WRAPOPTIONS")]
	public partial class WRAPOPTION
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="WRAPPERS")]
	public partial class WRAPPER
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XDBMAPGRAPHS")]
	public partial class XDBMAPGRAPH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XDBMAPSHREDTREES")]
	public partial class XDBMAPSHREDTREE
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XMLSTRINGS")]
	public partial class XMLSTRING
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XSROBJECTS")]
	public partial class XSROBJECT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XSROBJECTAUTH")]
	public partial class XSROBJECTAUTH
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XSROBJECTCOMPONENTS")]
	public partial class XSROBJECTCOMPONENT
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XSROBJECTDEP")]
	public partial class XSROBJECTDEP
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XSROBJECTDETAILS")]
	public partial class XSROBJECTDETAIL
	{
	}

	// View
	[Table(Schema="SYSCAT", Name="XSROBJECTHIERARCHIES")]
	public partial class XSROBJECTHIERARCHy
	{
	}

	public static partial class TESTDATADBStoredProcedures
	{
		#region ADMIN_CMD

		public static int ADMIN_CMD(this DataConnection dataConnection, string CMD)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_CMD",
				new DataParameter("CMD", CMD));
		}

		#endregion

		#region ADMIN_COPY_SCHEMA

		public static int ADMIN_COPY_SCHEMA(this DataConnection dataConnection, string SOURCESCHEMA, string TARGETSCHEMA, string COPYMODE, string OBJECTOWNER, string SOURCETBSP, string TARGETTBSP, ref string ERRORTABSCHEMA, ref string ERRORTABNAME)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ADMIN_COPY_SCHEMA",
				new DataParameter("SOURCESCHEMA",   SOURCESCHEMA),
				new DataParameter("TARGETSCHEMA",   TARGETSCHEMA),
				new DataParameter("COPYMODE",       COPYMODE),
				new DataParameter("OBJECTOWNER",    OBJECTOWNER),
				new DataParameter("SOURCETBSP",     SOURCETBSP),
				new DataParameter("TARGETTBSP",     TARGETTBSP),
				new DataParameter("ERRORTABSCHEMA", ERRORTABSCHEMA) { Direction = ParameterDirection.InputOutput, Size = 128 },
				new DataParameter("ERRORTABNAME",   ERRORTABNAME)   { Direction = ParameterDirection.InputOutput, Size = 128 });

			ERRORTABSCHEMA = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ERRORTABSCHEMA"]).Value);
			ERRORTABNAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ERRORTABNAME"]).  Value);

			return ret;
		}

		#endregion

		#region ADMIN_DROP_SCHEMA

		public static int ADMIN_DROP_SCHEMA(this DataConnection dataConnection, string SCHEMA, string DROPMODE, ref string ERRORTABSCHEMA, ref string ERRORTAB)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ADMIN_DROP_SCHEMA",
				new DataParameter("SCHEMA",         SCHEMA),
				new DataParameter("DROPMODE",       DROPMODE),
				new DataParameter("ERRORTABSCHEMA", ERRORTABSCHEMA) { Direction = ParameterDirection.InputOutput, Size = 128 },
				new DataParameter("ERRORTAB",       ERRORTAB)       { Direction = ParameterDirection.InputOutput, Size = 128 });

			ERRORTABSCHEMA = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ERRORTABSCHEMA"]).Value);
			ERRORTAB       = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ERRORTAB"]).      Value);

			return ret;
		}

		#endregion

		#region ADMIN_GET_DEPTREE

		public static int ADMIN_GET_DEPTREE(this DataConnection dataConnection, string OBJECTTYPE, string OBJECTLIST, ref string DMTSCHEMA, ref string DMTNAME)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ADMIN_GET_DEPTREE",
				new DataParameter("OBJECTTYPE", OBJECTTYPE),
				new DataParameter("OBJECTLIST", OBJECTLIST),
				new DataParameter("DMTSCHEMA",  DMTSCHEMA)  { Direction = ParameterDirection.InputOutput, Size = 128 },
				new DataParameter("DMTNAME",    DMTNAME)    { Direction = ParameterDirection.InputOutput, Size = 128 });

			DMTSCHEMA = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DMTSCHEMA"]).Value);
			DMTNAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DMTNAME"]).  Value);

			return ret;
		}

		#endregion

		#region ADMIN_MOVE_TABLE_UTIL

		public static int ADMIN_MOVE_TABLE_UTIL(this DataConnection dataConnection, string TABSCHEMA, string TABNAME, string ACTION, string KEY, string VALUE)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_MOVE_TABLE_UTIL",
				new DataParameter("TABSCHEMA", TABSCHEMA),
				new DataParameter("TABNAME",   TABNAME),
				new DataParameter("ACTION",    ACTION),
				new DataParameter("KEY",       KEY),
				new DataParameter("VALUE",     VALUE));
		}

		#endregion

		#region ADMIN_REMOVE_MSGS

		public static int ADMIN_REMOVE_MSGS(this DataConnection dataConnection, string OPERATION_ID)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_REMOVE_MSGS",
				new DataParameter("OPERATION_ID", OPERATION_ID));
		}

		#endregion

		#region ADMIN_REVALIDATE_DB_OBJECTS

		public static int ADMIN_REVALIDATE_DB_OBJECTS(this DataConnection dataConnection, string OBJECT_TYPE, string OBJECT_SCHEMA, string OBJECT_NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_REVALIDATE_DB_OBJECTS",
				new DataParameter("OBJECT_TYPE",   OBJECT_TYPE),
				new DataParameter("OBJECT_SCHEMA", OBJECT_SCHEMA),
				new DataParameter("OBJECT_NAME",   OBJECT_NAME));
		}

		#endregion

		#region ADMIN_SET_INTRA_PARALLEL

		public static int ADMIN_SET_INTRA_PARALLEL(this DataConnection dataConnection, string STATE)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_SET_INTRA_PARALLEL",
				new DataParameter("STATE", STATE));
		}

		#endregion

		#region ADMIN_SET_MAINT_MODE

		public static int ADMIN_SET_MAINT_MODE(this DataConnection dataConnection, string SETTINGS)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_SET_MAINT_MODE",
				new DataParameter("SETTINGS", SETTINGS));
		}

		#endregion

		#region ADMIN_TASK_ADD

		public static int ADMIN_TASK_ADD(this DataConnection dataConnection, string NAME, DateTime? BEGIN_TIME, DateTime? END_TIME, int? MAX_INVOCATIONS, string SCHEDULE, string PROCEDURE_SCHEMA, string PROCEDURE_NAME, string PROCEDURE_INPUT, string OPTIONS, string REMARKS)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_TASK_ADD",
				new DataParameter("NAME",             NAME),
				new DataParameter("BEGIN_TIME",       BEGIN_TIME),
				new DataParameter("END_TIME",         END_TIME),
				new DataParameter("MAX_INVOCATIONS",  MAX_INVOCATIONS),
				new DataParameter("SCHEDULE",         SCHEDULE),
				new DataParameter("PROCEDURE_SCHEMA", PROCEDURE_SCHEMA),
				new DataParameter("PROCEDURE_NAME",   PROCEDURE_NAME),
				new DataParameter("PROCEDURE_INPUT",  PROCEDURE_INPUT),
				new DataParameter("OPTIONS",          OPTIONS),
				new DataParameter("REMARKS",          REMARKS));
		}

		#endregion

		#region ADMIN_TASK_REMOVE

		public static int ADMIN_TASK_REMOVE(this DataConnection dataConnection, string NAME, DateTime? END_TIME)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_TASK_REMOVE",
				new DataParameter("NAME",     NAME),
				new DataParameter("END_TIME", END_TIME));
		}

		#endregion

		#region ADMIN_TASK_UPDATE

		public static int ADMIN_TASK_UPDATE(this DataConnection dataConnection, string NAME, DateTime? BEGIN_TIME, DateTime? END_TIME, int? MAX_INVOCATIONS, string SCHEDULE, string OPTIONS, string REMARKS)
		{
			return dataConnection.ExecuteProc("SYSPROC.ADMIN_TASK_UPDATE",
				new DataParameter("NAME",            NAME),
				new DataParameter("BEGIN_TIME",      BEGIN_TIME),
				new DataParameter("END_TIME",        END_TIME),
				new DataParameter("MAX_INVOCATIONS", MAX_INVOCATIONS),
				new DataParameter("SCHEDULE",        SCHEDULE),
				new DataParameter("OPTIONS",         OPTIONS),
				new DataParameter("REMARKS",         REMARKS));
		}

		#endregion

		#region ALTER_ROUTINE_PACKAGE

		public static int ALTER_ROUTINE_PACKAGE(this DataConnection dataConnection, object TYPE, string SCHEMA, string MODULE, string NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSPROC.ALTER_ROUTINE_PACKAGE",
				new DataParameter("TYPE",    TYPE),
				new DataParameter("SCHEMA",  SCHEMA),
				new DataParameter("MODULE",  MODULE),
				new DataParameter("NAME",    NAME),
				new DataParameter("OPTIONS", OPTIONS));
		}

		#endregion

		#region ALTOBJ

		public static int ALTOBJ(this DataConnection dataConnection, string EXEC_MODE, string SQL_STMT, ref int? ALTER_ID, out string MSG)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ALTOBJ",
				new DataParameter("EXEC_MODE", EXEC_MODE),
				new DataParameter("SQL_STMT",  SQL_STMT),
				new DataParameter("ALTER_ID",  ALTER_ID)  { Direction = ParameterDirection.InputOutput, Size = 4 });

			ALTER_ID = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["ALTER_ID"]).Value);
			MSG      = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MSG"]).     Value);

			return ret;
		}

		#endregion

		#region AM_DROP_TASK

		public static int AM_DROP_TASK(this DataConnection dataConnection, int? TASK_ID)
		{
			return dataConnection.ExecuteProc("SYSPROC.AM_DROP_TASK",
				new DataParameter("TASK_ID", TASK_ID));
		}

		#endregion

		#region AM_GET_LOCK_CHNS

		public static int AM_GET_LOCK_CHNS(this DataConnection dataConnection, long? AGENT_ID, out string LOCK_CHAINS)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.AM_GET_LOCK_CHNS",
				new DataParameter("AGENT_ID", AGENT_ID));

			LOCK_CHAINS = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LOCK_CHAINS"]).Value);

			return ret;
		}

		#endregion

		#region AM_GET_LOCK_CHN_TB

		public static int AM_GET_LOCK_CHN_TB(this DataConnection dataConnection, long? AGENT_ID)
		{
			return dataConnection.ExecuteProc("SYSPROC.AM_GET_LOCK_CHN_TB",
				new DataParameter("AGENT_ID", AGENT_ID));
		}

		#endregion

		#region AM_GET_LOCK_RPT

		public static int AM_GET_LOCK_RPT(this DataConnection dataConnection, long? AGENT_ID)
		{
			return dataConnection.ExecuteProc("SYSPROC.AM_GET_LOCK_RPT",
				new DataParameter("AGENT_ID", AGENT_ID));
		}

		#endregion

		#region AM_GET_RPT

		public static int AM_GET_RPT(this DataConnection dataConnection, int? PARTITION, int? REPORT_ID, string APPL_FILTER, int? MAX_NUMBER)
		{
			return dataConnection.ExecuteProc("SYSPROC.AM_GET_RPT",
				new DataParameter("PARTITION",   PARTITION),
				new DataParameter("REPORT_ID",   REPORT_ID),
				new DataParameter("APPL_FILTER", APPL_FILTER),
				new DataParameter("MAX_NUMBER",  MAX_NUMBER));
		}

		#endregion

		#region AM_SAVE_TASK

		public static int AM_SAVE_TASK(this DataConnection dataConnection, object MODE, ref int? TASK_ID, string TASK_NAME, string APPL_FILTER, object SHOW_LOCK_CHAINS, string REPORT_ID)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.AM_SAVE_TASK",
				new DataParameter("MODE",             MODE),
				new DataParameter("TASK_ID",          TASK_ID)          { Direction = ParameterDirection.InputOutput, Size = 4 },
				new DataParameter("TASK_NAME",        TASK_NAME),
				new DataParameter("APPL_FILTER",      APPL_FILTER),
				new DataParameter("SHOW_LOCK_CHAINS", SHOW_LOCK_CHAINS),
				new DataParameter("REPORT_ID",        REPORT_ID));

			TASK_ID = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["TASK_ID"]).Value);

			return ret;
		}

		#endregion

		#region ANALYZE_DATABASE

		public static int ANALYZE_DATABASE(this DataConnection dataConnection, string METHOD, int? ESTIMATE_ROWS, int? ESTIMATE_PERCENT, string METHOD_OPT)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.ANALYZE_DATABASE",
				new DataParameter("METHOD",           METHOD),
				new DataParameter("ESTIMATE_ROWS",    ESTIMATE_ROWS),
				new DataParameter("ESTIMATE_PERCENT", ESTIMATE_PERCENT),
				new DataParameter("METHOD_OPT",       METHOD_OPT));
		}

		#endregion

		#region ANALYZE_LOG_SPACE

		public static int ANALYZE_LOG_SPACE(this DataConnection dataConnection, string DBPGNAME, string MAINTBSCHEMA, string MAINTABLE, short? USETBTYPE, string STMGTIMESTAMP, object ADDDROPOPTION, string ADDDROPLIST, string PNUMBER, string PWEIGHT)
		{
			return dataConnection.ExecuteProc("SYSPROC.ANALYZE_LOG_SPACE",
				new DataParameter("DBPGNAME",      DBPGNAME),
				new DataParameter("MAINTBSCHEMA",  MAINTBSCHEMA),
				new DataParameter("MAINTABLE",     MAINTABLE),
				new DataParameter("USETBTYPE",     USETBTYPE),
				new DataParameter("STMGTIMESTAMP", STMGTIMESTAMP),
				new DataParameter("ADDDROPOPTION", ADDDROPOPTION),
				new DataParameter("ADDDROPLIST",   ADDDROPLIST),
				new DataParameter("PNUMBER",       PNUMBER),
				new DataParameter("PWEIGHT",       PWEIGHT));
		}

		#endregion

		#region ANALYZE_PART_OBJECT

		public static int ANALYZE_PART_OBJECT(this DataConnection dataConnection, string SCHEMA, string OBJECT_NAME, object OBJECT_TYPE, object COMMAND_TYPE, string COMMAND_OPT, string SAMPLE_CLAUSE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.ANALYZE_PART_OBJECT",
				new DataParameter("SCHEMA",        SCHEMA),
				new DataParameter("OBJECT_NAME",   OBJECT_NAME),
				new DataParameter("OBJECT_TYPE",   OBJECT_TYPE),
				new DataParameter("COMMAND_TYPE",  COMMAND_TYPE),
				new DataParameter("COMMAND_OPT",   COMMAND_OPT),
				new DataParameter("SAMPLE_CLAUSE", SAMPLE_CLAUSE));
		}

		#endregion

		#region ANALYZE_SCHEMA

		public static int ANALYZE_SCHEMA(this DataConnection dataConnection, string SCHEMA, string METHOD, int? ESTIMATE_ROWS, int? ESTIMATE_PERCENT, string METHOD_OPT)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.ANALYZE_SCHEMA",
				new DataParameter("SCHEMA",           SCHEMA),
				new DataParameter("METHOD",           METHOD),
				new DataParameter("ESTIMATE_ROWS",    ESTIMATE_ROWS),
				new DataParameter("ESTIMATE_PERCENT", ESTIMATE_PERCENT),
				new DataParameter("METHOD_OPT",       METHOD_OPT));
		}

		#endregion

		#region APPENDTOSTRING

		public static int APPENDTOSTRING(this DataConnection dataConnection, ref string SOURCE, string STRING)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.APPENDTOSTRING",
				new DataParameter("SOURCE", SOURCE) { Direction = ParameterDirection.InputOutput, Size = 32672 },
				new DataParameter("STRING", STRING));

			SOURCE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SOURCE"]).Value);

			return ret;
		}

		#endregion

		#region APPEND_CLOB

		public static int APPEND_CLOB(this DataConnection dataConnection, ref string DEST_LOB, string SRC_LOB)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.APPEND_CLOB",
				new DataParameter("DEST_LOB", DEST_LOB) { Direction = ParameterDirection.InputOutput, Size = 10485760 },
				new DataParameter("SRC_LOB",  SRC_LOB));

			DEST_LOB = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DEST_LOB"]).Value);

			return ret;
		}

		#endregion

		#region ASN_ADMIN_UTIL

		public static int ASN_ADMIN_UTIL(this DataConnection dataConnection, string CMD, string CMDPARMS, string CMDOPTIONS, string DATAIN_CHAR, string DATAIN_BINARY, string CWD, string LIBPATH, string ROOTPATH, string ENV, out string DATAOUT_CHAR, out string DATAOUT_BINARY, out string RESOPTIONS, out string MESSAGES, out string TRACE, out int? ERRORAREA, out int? RC)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ASN_ADMIN_UTIL",
				new DataParameter("CMD",           CMD),
				new DataParameter("CMDPARMS",      CMDPARMS),
				new DataParameter("CMDOPTIONS",    CMDOPTIONS),
				new DataParameter("DATAIN_CHAR",   DATAIN_CHAR),
				new DataParameter("DATAIN_BINARY", DATAIN_BINARY),
				new DataParameter("CWD",           CWD),
				new DataParameter("LIBPATH",       LIBPATH),
				new DataParameter("ROOTPATH",      ROOTPATH),
				new DataParameter("ENV",           ENV));

			DATAOUT_CHAR   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DATAOUT_CHAR"]).  Value);
			DATAOUT_BINARY = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DATAOUT_BINARY"]).Value);
			RESOPTIONS     = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["RESOPTIONS"]).    Value);
			MESSAGES       = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGES"]).      Value);
			TRACE          = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["TRACE"]).         Value);
			ERRORAREA      = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["ERRORAREA"]).     Value);
			RC             = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RC"]).            Value);

			return ret;
		}

		#endregion

		#region AUDIT_ARCHIVE

		public static int AUDIT_ARCHIVE(this DataConnection dataConnection, string DIRECTORY, int? MEMBER)
		{
			return dataConnection.ExecuteProc("SYSPROC.AUDIT_ARCHIVE",
				new DataParameter("DIRECTORY", DIRECTORY),
				new DataParameter("MEMBER",    MEMBER));
		}

		#endregion

		#region AUDIT_DELIM_EXTRACT

		public static int AUDIT_DELIM_EXTRACT(this DataConnection dataConnection, char? DELIMITER, string TARGET_PATH, string SOURCE_PATH, string FILE_MASK, string EVENT_OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSPROC.AUDIT_DELIM_EXTRACT",
				new DataParameter("DELIMITER",     DELIMITER),
				new DataParameter("TARGET_PATH",   TARGET_PATH),
				new DataParameter("SOURCE_PATH",   SOURCE_PATH),
				new DataParameter("FILE_MASK",     FILE_MASK),
				new DataParameter("EVENT_OPTIONS", EVENT_OPTIONS));
		}

		#endregion

		#region AUTOMAINT_GET_POLICYFILE

		public static int AUTOMAINT_GET_POLICYFILE(this DataConnection dataConnection, string POLICY_TYPE, string POLICY_FILE_NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.AUTOMAINT_GET_POLICYFILE",
				new DataParameter("POLICY_TYPE",      POLICY_TYPE),
				new DataParameter("POLICY_FILE_NAME", POLICY_FILE_NAME));
		}

		#endregion

		#region AUTOMAINT_SET_POLICYFILE

		public static int AUTOMAINT_SET_POLICYFILE(this DataConnection dataConnection, string POLICY_TYPE, string POLICY_FILE_NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.AUTOMAINT_SET_POLICYFILE",
				new DataParameter("POLICY_TYPE",      POLICY_TYPE),
				new DataParameter("POLICY_FILE_NAME", POLICY_FILE_NAME));
		}

		#endregion

		#region BIND_VARIABLE_CLOB

		public static int BIND_VARIABLE_CLOB(this DataConnection dataConnection, int? C, string NAME, string VALUE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.BIND_VARIABLE_CLOB",
				new DataParameter("C",     C),
				new DataParameter("NAME",  NAME),
				new DataParameter("VALUE", VALUE));
		}

		#endregion

		#region BIND_VARIABLE_DATE

		public static int BIND_VARIABLE_DATE(this DataConnection dataConnection, int? C, string NAME, DateTime? VALUE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.BIND_VARIABLE_DATE",
				new DataParameter("C",     C),
				new DataParameter("NAME",  NAME),
				new DataParameter("VALUE", VALUE));
		}

		#endregion

		#region BIND_VARIABLE_DOUBLE

		public static int BIND_VARIABLE_DOUBLE(this DataConnection dataConnection, int? C, string NAME, double? VALUE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.BIND_VARIABLE_DOUBLE",
				new DataParameter("C",     C),
				new DataParameter("NAME",  NAME),
				new DataParameter("VALUE", VALUE));
		}

		#endregion

		#region BIND_VARIABLE_INT

		public static int BIND_VARIABLE_INT(this DataConnection dataConnection, int? C, string NAME, int? VALUE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.BIND_VARIABLE_INT",
				new DataParameter("C",     C),
				new DataParameter("NAME",  NAME),
				new DataParameter("VALUE", VALUE));
		}

		#endregion

		#region BIND_VARIABLE_NUMBER

		public static int BIND_VARIABLE_NUMBER(this DataConnection dataConnection, int? C, string NAME, decimal? VALUE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.BIND_VARIABLE_NUMBER",
				new DataParameter("C",     C),
				new DataParameter("NAME",  NAME),
				new DataParameter("VALUE", VALUE));
		}

		#endregion

		#region BIND_VARIABLE_TIMESTAMP

		public static int BIND_VARIABLE_TIMESTAMP(this DataConnection dataConnection, int? C, string NAME, DateTime? VALUE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.BIND_VARIABLE_TIMESTAMP",
				new DataParameter("C",     C),
				new DataParameter("NAME",  NAME),
				new DataParameter("VALUE", VALUE));
		}

		#endregion

		#region BROKEN

		public static int BROKEN(this DataConnection dataConnection, decimal? JOB, object BROKEN, DateTime? NEXT_DATE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.BROKEN",
				new DataParameter("JOB",       JOB),
				new DataParameter("BROKEN",    BROKEN),
				new DataParameter("NEXT_DATE", NEXT_DATE));
		}

		#endregion

		#region CANONICALIZE

		public static int CANONICALIZE(this DataConnection dataConnection, string NAME, out string CANON_NAME, int? CANON_LEN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.CANONICALIZE",
				new DataParameter("NAME",      NAME),
				new DataParameter("CANON_LEN", CANON_LEN));

			CANON_NAME = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["CANON_NAME"]).Value);

			return ret;
		}

		#endregion

		#region CAPTURE_STORAGEMGMT_INFO

		public static int CAPTURE_STORAGEMGMT_INFO(this DataConnection dataConnection, short? ROOTTYPE, string ROOTSCHEMA, string ROOTNAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.CAPTURE_STORAGEMGMT_INFO",
				new DataParameter("ROOTTYPE",   ROOTTYPE),
				new DataParameter("ROOTSCHEMA", ROOTSCHEMA),
				new DataParameter("ROOTNAME",   ROOTNAME));
		}

		#endregion

		#region CHANGE

		public static int CHANGE(this DataConnection dataConnection, decimal? JOB, string WHAT, DateTime? NEXT_DATE, string INTERVAL, int? INSTANCE, object FORCE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CHANGE",
				new DataParameter("JOB",       JOB),
				new DataParameter("WHAT",      WHAT),
				new DataParameter("NEXT_DATE", NEXT_DATE),
				new DataParameter("INTERVAL",  INTERVAL),
				new DataParameter("INSTANCE",  INSTANCE),
				new DataParameter("FORCE",     FORCE));
		}

		#endregion

		#region CHECK_ALERT_NAME

		public static int CHECK_ALERT_NAME(this DataConnection dataConnection, string NAME, string ROUTINENAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CHECK_ALERT_NAME",
				new DataParameter("NAME",        NAME),
				new DataParameter("ROUTINENAME", ROUTINENAME));
		}

		#endregion

		#region CHECK_DB_CSID

		public static int CHECK_DB_CSID(this DataConnection dataConnection, int? CSID, out object ISVALID)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.CHECK_DB_CSID",
				new DataParameter("CSID", CSID));

			ISVALID = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ISVALID"]).Value);

			return ret;
		}

		#endregion

		#region CLEANUP

		public static int CLEANUP(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CLEANUP");
		}

		#endregion

		#region CLOSE_CLOB

		public static int CLOSE_CLOB(this DataConnection dataConnection, string LOB_LOC)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CLOSE_CLOB",
				new DataParameter("LOB_LOC", LOB_LOC));
		}

		#endregion

		#region CLOSE_CONNECTION

		public static int CLOSE_CONNECTION(this DataConnection dataConnection, ref object C)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.CLOSE_CONNECTION",
				new DataParameter("C", C) { Direction = ParameterDirection.InputOutput });

			C = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).Value);

			return ret;
		}

		#endregion

		#region CLOSE_CURSOR

		public static int CLOSE_CURSOR(this DataConnection dataConnection, ref int? C)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.CLOSE_CURSOR",
				new DataParameter("C", C) { Direction = ParameterDirection.InputOutput, Size = 4 });

			C = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).Value);

			return ret;
		}

		#endregion

		#region COLUMN_VALUE_CLOB

		public static int COLUMN_VALUE_CLOB(this DataConnection dataConnection, int? C, int? POSITION, out string VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.COLUMN_VALUE_CLOB",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION));

			VALUE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region COLUMN_VALUE_LONG

		public static int COLUMN_VALUE_LONG(this DataConnection dataConnection, int? C, int? POSITION, int? LENGTH, int? OFFSET, out string VALUE, out int? VALUE_LENGTH)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.COLUMN_VALUE_LONG",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION),
				new DataParameter("LENGTH",   LENGTH),
				new DataParameter("OFFSET",   OFFSET));

			VALUE        = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).       Value);
			VALUE_LENGTH = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["VALUE_LENGTH"]).Value);

			return ret;
		}

		#endregion

		#region COMMA_TO_TABLE_LNAME

		public static int COMMA_TO_TABLE_LNAME(this DataConnection dataConnection, string LIST, out int? TABLEN, out object TAB)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.COMMA_TO_TABLE_LNAME",
				new DataParameter("LIST", LIST));

			TABLEN = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["TABLEN"]).Value);
			TAB    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TAB"]).   Value);

			return ret;
		}

		#endregion

		#region COMMA_TO_TABLE_UNCL

		public static int COMMA_TO_TABLE_UNCL(this DataConnection dataConnection, string LIST, out int? TABLEN, out object TAB)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.COMMA_TO_TABLE_UNCL",
				new DataParameter("LIST", LIST));

			TABLEN = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["TABLEN"]).Value);
			TAB    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TAB"]).   Value);

			return ret;
		}

		#endregion

		#region COMMONREQMETRICS

		public static int COMMONREQMETRICS(this DataConnection dataConnection, ref object REPOUTPUT, ref int? IR, object MSGCACHE, int? TIMEINTERVAL, long? WLM_QUEUE_TIME_TOTAL, long? AGENT_WAIT_TIME, long? TCPIP_RECVS_TOTAL, long? TCPIP_SENDS_TOTAL, long? IPC_RECVS_TOTAL, long? IPC_SENDS_TOTAL, long? TCPIP_SEND_WAIT_TIME, long? TCPIP_RECV_WAIT_TIME, long? IPC_SEND_WAIT_TIME, long? IPC_RECV_WAIT_TIME, long? TCPIP_RECV_VOLUME, long? IPC_RECV_VOLUME, long? TCPIP_SEND_VOLUME, long? IPC_SEND_VOLUME, long? LOCK_ESCALS, long? LOCK_WAITS, long? LOCK_TIMEOUTS, long? DEADLOCKS, long? ACT_COMPLETED_TOTAL, long? ACT_ABORTED_TOTAL, long? ACT_REJECTED_TOTAL, long? APP_RQSTS_COMPLETED_TOTAL, long? TOTAL_RQST_TIME, long? TOTAL_CPU_TIME, long? TOTAL_WAIT_TIME, long? TOTAL_ACT_TIME, long? TOTAL_ACT_WAIT_TIME, long? ROWS_READ, long? ROWS_RETURNED, long? ROWS_MODIFIED, long? POOL_DATA_L_READS, long? POOL_INDEX_L_READS, long? POOL_TEMP_DATA_L_READS, long? POOL_TEMP_INDEX_L_READS, long? POOL_TEMP_XDA_L_READS, long? POOL_XDA_L_READS, long? POOL_DATA_P_READS, long? POOL_INDEX_P_READS, long? POOL_TEMP_DATA_P_READS, long? POOL_TEMP_INDEX_P_READS, long? POOL_TEMP_XDA_P_READS, long? POOL_XDA_P_READS, long? POOL_READ_TIME, long? POOL_WRITE_TIME, long? POOL_DATA_WRITES, long? POOL_INDEX_WRITES, long? POOL_XDA_WRITES, long? DIRECT_READ_TIME, long? DIRECT_READS, long? DIRECT_READ_REQS, long? DIRECT_WRITE_TIME, long? DIRECT_WRITES, long? DIRECT_WRITE_REQS, long? LOG_DISK_WAIT_TIME, long? LOG_DISK_WAITS_TOTAL, long? NUM_LOG_BUFFER_FULL, long? CLIENT_IDLE_WAIT_TIME, long? LOCK_WAIT_TIME, long? FCM_SEND_WAIT_TIME, long? TOTAL_SORTS, long? SORT_OVERFLOWS, long? POST_THRESHOLD_SORTS, long? POST_SHRTHRESHOLD_SORTS, long? FCM_SEND_VOLUME, long? FCM_SENDS_TOTAL, long? FCM_RECV_VOLUME, long? FCM_RECVS_TOTAL, long? WLM_QUEUE_ASSIGNMENTS_TOTAL, long? FCM_RECV_WAIT_TIME, long? TOTAL_SECTION_PROC_TIME, long? TOTAL_SECTION_SORT_PROC_TIME, long? TOTAL_COMPILE_PROC_TIME, long? TOTAL_IMPLICIT_COMPILE_PROC_TIME, long? TOTAL_COMMIT_PROC_TIME, long? TOTAL_ROLLBACK_PROC_TIME, long? TOTAL_RUNSTATS_PROC_TIME, long? TOTAL_REORG_PROC_TIME, long? TOTAL_LOAD_PROC_TIME, long? TOTAL_APP_COMMITS, long? TOTAL_ROUTINE_INVOCATIONS, long? TOTAL_ROUTINE_TIME, long? TOTAL_COMPILATIONS, long? PKG_CACHE_INSERTS, long? PKG_CACHE_LOOKUPS, long? CAT_CACHE_INSERTS, long? CAT_CACHE_LOOKUPS, long? INT_COMMITS, long? TOTAL_APP_ROLLBACKS, long? INT_ROLLBACKS, long? TOTAL_RUNSTATS, long? TOTAL_REORGS, long? TOTAL_LOADS, long? CF_WAIT_TIME, long? RECLAIM_WAIT_TIME, long? SPACEMAPPAGE_RECLAIM_WAIT_TIME, long? POOL_DATA_GBP_L_READS, long? POOL_DATA_GBP_P_READS, long? POOL_INDEX_GBP_L_READS, long? POOL_INDEX_GBP_P_READS, long? POOL_DATA_LBP_PAGES_FOUND, long? POOL_INDEX_LBP_PAGES_FOUND, long? POOL_ASYNC_DATA_LBP_PAGES_FOUND, long? POOL_ASYNC_INDEX_LBP_PAGES_FOUND, long? POOL_XDA_GBP_L_READS, long? POOL_XDA_GBP_P_READS, long? POOL_XDA_LBP_PAGES_FOUND, long? POOL_ASYNC_XDA_LBP_PAGES_FOUND)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.COMMONREQMETRICS",
				new DataParameter("REPOUTPUT",                        REPOUTPUT)                        { Direction = ParameterDirection.InputOutput },
				new DataParameter("IR",                               IR)                               { Direction = ParameterDirection.InputOutput, Size = 4 },
				new DataParameter("MSGCACHE",                         MSGCACHE),
				new DataParameter("TIMEINTERVAL",                     TIMEINTERVAL),
				new DataParameter("WLM_QUEUE_TIME_TOTAL",             WLM_QUEUE_TIME_TOTAL),
				new DataParameter("AGENT_WAIT_TIME",                  AGENT_WAIT_TIME),
				new DataParameter("TCPIP_RECVS_TOTAL",                TCPIP_RECVS_TOTAL),
				new DataParameter("TCPIP_SENDS_TOTAL",                TCPIP_SENDS_TOTAL),
				new DataParameter("IPC_RECVS_TOTAL",                  IPC_RECVS_TOTAL),
				new DataParameter("IPC_SENDS_TOTAL",                  IPC_SENDS_TOTAL),
				new DataParameter("TCPIP_SEND_WAIT_TIME",             TCPIP_SEND_WAIT_TIME),
				new DataParameter("TCPIP_RECV_WAIT_TIME",             TCPIP_RECV_WAIT_TIME),
				new DataParameter("IPC_SEND_WAIT_TIME",               IPC_SEND_WAIT_TIME),
				new DataParameter("IPC_RECV_WAIT_TIME",               IPC_RECV_WAIT_TIME),
				new DataParameter("TCPIP_RECV_VOLUME",                TCPIP_RECV_VOLUME),
				new DataParameter("IPC_RECV_VOLUME",                  IPC_RECV_VOLUME),
				new DataParameter("TCPIP_SEND_VOLUME",                TCPIP_SEND_VOLUME),
				new DataParameter("IPC_SEND_VOLUME",                  IPC_SEND_VOLUME),
				new DataParameter("LOCK_ESCALS",                      LOCK_ESCALS),
				new DataParameter("LOCK_WAITS",                       LOCK_WAITS),
				new DataParameter("LOCK_TIMEOUTS",                    LOCK_TIMEOUTS),
				new DataParameter("DEADLOCKS",                        DEADLOCKS),
				new DataParameter("ACT_COMPLETED_TOTAL",              ACT_COMPLETED_TOTAL),
				new DataParameter("ACT_ABORTED_TOTAL",                ACT_ABORTED_TOTAL),
				new DataParameter("ACT_REJECTED_TOTAL",               ACT_REJECTED_TOTAL),
				new DataParameter("APP_RQSTS_COMPLETED_TOTAL",        APP_RQSTS_COMPLETED_TOTAL),
				new DataParameter("TOTAL_RQST_TIME",                  TOTAL_RQST_TIME),
				new DataParameter("TOTAL_CPU_TIME",                   TOTAL_CPU_TIME),
				new DataParameter("TOTAL_WAIT_TIME",                  TOTAL_WAIT_TIME),
				new DataParameter("TOTAL_ACT_TIME",                   TOTAL_ACT_TIME),
				new DataParameter("TOTAL_ACT_WAIT_TIME",              TOTAL_ACT_WAIT_TIME),
				new DataParameter("ROWS_READ",                        ROWS_READ),
				new DataParameter("ROWS_RETURNED",                    ROWS_RETURNED),
				new DataParameter("ROWS_MODIFIED",                    ROWS_MODIFIED),
				new DataParameter("POOL_DATA_L_READS",                POOL_DATA_L_READS),
				new DataParameter("POOL_INDEX_L_READS",               POOL_INDEX_L_READS),
				new DataParameter("POOL_TEMP_DATA_L_READS",           POOL_TEMP_DATA_L_READS),
				new DataParameter("POOL_TEMP_INDEX_L_READS",          POOL_TEMP_INDEX_L_READS),
				new DataParameter("POOL_TEMP_XDA_L_READS",            POOL_TEMP_XDA_L_READS),
				new DataParameter("POOL_XDA_L_READS",                 POOL_XDA_L_READS),
				new DataParameter("POOL_DATA_P_READS",                POOL_DATA_P_READS),
				new DataParameter("POOL_INDEX_P_READS",               POOL_INDEX_P_READS),
				new DataParameter("POOL_TEMP_DATA_P_READS",           POOL_TEMP_DATA_P_READS),
				new DataParameter("POOL_TEMP_INDEX_P_READS",          POOL_TEMP_INDEX_P_READS),
				new DataParameter("POOL_TEMP_XDA_P_READS",            POOL_TEMP_XDA_P_READS),
				new DataParameter("POOL_XDA_P_READS",                 POOL_XDA_P_READS),
				new DataParameter("POOL_READ_TIME",                   POOL_READ_TIME),
				new DataParameter("POOL_WRITE_TIME",                  POOL_WRITE_TIME),
				new DataParameter("POOL_DATA_WRITES",                 POOL_DATA_WRITES),
				new DataParameter("POOL_INDEX_WRITES",                POOL_INDEX_WRITES),
				new DataParameter("POOL_XDA_WRITES",                  POOL_XDA_WRITES),
				new DataParameter("DIRECT_READ_TIME",                 DIRECT_READ_TIME),
				new DataParameter("DIRECT_READS",                     DIRECT_READS),
				new DataParameter("DIRECT_READ_REQS",                 DIRECT_READ_REQS),
				new DataParameter("DIRECT_WRITE_TIME",                DIRECT_WRITE_TIME),
				new DataParameter("DIRECT_WRITES",                    DIRECT_WRITES),
				new DataParameter("DIRECT_WRITE_REQS",                DIRECT_WRITE_REQS),
				new DataParameter("LOG_DISK_WAIT_TIME",               LOG_DISK_WAIT_TIME),
				new DataParameter("LOG_DISK_WAITS_TOTAL",             LOG_DISK_WAITS_TOTAL),
				new DataParameter("NUM_LOG_BUFFER_FULL",              NUM_LOG_BUFFER_FULL),
				new DataParameter("CLIENT_IDLE_WAIT_TIME",            CLIENT_IDLE_WAIT_TIME),
				new DataParameter("LOCK_WAIT_TIME",                   LOCK_WAIT_TIME),
				new DataParameter("FCM_SEND_WAIT_TIME",               FCM_SEND_WAIT_TIME),
				new DataParameter("TOTAL_SORTS",                      TOTAL_SORTS),
				new DataParameter("SORT_OVERFLOWS",                   SORT_OVERFLOWS),
				new DataParameter("POST_THRESHOLD_SORTS",             POST_THRESHOLD_SORTS),
				new DataParameter("POST_SHRTHRESHOLD_SORTS",          POST_SHRTHRESHOLD_SORTS),
				new DataParameter("FCM_SEND_VOLUME",                  FCM_SEND_VOLUME),
				new DataParameter("FCM_SENDS_TOTAL",                  FCM_SENDS_TOTAL),
				new DataParameter("FCM_RECV_VOLUME",                  FCM_RECV_VOLUME),
				new DataParameter("FCM_RECVS_TOTAL",                  FCM_RECVS_TOTAL),
				new DataParameter("WLM_QUEUE_ASSIGNMENTS_TOTAL",      WLM_QUEUE_ASSIGNMENTS_TOTAL),
				new DataParameter("FCM_RECV_WAIT_TIME",               FCM_RECV_WAIT_TIME),
				new DataParameter("TOTAL_SECTION_PROC_TIME",          TOTAL_SECTION_PROC_TIME),
				new DataParameter("TOTAL_SECTION_SORT_PROC_TIME",     TOTAL_SECTION_SORT_PROC_TIME),
				new DataParameter("TOTAL_COMPILE_PROC_TIME",          TOTAL_COMPILE_PROC_TIME),
				new DataParameter("TOTAL_IMPLICIT_COMPILE_PROC_TIME", TOTAL_IMPLICIT_COMPILE_PROC_TIME),
				new DataParameter("TOTAL_COMMIT_PROC_TIME",           TOTAL_COMMIT_PROC_TIME),
				new DataParameter("TOTAL_ROLLBACK_PROC_TIME",         TOTAL_ROLLBACK_PROC_TIME),
				new DataParameter("TOTAL_RUNSTATS_PROC_TIME",         TOTAL_RUNSTATS_PROC_TIME),
				new DataParameter("TOTAL_REORG_PROC_TIME",            TOTAL_REORG_PROC_TIME),
				new DataParameter("TOTAL_LOAD_PROC_TIME",             TOTAL_LOAD_PROC_TIME),
				new DataParameter("TOTAL_APP_COMMITS",                TOTAL_APP_COMMITS),
				new DataParameter("TOTAL_ROUTINE_INVOCATIONS",        TOTAL_ROUTINE_INVOCATIONS),
				new DataParameter("TOTAL_ROUTINE_TIME",               TOTAL_ROUTINE_TIME),
				new DataParameter("TOTAL_COMPILATIONS",               TOTAL_COMPILATIONS),
				new DataParameter("PKG_CACHE_INSERTS",                PKG_CACHE_INSERTS),
				new DataParameter("PKG_CACHE_LOOKUPS",                PKG_CACHE_LOOKUPS),
				new DataParameter("CAT_CACHE_INSERTS",                CAT_CACHE_INSERTS),
				new DataParameter("CAT_CACHE_LOOKUPS",                CAT_CACHE_LOOKUPS),
				new DataParameter("INT_COMMITS",                      INT_COMMITS),
				new DataParameter("TOTAL_APP_ROLLBACKS",              TOTAL_APP_ROLLBACKS),
				new DataParameter("INT_ROLLBACKS",                    INT_ROLLBACKS),
				new DataParameter("TOTAL_RUNSTATS",                   TOTAL_RUNSTATS),
				new DataParameter("TOTAL_REORGS",                     TOTAL_REORGS),
				new DataParameter("TOTAL_LOADS",                      TOTAL_LOADS),
				new DataParameter("CF_WAIT_TIME",                     CF_WAIT_TIME),
				new DataParameter("RECLAIM_WAIT_TIME",                RECLAIM_WAIT_TIME),
				new DataParameter("SPACEMAPPAGE_RECLAIM_WAIT_TIME",   SPACEMAPPAGE_RECLAIM_WAIT_TIME),
				new DataParameter("POOL_DATA_GBP_L_READS",            POOL_DATA_GBP_L_READS),
				new DataParameter("POOL_DATA_GBP_P_READS",            POOL_DATA_GBP_P_READS),
				new DataParameter("POOL_INDEX_GBP_L_READS",           POOL_INDEX_GBP_L_READS),
				new DataParameter("POOL_INDEX_GBP_P_READS",           POOL_INDEX_GBP_P_READS),
				new DataParameter("POOL_DATA_LBP_PAGES_FOUND",        POOL_DATA_LBP_PAGES_FOUND),
				new DataParameter("POOL_INDEX_LBP_PAGES_FOUND",       POOL_INDEX_LBP_PAGES_FOUND),
				new DataParameter("POOL_ASYNC_DATA_LBP_PAGES_FOUND",  POOL_ASYNC_DATA_LBP_PAGES_FOUND),
				new DataParameter("POOL_ASYNC_INDEX_LBP_PAGES_FOUND", POOL_ASYNC_INDEX_LBP_PAGES_FOUND),
				new DataParameter("POOL_XDA_GBP_L_READS",             POOL_XDA_GBP_L_READS),
				new DataParameter("POOL_XDA_GBP_P_READS",             POOL_XDA_GBP_P_READS),
				new DataParameter("POOL_XDA_LBP_PAGES_FOUND",         POOL_XDA_LBP_PAGES_FOUND),
				new DataParameter("POOL_ASYNC_XDA_LBP_PAGES_FOUND",   POOL_ASYNC_XDA_LBP_PAGES_FOUND));

			REPOUTPUT = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["REPOUTPUT"]).Value);
			IR        = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["IR"]).       Value);

			return ret;
		}

		#endregion

		#region COMPILE_SCHEMA

		public static int COMPILE_SCHEMA(this DataConnection dataConnection, string SCHEMA, object COMPILE_ALL, object REUSE_SETTINGS)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.COMPILE_SCHEMA",
				new DataParameter("SCHEMA",         SCHEMA),
				new DataParameter("COMPILE_ALL",    COMPILE_ALL),
				new DataParameter("REUSE_SETTINGS", REUSE_SETTINGS));
		}

		#endregion

		#region CONNDELTAS

		public static int CONNDELTAS(this DataConnection dataConnection, int? TIMEINTERVAL, long? APP_HANDLE, int? DBMEMBER, ref object APPLICATION_HANDLE_ARRAY, ref object APPLICATION_NAME_ARRAY, ref object APPLICATION_ID_ARRAY, ref object SYSTEM_AUTH_ID_ARRAY, ref object SESSION_AUTH_ID_ARRAY, ref object CLIENT_ACCTNG_ARRAY, ref object CLIENT_USERID_ARRAY, ref object CLIENT_APPLNAME_ARRAY, ref object CLIENT_WRKSTNNAME_ARRAY, ref object CLIENT_PID_ARRAY, ref object CLIENT_PRDID_ARRAY, ref object CLIENT_PLATFORM_ARRAY, ref object CLIENT_PROTOCOL_ARRAY, ref object CONNECTION_START_TIME_ARRAY, ref object NUM_LOCKS_HELD_ARRAY, ref object WLM_QUEUE_TIME_TOTAL_ARRAY, ref object AGENT_WAIT_TIME_ARRAY, ref object TCPIP_RECVS_TOTAL_ARRAY, ref object TCPIP_SENDS_TOTAL_ARRAY, ref object IPC_RECVS_TOTAL_ARRAY, ref object IPC_SENDS_TOTAL_ARRAY, ref object TCPIP_SEND_WAIT_TIME_ARRAY, ref object TCPIP_RECV_WAIT_TIME_ARRAY, ref object IPC_SEND_WAIT_TIME_ARRAY, ref object IPC_RECV_WAIT_TIME_ARRAY, ref object TCPIP_RECV_VOLUME_ARRAY, ref object IPC_RECV_VOLUME_ARRAY, ref object TCPIP_SEND_VOLUME_ARRAY, ref object IPC_SEND_VOLUME_ARRAY, ref object LOCK_ESCALS_ARRAY, ref object LOCK_WAITS_ARRAY, ref object LOCK_TIMEOUTS_ARRAY, ref object DEADLOCKS_ARRAY, ref object ACT_COMPLETED_TOTAL_ARRAY, ref object ACT_ABORTED_TOTAL_ARRAY, ref object ACT_REJECTED_TOTAL_ARRAY, ref object APP_RQSTS_COMPLETED_TOTAL_ARRAY, ref object TOTAL_RQST_TIME_ARRAY, ref object TOTAL_CPU_TIME_ARRAY, ref object TOTAL_WAIT_TIME_ARRAY, ref object TOTAL_ACT_TIME_ARRAY, ref object TOTAL_ACT_WAIT_TIME_ARRAY, ref object ROWS_READ_ARRAY, ref object ROWS_RETURNED_ARRAY, ref object ROWS_MODIFIED_ARRAY, ref object POOL_DATA_L_READS_ARRAY, ref object POOL_INDEX_L_READS_ARRAY, ref object POOL_TEMP_DATA_L_READS_ARRAY, ref object POOL_TEMP_INDEX_L_READS_ARRAY, ref object POOL_TEMP_XDA_L_READS_ARRAY, ref object POOL_XDA_L_READS_ARRAY, ref object POOL_DATA_P_READS_ARRAY, ref object POOL_INDEX_P_READS_ARRAY, ref object POOL_TEMP_DATA_P_READS_ARRAY, ref object POOL_TEMP_INDEX_P_READS_ARRAY, ref object POOL_TEMP_XDA_P_READS_ARRAY, ref object POOL_XDA_P_READS_ARRAY, ref object POOL_READ_TIME_ARRAY, ref object POOL_WRITE_TIME_ARRAY, ref object POOL_DATA_WRITES_ARRAY, ref object POOL_INDEX_WRITES_ARRAY, ref object POOL_XDA_WRITES_ARRAY, ref object DIRECT_READ_TIME_ARRAY, ref object DIRECT_READS_ARRAY, ref object DIRECT_READ_REQS_ARRAY, ref object DIRECT_WRITE_TIME_ARRAY, ref object DIRECT_WRITES_ARRAY, ref object DIRECT_WRITE_REQS_ARRAY, ref object LOG_DISK_WAIT_TIME_ARRAY, ref object LOG_DISK_WAITS_TOTAL_ARRAY, ref object NUM_LOG_BUFFER_FULL_ARRAY, ref object CLIENT_IDLE_WAIT_TIME_ARRAY, ref object LOCK_WAIT_TIME_ARRAY, ref object FCM_SEND_WAIT_TIME_ARRAY, ref object TOTAL_SORTS_ARRAY, ref object SORT_OVERFLOWS_ARRAY, ref object POST_THRESHOLD_SORTS_ARRAY, ref object POST_SHRTHRESHOLD_SORTS_ARRAY, ref object FCM_SEND_VOLUME_ARRAY, ref object FCM_SENDS_TOTAL_ARRAY, ref object FCM_RECV_VOLUME_ARRAY, ref object FCM_RECVS_TOTAL_ARRAY, ref object WLM_QUEUE_ASSIGNMENTS_TOTAL_ARRAY, ref object FCM_RECV_WAIT_TIME_ARRAY, ref object TOTAL_SECTION_PROC_TIME_ARRAY, ref object TOTAL_SECTION_SORT_PROC_TIME_ARRAY, ref object TOTAL_COMPILE_PROC_TIME_ARRAY, ref object TOTAL_IMPLICIT_COMPILE_PROC_TIME_ARRAY, ref object TOTAL_COMMIT_PROC_TIME_ARRAY, ref object TOTAL_ROLLBACK_PROC_TIME_ARRAY, ref object TOTAL_RUNSTATS_PROC_TIME_ARRAY, ref object TOTAL_REORG_PROC_TIME_ARRAY, ref object TOTAL_LOAD_PROC_TIME_ARRAY, ref object TOTAL_APP_COMMITS_ARRAY, ref object TOTAL_ROUTINE_INVOCATIONS_ARRAY, ref object TOTAL_ROUTINE_TIME_ARRAY, ref object TOTAL_COMPILATIONS_ARRAY, ref object PKG_CACHE_INSERTS_ARRAY, ref object PKG_CACHE_LOOKUPS_ARRAY, ref object CAT_CACHE_INSERTS_ARRAY, ref object CAT_CACHE_LOOKUPS_ARRAY, ref object INT_COMMITS_ARRAY, ref object TOTAL_APP_ROLLBACKS_ARRAY, ref object INT_ROLLBACKS_ARRAY, ref object TOTAL_RUNSTATS_ARRAY, ref object TOTAL_REORGS_ARRAY, ref object TOTAL_LOADS_ARRAY, ref object CF_WAIT_TIME_ARRAY, ref object RECLAIM_WAIT_TIME_ARRAY, ref object SPACEMAPPAGE_RECLAIM_WAIT_TIME_ARRAY, ref object POOL_DATA_GBP_L_READS_ARRAY, ref object POOL_DATA_GBP_P_READS_ARRAY, ref object POOL_INDEX_GBP_L_READS_ARRAY, ref object POOL_INDEX_GBP_P_READS_ARRAY, ref object POOL_DATA_LBP_PAGES_FOUND_ARRAY, ref object POOL_INDEX_LBP_PAGES_FOUND_ARRAY, ref object POOL_XDA_GBP_L_READS_ARRAY, ref object POOL_XDA_GBP_P_READS_ARRAY, ref object POOL_XDA_LBP_PAGES_FOUND_ARRAY)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.CONNDELTAS",
				new DataParameter("TIMEINTERVAL",                           TIMEINTERVAL),
				new DataParameter("APP_HANDLE",                             APP_HANDLE),
				new DataParameter("DBMEMBER",                               DBMEMBER),
				new DataParameter("APPLICATION_HANDLE_ARRAY",               APPLICATION_HANDLE_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("APPLICATION_NAME_ARRAY",                 APPLICATION_NAME_ARRAY)                 { Direction = ParameterDirection.InputOutput },
				new DataParameter("APPLICATION_ID_ARRAY",                   APPLICATION_ID_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("SYSTEM_AUTH_ID_ARRAY",                   SYSTEM_AUTH_ID_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("SESSION_AUTH_ID_ARRAY",                  SESSION_AUTH_ID_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_ACCTNG_ARRAY",                    CLIENT_ACCTNG_ARRAY)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_USERID_ARRAY",                    CLIENT_USERID_ARRAY)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_APPLNAME_ARRAY",                  CLIENT_APPLNAME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_WRKSTNNAME_ARRAY",                CLIENT_WRKSTNNAME_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_PID_ARRAY",                       CLIENT_PID_ARRAY)                       { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_PRDID_ARRAY",                     CLIENT_PRDID_ARRAY)                     { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_PLATFORM_ARRAY",                  CLIENT_PLATFORM_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_PROTOCOL_ARRAY",                  CLIENT_PROTOCOL_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("CONNECTION_START_TIME_ARRAY",            CONNECTION_START_TIME_ARRAY)            { Direction = ParameterDirection.InputOutput },
				new DataParameter("NUM_LOCKS_HELD_ARRAY",                   NUM_LOCKS_HELD_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("WLM_QUEUE_TIME_TOTAL_ARRAY",             WLM_QUEUE_TIME_TOTAL_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("AGENT_WAIT_TIME_ARRAY",                  AGENT_WAIT_TIME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("TCPIP_RECVS_TOTAL_ARRAY",                TCPIP_RECVS_TOTAL_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("TCPIP_SENDS_TOTAL_ARRAY",                TCPIP_SENDS_TOTAL_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("IPC_RECVS_TOTAL_ARRAY",                  IPC_RECVS_TOTAL_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("IPC_SENDS_TOTAL_ARRAY",                  IPC_SENDS_TOTAL_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("TCPIP_SEND_WAIT_TIME_ARRAY",             TCPIP_SEND_WAIT_TIME_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("TCPIP_RECV_WAIT_TIME_ARRAY",             TCPIP_RECV_WAIT_TIME_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("IPC_SEND_WAIT_TIME_ARRAY",               IPC_SEND_WAIT_TIME_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("IPC_RECV_WAIT_TIME_ARRAY",               IPC_RECV_WAIT_TIME_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("TCPIP_RECV_VOLUME_ARRAY",                TCPIP_RECV_VOLUME_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("IPC_RECV_VOLUME_ARRAY",                  IPC_RECV_VOLUME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("TCPIP_SEND_VOLUME_ARRAY",                TCPIP_SEND_VOLUME_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("IPC_SEND_VOLUME_ARRAY",                  IPC_SEND_VOLUME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("LOCK_ESCALS_ARRAY",                      LOCK_ESCALS_ARRAY)                      { Direction = ParameterDirection.InputOutput },
				new DataParameter("LOCK_WAITS_ARRAY",                       LOCK_WAITS_ARRAY)                       { Direction = ParameterDirection.InputOutput },
				new DataParameter("LOCK_TIMEOUTS_ARRAY",                    LOCK_TIMEOUTS_ARRAY)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("DEADLOCKS_ARRAY",                        DEADLOCKS_ARRAY)                        { Direction = ParameterDirection.InputOutput },
				new DataParameter("ACT_COMPLETED_TOTAL_ARRAY",              ACT_COMPLETED_TOTAL_ARRAY)              { Direction = ParameterDirection.InputOutput },
				new DataParameter("ACT_ABORTED_TOTAL_ARRAY",                ACT_ABORTED_TOTAL_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("ACT_REJECTED_TOTAL_ARRAY",               ACT_REJECTED_TOTAL_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("APP_RQSTS_COMPLETED_TOTAL_ARRAY",        APP_RQSTS_COMPLETED_TOTAL_ARRAY)        { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_RQST_TIME_ARRAY",                  TOTAL_RQST_TIME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_CPU_TIME_ARRAY",                   TOTAL_CPU_TIME_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_WAIT_TIME_ARRAY",                  TOTAL_WAIT_TIME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_ACT_TIME_ARRAY",                   TOTAL_ACT_TIME_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_ACT_WAIT_TIME_ARRAY",              TOTAL_ACT_WAIT_TIME_ARRAY)              { Direction = ParameterDirection.InputOutput },
				new DataParameter("ROWS_READ_ARRAY",                        ROWS_READ_ARRAY)                        { Direction = ParameterDirection.InputOutput },
				new DataParameter("ROWS_RETURNED_ARRAY",                    ROWS_RETURNED_ARRAY)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("ROWS_MODIFIED_ARRAY",                    ROWS_MODIFIED_ARRAY)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_DATA_L_READS_ARRAY",                POOL_DATA_L_READS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_INDEX_L_READS_ARRAY",               POOL_INDEX_L_READS_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_TEMP_DATA_L_READS_ARRAY",           POOL_TEMP_DATA_L_READS_ARRAY)           { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_TEMP_INDEX_L_READS_ARRAY",          POOL_TEMP_INDEX_L_READS_ARRAY)          { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_TEMP_XDA_L_READS_ARRAY",            POOL_TEMP_XDA_L_READS_ARRAY)            { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_XDA_L_READS_ARRAY",                 POOL_XDA_L_READS_ARRAY)                 { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_DATA_P_READS_ARRAY",                POOL_DATA_P_READS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_INDEX_P_READS_ARRAY",               POOL_INDEX_P_READS_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_TEMP_DATA_P_READS_ARRAY",           POOL_TEMP_DATA_P_READS_ARRAY)           { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_TEMP_INDEX_P_READS_ARRAY",          POOL_TEMP_INDEX_P_READS_ARRAY)          { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_TEMP_XDA_P_READS_ARRAY",            POOL_TEMP_XDA_P_READS_ARRAY)            { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_XDA_P_READS_ARRAY",                 POOL_XDA_P_READS_ARRAY)                 { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_READ_TIME_ARRAY",                   POOL_READ_TIME_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_WRITE_TIME_ARRAY",                  POOL_WRITE_TIME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_DATA_WRITES_ARRAY",                 POOL_DATA_WRITES_ARRAY)                 { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_INDEX_WRITES_ARRAY",                POOL_INDEX_WRITES_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_XDA_WRITES_ARRAY",                  POOL_XDA_WRITES_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("DIRECT_READ_TIME_ARRAY",                 DIRECT_READ_TIME_ARRAY)                 { Direction = ParameterDirection.InputOutput },
				new DataParameter("DIRECT_READS_ARRAY",                     DIRECT_READS_ARRAY)                     { Direction = ParameterDirection.InputOutput },
				new DataParameter("DIRECT_READ_REQS_ARRAY",                 DIRECT_READ_REQS_ARRAY)                 { Direction = ParameterDirection.InputOutput },
				new DataParameter("DIRECT_WRITE_TIME_ARRAY",                DIRECT_WRITE_TIME_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("DIRECT_WRITES_ARRAY",                    DIRECT_WRITES_ARRAY)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("DIRECT_WRITE_REQS_ARRAY",                DIRECT_WRITE_REQS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("LOG_DISK_WAIT_TIME_ARRAY",               LOG_DISK_WAIT_TIME_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("LOG_DISK_WAITS_TOTAL_ARRAY",             LOG_DISK_WAITS_TOTAL_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("NUM_LOG_BUFFER_FULL_ARRAY",              NUM_LOG_BUFFER_FULL_ARRAY)              { Direction = ParameterDirection.InputOutput },
				new DataParameter("CLIENT_IDLE_WAIT_TIME_ARRAY",            CLIENT_IDLE_WAIT_TIME_ARRAY)            { Direction = ParameterDirection.InputOutput },
				new DataParameter("LOCK_WAIT_TIME_ARRAY",                   LOCK_WAIT_TIME_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("FCM_SEND_WAIT_TIME_ARRAY",               FCM_SEND_WAIT_TIME_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_SORTS_ARRAY",                      TOTAL_SORTS_ARRAY)                      { Direction = ParameterDirection.InputOutput },
				new DataParameter("SORT_OVERFLOWS_ARRAY",                   SORT_OVERFLOWS_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("POST_THRESHOLD_SORTS_ARRAY",             POST_THRESHOLD_SORTS_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("POST_SHRTHRESHOLD_SORTS_ARRAY",          POST_SHRTHRESHOLD_SORTS_ARRAY)          { Direction = ParameterDirection.InputOutput },
				new DataParameter("FCM_SEND_VOLUME_ARRAY",                  FCM_SEND_VOLUME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("FCM_SENDS_TOTAL_ARRAY",                  FCM_SENDS_TOTAL_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("FCM_RECV_VOLUME_ARRAY",                  FCM_RECV_VOLUME_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("FCM_RECVS_TOTAL_ARRAY",                  FCM_RECVS_TOTAL_ARRAY)                  { Direction = ParameterDirection.InputOutput },
				new DataParameter("WLM_QUEUE_ASSIGNMENTS_TOTAL_ARRAY",      WLM_QUEUE_ASSIGNMENTS_TOTAL_ARRAY)      { Direction = ParameterDirection.InputOutput },
				new DataParameter("FCM_RECV_WAIT_TIME_ARRAY",               FCM_RECV_WAIT_TIME_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_SECTION_PROC_TIME_ARRAY",          TOTAL_SECTION_PROC_TIME_ARRAY)          { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_SECTION_SORT_PROC_TIME_ARRAY",     TOTAL_SECTION_SORT_PROC_TIME_ARRAY)     { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_COMPILE_PROC_TIME_ARRAY",          TOTAL_COMPILE_PROC_TIME_ARRAY)          { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_IMPLICIT_COMPILE_PROC_TIME_ARRAY", TOTAL_IMPLICIT_COMPILE_PROC_TIME_ARRAY) { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_COMMIT_PROC_TIME_ARRAY",           TOTAL_COMMIT_PROC_TIME_ARRAY)           { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_ROLLBACK_PROC_TIME_ARRAY",         TOTAL_ROLLBACK_PROC_TIME_ARRAY)         { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_RUNSTATS_PROC_TIME_ARRAY",         TOTAL_RUNSTATS_PROC_TIME_ARRAY)         { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_REORG_PROC_TIME_ARRAY",            TOTAL_REORG_PROC_TIME_ARRAY)            { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_LOAD_PROC_TIME_ARRAY",             TOTAL_LOAD_PROC_TIME_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_APP_COMMITS_ARRAY",                TOTAL_APP_COMMITS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_ROUTINE_INVOCATIONS_ARRAY",        TOTAL_ROUTINE_INVOCATIONS_ARRAY)        { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_ROUTINE_TIME_ARRAY",               TOTAL_ROUTINE_TIME_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_COMPILATIONS_ARRAY",               TOTAL_COMPILATIONS_ARRAY)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("PKG_CACHE_INSERTS_ARRAY",                PKG_CACHE_INSERTS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("PKG_CACHE_LOOKUPS_ARRAY",                PKG_CACHE_LOOKUPS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("CAT_CACHE_INSERTS_ARRAY",                CAT_CACHE_INSERTS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("CAT_CACHE_LOOKUPS_ARRAY",                CAT_CACHE_LOOKUPS_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("INT_COMMITS_ARRAY",                      INT_COMMITS_ARRAY)                      { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_APP_ROLLBACKS_ARRAY",              TOTAL_APP_ROLLBACKS_ARRAY)              { Direction = ParameterDirection.InputOutput },
				new DataParameter("INT_ROLLBACKS_ARRAY",                    INT_ROLLBACKS_ARRAY)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_RUNSTATS_ARRAY",                   TOTAL_RUNSTATS_ARRAY)                   { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_REORGS_ARRAY",                     TOTAL_REORGS_ARRAY)                     { Direction = ParameterDirection.InputOutput },
				new DataParameter("TOTAL_LOADS_ARRAY",                      TOTAL_LOADS_ARRAY)                      { Direction = ParameterDirection.InputOutput },
				new DataParameter("CF_WAIT_TIME_ARRAY",                     CF_WAIT_TIME_ARRAY)                     { Direction = ParameterDirection.InputOutput },
				new DataParameter("RECLAIM_WAIT_TIME_ARRAY",                RECLAIM_WAIT_TIME_ARRAY)                { Direction = ParameterDirection.InputOutput },
				new DataParameter("SPACEMAPPAGE_RECLAIM_WAIT_TIME_ARRAY",   SPACEMAPPAGE_RECLAIM_WAIT_TIME_ARRAY)   { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_DATA_GBP_L_READS_ARRAY",            POOL_DATA_GBP_L_READS_ARRAY)            { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_DATA_GBP_P_READS_ARRAY",            POOL_DATA_GBP_P_READS_ARRAY)            { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_INDEX_GBP_L_READS_ARRAY",           POOL_INDEX_GBP_L_READS_ARRAY)           { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_INDEX_GBP_P_READS_ARRAY",           POOL_INDEX_GBP_P_READS_ARRAY)           { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_DATA_LBP_PAGES_FOUND_ARRAY",        POOL_DATA_LBP_PAGES_FOUND_ARRAY)        { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_INDEX_LBP_PAGES_FOUND_ARRAY",       POOL_INDEX_LBP_PAGES_FOUND_ARRAY)       { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_XDA_GBP_L_READS_ARRAY",             POOL_XDA_GBP_L_READS_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_XDA_GBP_P_READS_ARRAY",             POOL_XDA_GBP_P_READS_ARRAY)             { Direction = ParameterDirection.InputOutput },
				new DataParameter("POOL_XDA_LBP_PAGES_FOUND_ARRAY",         POOL_XDA_LBP_PAGES_FOUND_ARRAY)         { Direction = ParameterDirection.InputOutput });

			APPLICATION_HANDLE_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["APPLICATION_HANDLE_ARRAY"]).              Value);
			APPLICATION_NAME_ARRAY                 = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["APPLICATION_NAME_ARRAY"]).                Value);
			APPLICATION_ID_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["APPLICATION_ID_ARRAY"]).                  Value);
			SYSTEM_AUTH_ID_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["SYSTEM_AUTH_ID_ARRAY"]).                  Value);
			SESSION_AUTH_ID_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["SESSION_AUTH_ID_ARRAY"]).                 Value);
			CLIENT_ACCTNG_ARRAY                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_ACCTNG_ARRAY"]).                   Value);
			CLIENT_USERID_ARRAY                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_USERID_ARRAY"]).                   Value);
			CLIENT_APPLNAME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_APPLNAME_ARRAY"]).                 Value);
			CLIENT_WRKSTNNAME_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_WRKSTNNAME_ARRAY"]).               Value);
			CLIENT_PID_ARRAY                       = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_PID_ARRAY"]).                      Value);
			CLIENT_PRDID_ARRAY                     = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_PRDID_ARRAY"]).                    Value);
			CLIENT_PLATFORM_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_PLATFORM_ARRAY"]).                 Value);
			CLIENT_PROTOCOL_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_PROTOCOL_ARRAY"]).                 Value);
			CONNECTION_START_TIME_ARRAY            = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONNECTION_START_TIME_ARRAY"]).           Value);
			NUM_LOCKS_HELD_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["NUM_LOCKS_HELD_ARRAY"]).                  Value);
			WLM_QUEUE_TIME_TOTAL_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["WLM_QUEUE_TIME_TOTAL_ARRAY"]).            Value);
			AGENT_WAIT_TIME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["AGENT_WAIT_TIME_ARRAY"]).                 Value);
			TCPIP_RECVS_TOTAL_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TCPIP_RECVS_TOTAL_ARRAY"]).               Value);
			TCPIP_SENDS_TOTAL_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TCPIP_SENDS_TOTAL_ARRAY"]).               Value);
			IPC_RECVS_TOTAL_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["IPC_RECVS_TOTAL_ARRAY"]).                 Value);
			IPC_SENDS_TOTAL_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["IPC_SENDS_TOTAL_ARRAY"]).                 Value);
			TCPIP_SEND_WAIT_TIME_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TCPIP_SEND_WAIT_TIME_ARRAY"]).            Value);
			TCPIP_RECV_WAIT_TIME_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TCPIP_RECV_WAIT_TIME_ARRAY"]).            Value);
			IPC_SEND_WAIT_TIME_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["IPC_SEND_WAIT_TIME_ARRAY"]).              Value);
			IPC_RECV_WAIT_TIME_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["IPC_RECV_WAIT_TIME_ARRAY"]).              Value);
			TCPIP_RECV_VOLUME_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TCPIP_RECV_VOLUME_ARRAY"]).               Value);
			IPC_RECV_VOLUME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["IPC_RECV_VOLUME_ARRAY"]).                 Value);
			TCPIP_SEND_VOLUME_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TCPIP_SEND_VOLUME_ARRAY"]).               Value);
			IPC_SEND_VOLUME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["IPC_SEND_VOLUME_ARRAY"]).                 Value);
			LOCK_ESCALS_ARRAY                      = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["LOCK_ESCALS_ARRAY"]).                     Value);
			LOCK_WAITS_ARRAY                       = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["LOCK_WAITS_ARRAY"]).                      Value);
			LOCK_TIMEOUTS_ARRAY                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["LOCK_TIMEOUTS_ARRAY"]).                   Value);
			DEADLOCKS_ARRAY                        = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DEADLOCKS_ARRAY"]).                       Value);
			ACT_COMPLETED_TOTAL_ARRAY              = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ACT_COMPLETED_TOTAL_ARRAY"]).             Value);
			ACT_ABORTED_TOTAL_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ACT_ABORTED_TOTAL_ARRAY"]).               Value);
			ACT_REJECTED_TOTAL_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ACT_REJECTED_TOTAL_ARRAY"]).              Value);
			APP_RQSTS_COMPLETED_TOTAL_ARRAY        = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["APP_RQSTS_COMPLETED_TOTAL_ARRAY"]).       Value);
			TOTAL_RQST_TIME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_RQST_TIME_ARRAY"]).                 Value);
			TOTAL_CPU_TIME_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_CPU_TIME_ARRAY"]).                  Value);
			TOTAL_WAIT_TIME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_WAIT_TIME_ARRAY"]).                 Value);
			TOTAL_ACT_TIME_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_ACT_TIME_ARRAY"]).                  Value);
			TOTAL_ACT_WAIT_TIME_ARRAY              = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_ACT_WAIT_TIME_ARRAY"]).             Value);
			ROWS_READ_ARRAY                        = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ROWS_READ_ARRAY"]).                       Value);
			ROWS_RETURNED_ARRAY                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ROWS_RETURNED_ARRAY"]).                   Value);
			ROWS_MODIFIED_ARRAY                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ROWS_MODIFIED_ARRAY"]).                   Value);
			POOL_DATA_L_READS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_DATA_L_READS_ARRAY"]).               Value);
			POOL_INDEX_L_READS_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_INDEX_L_READS_ARRAY"]).              Value);
			POOL_TEMP_DATA_L_READS_ARRAY           = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_TEMP_DATA_L_READS_ARRAY"]).          Value);
			POOL_TEMP_INDEX_L_READS_ARRAY          = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_TEMP_INDEX_L_READS_ARRAY"]).         Value);
			POOL_TEMP_XDA_L_READS_ARRAY            = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_TEMP_XDA_L_READS_ARRAY"]).           Value);
			POOL_XDA_L_READS_ARRAY                 = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_XDA_L_READS_ARRAY"]).                Value);
			POOL_DATA_P_READS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_DATA_P_READS_ARRAY"]).               Value);
			POOL_INDEX_P_READS_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_INDEX_P_READS_ARRAY"]).              Value);
			POOL_TEMP_DATA_P_READS_ARRAY           = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_TEMP_DATA_P_READS_ARRAY"]).          Value);
			POOL_TEMP_INDEX_P_READS_ARRAY          = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_TEMP_INDEX_P_READS_ARRAY"]).         Value);
			POOL_TEMP_XDA_P_READS_ARRAY            = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_TEMP_XDA_P_READS_ARRAY"]).           Value);
			POOL_XDA_P_READS_ARRAY                 = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_XDA_P_READS_ARRAY"]).                Value);
			POOL_READ_TIME_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_READ_TIME_ARRAY"]).                  Value);
			POOL_WRITE_TIME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_WRITE_TIME_ARRAY"]).                 Value);
			POOL_DATA_WRITES_ARRAY                 = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_DATA_WRITES_ARRAY"]).                Value);
			POOL_INDEX_WRITES_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_INDEX_WRITES_ARRAY"]).               Value);
			POOL_XDA_WRITES_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_XDA_WRITES_ARRAY"]).                 Value);
			DIRECT_READ_TIME_ARRAY                 = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DIRECT_READ_TIME_ARRAY"]).                Value);
			DIRECT_READS_ARRAY                     = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DIRECT_READS_ARRAY"]).                    Value);
			DIRECT_READ_REQS_ARRAY                 = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DIRECT_READ_REQS_ARRAY"]).                Value);
			DIRECT_WRITE_TIME_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DIRECT_WRITE_TIME_ARRAY"]).               Value);
			DIRECT_WRITES_ARRAY                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DIRECT_WRITES_ARRAY"]).                   Value);
			DIRECT_WRITE_REQS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DIRECT_WRITE_REQS_ARRAY"]).               Value);
			LOG_DISK_WAIT_TIME_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["LOG_DISK_WAIT_TIME_ARRAY"]).              Value);
			LOG_DISK_WAITS_TOTAL_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["LOG_DISK_WAITS_TOTAL_ARRAY"]).            Value);
			NUM_LOG_BUFFER_FULL_ARRAY              = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["NUM_LOG_BUFFER_FULL_ARRAY"]).             Value);
			CLIENT_IDLE_WAIT_TIME_ARRAY            = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CLIENT_IDLE_WAIT_TIME_ARRAY"]).           Value);
			LOCK_WAIT_TIME_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["LOCK_WAIT_TIME_ARRAY"]).                  Value);
			FCM_SEND_WAIT_TIME_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["FCM_SEND_WAIT_TIME_ARRAY"]).              Value);
			TOTAL_SORTS_ARRAY                      = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_SORTS_ARRAY"]).                     Value);
			SORT_OVERFLOWS_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["SORT_OVERFLOWS_ARRAY"]).                  Value);
			POST_THRESHOLD_SORTS_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POST_THRESHOLD_SORTS_ARRAY"]).            Value);
			POST_SHRTHRESHOLD_SORTS_ARRAY          = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POST_SHRTHRESHOLD_SORTS_ARRAY"]).         Value);
			FCM_SEND_VOLUME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["FCM_SEND_VOLUME_ARRAY"]).                 Value);
			FCM_SENDS_TOTAL_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["FCM_SENDS_TOTAL_ARRAY"]).                 Value);
			FCM_RECV_VOLUME_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["FCM_RECV_VOLUME_ARRAY"]).                 Value);
			FCM_RECVS_TOTAL_ARRAY                  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["FCM_RECVS_TOTAL_ARRAY"]).                 Value);
			WLM_QUEUE_ASSIGNMENTS_TOTAL_ARRAY      = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["WLM_QUEUE_ASSIGNMENTS_TOTAL_ARRAY"]).     Value);
			FCM_RECV_WAIT_TIME_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["FCM_RECV_WAIT_TIME_ARRAY"]).              Value);
			TOTAL_SECTION_PROC_TIME_ARRAY          = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_SECTION_PROC_TIME_ARRAY"]).         Value);
			TOTAL_SECTION_SORT_PROC_TIME_ARRAY     = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_SECTION_SORT_PROC_TIME_ARRAY"]).    Value);
			TOTAL_COMPILE_PROC_TIME_ARRAY          = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_COMPILE_PROC_TIME_ARRAY"]).         Value);
			TOTAL_IMPLICIT_COMPILE_PROC_TIME_ARRAY = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_IMPLICIT_COMPILE_PROC_TIME_ARRAY"]).Value);
			TOTAL_COMMIT_PROC_TIME_ARRAY           = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_COMMIT_PROC_TIME_ARRAY"]).          Value);
			TOTAL_ROLLBACK_PROC_TIME_ARRAY         = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_ROLLBACK_PROC_TIME_ARRAY"]).        Value);
			TOTAL_RUNSTATS_PROC_TIME_ARRAY         = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_RUNSTATS_PROC_TIME_ARRAY"]).        Value);
			TOTAL_REORG_PROC_TIME_ARRAY            = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_REORG_PROC_TIME_ARRAY"]).           Value);
			TOTAL_LOAD_PROC_TIME_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_LOAD_PROC_TIME_ARRAY"]).            Value);
			TOTAL_APP_COMMITS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_APP_COMMITS_ARRAY"]).               Value);
			TOTAL_ROUTINE_INVOCATIONS_ARRAY        = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_ROUTINE_INVOCATIONS_ARRAY"]).       Value);
			TOTAL_ROUTINE_TIME_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_ROUTINE_TIME_ARRAY"]).              Value);
			TOTAL_COMPILATIONS_ARRAY               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_COMPILATIONS_ARRAY"]).              Value);
			PKG_CACHE_INSERTS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["PKG_CACHE_INSERTS_ARRAY"]).               Value);
			PKG_CACHE_LOOKUPS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["PKG_CACHE_LOOKUPS_ARRAY"]).               Value);
			CAT_CACHE_INSERTS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CAT_CACHE_INSERTS_ARRAY"]).               Value);
			CAT_CACHE_LOOKUPS_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CAT_CACHE_LOOKUPS_ARRAY"]).               Value);
			INT_COMMITS_ARRAY                      = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["INT_COMMITS_ARRAY"]).                     Value);
			TOTAL_APP_ROLLBACKS_ARRAY              = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_APP_ROLLBACKS_ARRAY"]).             Value);
			INT_ROLLBACKS_ARRAY                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["INT_ROLLBACKS_ARRAY"]).                   Value);
			TOTAL_RUNSTATS_ARRAY                   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_RUNSTATS_ARRAY"]).                  Value);
			TOTAL_REORGS_ARRAY                     = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_REORGS_ARRAY"]).                    Value);
			TOTAL_LOADS_ARRAY                      = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TOTAL_LOADS_ARRAY"]).                     Value);
			CF_WAIT_TIME_ARRAY                     = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CF_WAIT_TIME_ARRAY"]).                    Value);
			RECLAIM_WAIT_TIME_ARRAY                = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["RECLAIM_WAIT_TIME_ARRAY"]).               Value);
			SPACEMAPPAGE_RECLAIM_WAIT_TIME_ARRAY   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["SPACEMAPPAGE_RECLAIM_WAIT_TIME_ARRAY"]).  Value);
			POOL_DATA_GBP_L_READS_ARRAY            = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_DATA_GBP_L_READS_ARRAY"]).           Value);
			POOL_DATA_GBP_P_READS_ARRAY            = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_DATA_GBP_P_READS_ARRAY"]).           Value);
			POOL_INDEX_GBP_L_READS_ARRAY           = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_INDEX_GBP_L_READS_ARRAY"]).          Value);
			POOL_INDEX_GBP_P_READS_ARRAY           = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_INDEX_GBP_P_READS_ARRAY"]).          Value);
			POOL_DATA_LBP_PAGES_FOUND_ARRAY        = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_DATA_LBP_PAGES_FOUND_ARRAY"]).       Value);
			POOL_INDEX_LBP_PAGES_FOUND_ARRAY       = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_INDEX_LBP_PAGES_FOUND_ARRAY"]).      Value);
			POOL_XDA_GBP_L_READS_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_XDA_GBP_L_READS_ARRAY"]).            Value);
			POOL_XDA_GBP_P_READS_ARRAY             = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_XDA_GBP_P_READS_ARRAY"]).            Value);
			POOL_XDA_LBP_PAGES_FOUND_ARRAY         = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["POOL_XDA_LBP_PAGES_FOUND_ARRAY"]).        Value);

			return ret;
		}

		#endregion

		#region CONNECTION

		public static int CONNECTION(this DataConnection dataConnection, int? TIMEINTERVAL, long? APPLICATION_HANDLE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CONNECTION",
				new DataParameter("TIMEINTERVAL",       TIMEINTERVAL),
				new DataParameter("APPLICATION_HANDLE", APPLICATION_HANDLE));
		}

		#endregion

		#region COPY_CLOB

		public static int COPY_CLOB(this DataConnection dataConnection, ref string DEST_LOB, string SRC_LOB, int? AMOUNT, int? DEST_OFFSET, int? SRC_OFFSET)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.COPY_CLOB",
				new DataParameter("DEST_LOB",    DEST_LOB)    { Direction = ParameterDirection.InputOutput, Size = 10485760 },
				new DataParameter("SRC_LOB",     SRC_LOB),
				new DataParameter("AMOUNT",      AMOUNT),
				new DataParameter("DEST_OFFSET", DEST_OFFSET),
				new DataParameter("SRC_OFFSET",  SRC_OFFSET));

			DEST_LOB = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DEST_LOB"]).Value);

			return ret;
		}

		#endregion

		#region CREATE_DIRECTORY

		public static int CREATE_DIRECTORY(this DataConnection dataConnection, string ALIAS, string PATH)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CREATE_DIRECTORY",
				new DataParameter("ALIAS", ALIAS),
				new DataParameter("PATH",  PATH));
		}

		#endregion

		#region CREATE_DIRECTORY_INTERNAL

		public static int CREATE_DIRECTORY_INTERNAL(this DataConnection dataConnection, string ALIAS, string PATH)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CREATE_DIRECTORY_INTERNAL",
				new DataParameter("ALIAS", ALIAS),
				new DataParameter("PATH",  PATH));
		}

		#endregion

		#region CREATE_OR_REPLACE_DIRECTORY

		public static int CREATE_OR_REPLACE_DIRECTORY(this DataConnection dataConnection, string ALIAS, string PATH)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CREATE_OR_REPLACE_DIRECTORY",
				new DataParameter("ALIAS", ALIAS),
				new DataParameter("PATH",  PATH));
		}

		#endregion

		#region CREATE_OR_REPLACE_DIRECTORY_INTERNAL

		public static int CREATE_OR_REPLACE_DIRECTORY_INTERNAL(this DataConnection dataConnection, string ALIAS, string PATH)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CREATE_OR_REPLACE_DIRECTORY_INTERNAL",
				new DataParameter("ALIAS", ALIAS),
				new DataParameter("PATH",  PATH));
		}

		#endregion

		#region CREATE_SQL_SAMPLE

		public static int CREATE_SQL_SAMPLE(this DataConnection dataConnection, string SCHEMA_NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.CREATE_SQL_SAMPLE",
				new DataParameter("SCHEMA_NAME", SCHEMA_NAME));
		}

		#endregion

		#region CREATE_STORAGEMGMT_TABLES

		public static int CREATE_STORAGEMGMT_TABLES(this DataConnection dataConnection, string TSNAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.CREATE_STORAGEMGMT_TABLES",
				new DataParameter("TSNAME", TSNAME));
		}

		#endregion

		#region CREATE_V8_SAMPLE

		public static int CREATE_V8_SAMPLE(this DataConnection dataConnection, string SCHEMA_NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.CREATE_V8_SAMPLE",
				new DataParameter("SCHEMA_NAME", SCHEMA_NAME));
		}

		#endregion

		#region CREATE_WRAPPED

		public static int CREATE_WRAPPED(this DataConnection dataConnection, string DDL)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CREATE_WRAPPED",
				new DataParameter("DDL", DDL));
		}

		#endregion

		#region CREATE_XML_SAMPLE

		public static int CREATE_XML_SAMPLE(this DataConnection dataConnection, string SCHEMA_NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.CREATE_XML_SAMPLE",
				new DataParameter("SCHEMA_NAME", SCHEMA_NAME));
		}

		#endregion

		#region CURRENTAPPS

		public static int CURRENTAPPS(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CURRENTAPPS");
		}

		#endregion

		#region CURRENTSQL

		public static int CURRENTSQL(this DataConnection dataConnection, short? MEMBER)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.CURRENTSQL",
				new DataParameter("MEMBER", MEMBER));
		}

		#endregion

		#region DB2LK_CLEAN_TABLE

		public static int DB2LK_CLEAN_TABLE(this DataConnection dataConnection, int? OP_TOKEN)
		{
			return dataConnection.ExecuteProc("SYSPROC.DB2LK_CLEAN_TABLE",
				new DataParameter("OP_TOKEN", OP_TOKEN));
		}

		#endregion

		#region DB2LK_GENERATE_DDL

		public static int DB2LK_GENERATE_DDL(this DataConnection dataConnection, string COMDSTRING, out int? OP_TOKEN)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.DB2LK_GENERATE_DDL",
				new DataParameter("COMDSTRING", COMDSTRING));

			OP_TOKEN = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OP_TOKEN"]).Value);

			return ret;
		}

		#endregion

		#region DB2LK_TBLNDEP

		public static int DB2LK_TBLNDEP(this DataConnection dataConnection, string OBJECT_TYPE, string OBJECT_NAME, string OBJECT_SCHEMA, ref int? OP_TOKEN)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.DB2LK_TBLNDEP",
				new DataParameter("OBJECT_TYPE",   OBJECT_TYPE),
				new DataParameter("OBJECT_NAME",   OBJECT_NAME),
				new DataParameter("OBJECT_SCHEMA", OBJECT_SCHEMA),
				new DataParameter("OP_TOKEN",      OP_TOKEN)      { Direction = ParameterDirection.InputOutput, Size = 4 });

			OP_TOKEN = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OP_TOKEN"]).Value);

			return ret;
		}

		#endregion

		#region DB2LOAD

		public static int DB2LOAD(this DataConnection dataConnection, int? VERSION_NUMBER, string CURSOR_STATEMENT, string LOAD_COMMAND, out int? SQLCODE, ref string SQLMESSAGE, out long? ROWS_READ, out long? ROWS_SKIPPED, out long? ROWS_LOADED, out long? ROWS_REJECTED, out long? ROWS_DELETED, out long? ROWS_COMMITTED, out long? ROWS_PART_READ, out long? ROWS_PART_REJECTED, out long? ROWS_PART_PARTITIONED, ref string MPP_LOAD_SUMMARY)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.DB2LOAD",
				new DataParameter("VERSION_NUMBER",   VERSION_NUMBER),
				new DataParameter("CURSOR_STATEMENT", CURSOR_STATEMENT),
				new DataParameter("LOAD_COMMAND",     LOAD_COMMAND),
				new DataParameter("SQLMESSAGE",       SQLMESSAGE)       { Direction = ParameterDirection.InputOutput, Size = 2048 },
				new DataParameter("MPP_LOAD_SUMMARY", MPP_LOAD_SUMMARY) { Direction = ParameterDirection.InputOutput, Size = 32672 });

			SQLCODE               = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["SQLCODE"]).              Value);
			SQLMESSAGE            = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SQLMESSAGE"]).           Value);
			ROWS_READ             = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_READ"]).            Value);
			ROWS_SKIPPED          = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_SKIPPED"]).         Value);
			ROWS_LOADED           = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_LOADED"]).          Value);
			ROWS_REJECTED         = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_REJECTED"]).        Value);
			ROWS_DELETED          = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_DELETED"]).         Value);
			ROWS_COMMITTED        = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_COMMITTED"]).       Value);
			ROWS_PART_READ        = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_PART_READ"]).       Value);
			ROWS_PART_REJECTED    = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_PART_REJECTED"]).   Value);
			ROWS_PART_PARTITIONED = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["ROWS_PART_PARTITIONED"]).Value);
			MPP_LOAD_SUMMARY      = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MPP_LOAD_SUMMARY"]).     Value);

			return ret;
		}

		#endregion

		#region DBG_LOOKUPSESSIONMANAGER

		public static int DBG_LOOKUPSESSIONMANAGER(this DataConnection dataConnection, out string HOST, out int? PORT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.DBG_LOOKUPSESSIONMANAGER");

			HOST = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["HOST"]).Value);
			PORT = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["PORT"]).Value);

			return ret;
		}

		#endregion

		#region DBSUMMARY

		public static int DBSUMMARY(this DataConnection dataConnection, int? TIMEINTERVAL)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DBSUMMARY",
				new DataParameter("TIMEINTERVAL", TIMEINTERVAL));
		}

		#endregion

		#region DB_VERSION

		public static int DB_VERSION(this DataConnection dataConnection, out string VERSION, out string COMPATIBILITY)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.DB_VERSION");

			VERSION       = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["VERSION"]).      Value);
			COMPATIBILITY = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["COMPATIBILITY"]).Value);

			return ret;
		}

		#endregion

		#region DEFINE_COLUMN_CHAR

		public static int DEFINE_COLUMN_CHAR(this DataConnection dataConnection, int? C, int? POSITION, object COLUMN, int? COLUMN_SIZE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_CHAR",
				new DataParameter("C",           C),
				new DataParameter("POSITION",    POSITION),
				new DataParameter("COLUMN",      COLUMN),
				new DataParameter("COLUMN_SIZE", COLUMN_SIZE));
		}

		#endregion

		#region DEFINE_COLUMN_CLOB

		public static int DEFINE_COLUMN_CLOB(this DataConnection dataConnection, int? C, int? POSITION, string COLUMN)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_CLOB",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION),
				new DataParameter("COLUMN",   COLUMN));
		}

		#endregion

		#region DEFINE_COLUMN_DATE

		public static int DEFINE_COLUMN_DATE(this DataConnection dataConnection, int? C, int? POSITION, DateTime? COLUMN)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_DATE",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION),
				new DataParameter("COLUMN",   COLUMN));
		}

		#endregion

		#region DEFINE_COLUMN_DOUBLE

		public static int DEFINE_COLUMN_DOUBLE(this DataConnection dataConnection, int? C, int? POSITION, double? COLUMN)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_DOUBLE",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION),
				new DataParameter("COLUMN",   COLUMN));
		}

		#endregion

		#region DEFINE_COLUMN_INT

		public static int DEFINE_COLUMN_INT(this DataConnection dataConnection, int? C, int? POSITION, int? COLUMN)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_INT",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION),
				new DataParameter("COLUMN",   COLUMN));
		}

		#endregion

		#region DEFINE_COLUMN_LONG

		public static int DEFINE_COLUMN_LONG(this DataConnection dataConnection, int? C, int? POSITION)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_LONG",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION));
		}

		#endregion

		#region DEFINE_COLUMN_NUMBER

		public static int DEFINE_COLUMN_NUMBER(this DataConnection dataConnection, int? C, int? POSITION, decimal? COLUMN)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_NUMBER",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION),
				new DataParameter("COLUMN",   COLUMN));
		}

		#endregion

		#region DEFINE_COLUMN_TIMESTAMP

		public static int DEFINE_COLUMN_TIMESTAMP(this DataConnection dataConnection, int? C, int? POSITION, DateTime? COLUMN)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_TIMESTAMP",
				new DataParameter("C",        C),
				new DataParameter("POSITION", POSITION),
				new DataParameter("COLUMN",   COLUMN));
		}

		#endregion

		#region DEFINE_COLUMN_VARCHAR

		public static int DEFINE_COLUMN_VARCHAR(this DataConnection dataConnection, int? C, int? POSITION, string COLUMN, int? COLUMN_SIZE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DEFINE_COLUMN_VARCHAR",
				new DataParameter("C",           C),
				new DataParameter("POSITION",    POSITION),
				new DataParameter("COLUMN",      COLUMN),
				new DataParameter("COLUMN_SIZE", COLUMN_SIZE));
		}

		#endregion

		#region DESCRIBE_COLUMNS

		public static int DESCRIBE_COLUMNS(this DataConnection dataConnection, int? C, out int? COL_CNT, out object DESC_T)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.DESCRIBE_COLUMNS",
				new DataParameter("C", C));

			COL_CNT = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["COL_CNT"]).Value);
			DESC_T  = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DESC_T"]). Value);

			return ret;
		}

		#endregion

		#region DESCRIBE_COLUMNS2

		public static int DESCRIBE_COLUMNS2(this DataConnection dataConnection, int? C, out int? COL_CNT, out object DESC_TAB2)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.DESCRIBE_COLUMNS2",
				new DataParameter("C", C));

			COL_CNT   = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["COL_CNT"]).  Value);
			DESC_TAB2 = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["DESC_TAB2"]).Value);

			return ret;
		}

		#endregion

		#region DISABLE

		public static int DISABLE(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DISABLE");
		}

		#endregion

		#region DROP_DIRECTORY

		public static int DROP_DIRECTORY(this DataConnection dataConnection, string ALIAS)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DROP_DIRECTORY",
				new DataParameter("ALIAS", ALIAS));
		}

		#endregion

		#region DROP_DIRECTORY_INTERNAL

		public static int DROP_DIRECTORY_INTERNAL(this DataConnection dataConnection, string ALIAS)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.DROP_DIRECTORY_INTERNAL",
				new DataParameter("ALIAS", ALIAS));
		}

		#endregion

		#region DROP_STORAGEMGMT_TABLES

		public static int DROP_STORAGEMGMT_TABLES(this DataConnection dataConnection, short? DROPSPEC)
		{
			return dataConnection.ExecuteProc("SYSPROC.DROP_STORAGEMGMT_TABLES",
				new DataParameter("DROPSPEC", DROPSPEC));
		}

		#endregion

		#region ENABLE

		public static int ENABLE(this DataConnection dataConnection, int? BUFFER_SIZE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.ENABLE",
				new DataParameter("BUFFER_SIZE", BUFFER_SIZE));
		}

		#endregion

		#region ERASE_CLOB

		public static int ERASE_CLOB(this DataConnection dataConnection, ref string LOB_LOC, ref int? AMOUNT, int? OFFSET)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.ERASE_CLOB",
				new DataParameter("LOB_LOC", LOB_LOC) { Direction = ParameterDirection.InputOutput, Size = 10485760 },
				new DataParameter("AMOUNT",  AMOUNT)  { Direction = ParameterDirection.InputOutput, Size = 4 },
				new DataParameter("OFFSET",  OFFSET));

			LOB_LOC = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LOB_LOC"]).Value);
			AMOUNT  = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["AMOUNT"]). Value);

			return ret;
		}

		#endregion

		#region EVMON_FORMAT_UE_TO_TABLES

		public static int EVMON_FORMAT_UE_TO_TABLES(this DataConnection dataConnection, string EVMON_TYPE, string XSRSCHEMA, string XSROBJECTNAME, string XMLSCHEMAFILE, string TABSCHEMA, string TBSP_NAME, string OPTIONS, int? COMMIT_COUNT, string FULLSELECT)
		{
			return dataConnection.ExecuteProc("SYSPROC.EVMON_FORMAT_UE_TO_TABLES",
				new DataParameter("EVMON_TYPE",    EVMON_TYPE),
				new DataParameter("XSRSCHEMA",     XSRSCHEMA),
				new DataParameter("XSROBJECTNAME", XSROBJECTNAME),
				new DataParameter("XMLSCHEMAFILE", XMLSCHEMAFILE),
				new DataParameter("TABSCHEMA",     TABSCHEMA),
				new DataParameter("TBSP_NAME",     TBSP_NAME),
				new DataParameter("OPTIONS",       OPTIONS),
				new DataParameter("COMMIT_COUNT",  COMMIT_COUNT),
				new DataParameter("FULLSELECT",    FULLSELECT));
		}

		#endregion

		#region EVMON_UPGRADE_TABLES

		public static int EVMON_UPGRADE_TABLES(this DataConnection dataConnection, string EVMON_NAME, string EVMON_TYPE, string OPTIONS, out int? NUM_EVMONS_EVALUATED, out int? NUM_EVMONS_TO_UPGRADE, out int? NUM_EVMONS_UPGRADED)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.EVMON_UPGRADE_TABLES",
				new DataParameter("EVMON_NAME", EVMON_NAME),
				new DataParameter("EVMON_TYPE", EVMON_TYPE),
				new DataParameter("OPTIONS",    OPTIONS));

			NUM_EVMONS_EVALUATED  = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["NUM_EVMONS_EVALUATED"]). Value);
			NUM_EVMONS_TO_UPGRADE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["NUM_EVMONS_TO_UPGRADE"]).Value);
			NUM_EVMONS_UPGRADED   = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["NUM_EVMONS_UPGRADED"]).  Value);

			return ret;
		}

		#endregion

		#region EXDYN_INCBIND

		public static int EXDYN_INCBIND(this DataConnection dataConnection, ref int? STATUS, string SCHEMA, string PACKAGE, object UNIQUE_ID, int? SECTNO, out string MESSAGE, out int? SECTION, out int? SECTIONLEN, ref int? RESERVED)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.EXDYN_INCBIND",
				new DataParameter("STATUS",    STATUS)    { Direction = ParameterDirection.InputOutput, Size = 4 },
				new DataParameter("SCHEMA",    SCHEMA),
				new DataParameter("PACKAGE",   PACKAGE),
				new DataParameter("UNIQUE_ID", UNIQUE_ID),
				new DataParameter("SECTNO",    SECTNO),
				new DataParameter("RESERVED",  RESERVED)  { Direction = ParameterDirection.InputOutput, Size = 4 });

			STATUS     = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["STATUS"]).    Value);
			MESSAGE    = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).   Value);
			SECTION    = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["SECTION"]).   Value);
			SECTIONLEN = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["SECTIONLEN"]).Value);
			RESERVED   = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RESERVED"]).  Value);

			return ret;
		}

		#endregion

		#region EXECUTE

		public static int EXECUTE(this DataConnection dataConnection, int? C, out int? RET)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.EXECUTE",
				new DataParameter("C", C));

			RET = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RET"]).Value);

			return ret;
		}

		#endregion

		#region EXECUTE_TASK

		public static int EXECUTE_TASK(this DataConnection dataConnection, string TASKNAME, string INTERVAL, string PROC)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.EXECUTE_TASK",
				new DataParameter("TASKNAME", TASKNAME),
				new DataParameter("INTERVAL", INTERVAL),
				new DataParameter("PROC",     PROC));
		}

		#endregion

		#region EXEC_DDL_STATEMENT

		public static int EXEC_DDL_STATEMENT(this DataConnection dataConnection, string PARSE_STRING)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.EXEC_DDL_STATEMENT",
				new DataParameter("PARSE_STRING", PARSE_STRING));
		}

		#endregion

		#region EXPLAIN_FROM_ACTIVITY

		public static int EXPLAIN_FROM_ACTIVITY(this DataConnection dataConnection, string APPL_ID, int? UOW_ID, int? ACTIVITY_ID, string ACTIVITY_EVMON_NAME, ref string EXPLAIN_SCHEMA, out string EXPLAIN_REQUESTER, out DateTime? EXPLAIN_TIME, out string SOURCE_NAME, out string SOURCE_SCHEMA, out string SOURCE_VERSION)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.EXPLAIN_FROM_ACTIVITY",
				new DataParameter("APPL_ID",             APPL_ID),
				new DataParameter("UOW_ID",              UOW_ID),
				new DataParameter("ACTIVITY_ID",         ACTIVITY_ID),
				new DataParameter("ACTIVITY_EVMON_NAME", ACTIVITY_EVMON_NAME),
				new DataParameter("EXPLAIN_SCHEMA",      EXPLAIN_SCHEMA)      { Direction = ParameterDirection.InputOutput, Size = 128 });

			EXPLAIN_SCHEMA    = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_SCHEMA"]).   Value);
			EXPLAIN_REQUESTER = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_REQUESTER"]).Value);
			EXPLAIN_TIME      = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_TIME"]).     Value);
			SOURCE_NAME       = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_NAME"]).      Value);
			SOURCE_SCHEMA     = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_SCHEMA"]).    Value);
			SOURCE_VERSION    = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_VERSION"]).   Value);

			return ret;
		}

		#endregion

		#region EXPLAIN_FROM_CATALOG

		public static int EXPLAIN_FROM_CATALOG(this DataConnection dataConnection, string PKGSCHEMA, string PKGNAME, string PKGVERSION, short? SECTNO, ref string EXPLAIN_SCHEMA, out string EXPLAIN_REQUESTER, out DateTime? EXPLAIN_TIME, out string SOURCE_NAME, out string SOURCE_SCHEMA, out string SOURCE_VERSION)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.EXPLAIN_FROM_CATALOG",
				new DataParameter("PKGSCHEMA",      PKGSCHEMA),
				new DataParameter("PKGNAME",        PKGNAME),
				new DataParameter("PKGVERSION",     PKGVERSION),
				new DataParameter("SECTNO",         SECTNO),
				new DataParameter("EXPLAIN_SCHEMA", EXPLAIN_SCHEMA) { Direction = ParameterDirection.InputOutput, Size = 128 });

			EXPLAIN_SCHEMA    = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_SCHEMA"]).   Value);
			EXPLAIN_REQUESTER = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_REQUESTER"]).Value);
			EXPLAIN_TIME      = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_TIME"]).     Value);
			SOURCE_NAME       = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_NAME"]).      Value);
			SOURCE_SCHEMA     = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_SCHEMA"]).    Value);
			SOURCE_VERSION    = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_VERSION"]).   Value);

			return ret;
		}

		#endregion

		#region EXPLAIN_FROM_SECTION

		public static int EXPLAIN_FROM_SECTION(this DataConnection dataConnection, string EXECUTABLE_ID, object SECTION_SOURCE_TYPE, string SECTION_SOURCE_NAME, int? MEMBER, ref string EXPLAIN_SCHEMA, out string EXPLAIN_REQUESTER, out DateTime? EXPLAIN_TIME, out string SOURCE_NAME, out string SOURCE_SCHEMA, out string SOURCE_VERSION)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.EXPLAIN_FROM_SECTION",
				new DataParameter("EXECUTABLE_ID",       EXECUTABLE_ID),
				new DataParameter("SECTION_SOURCE_TYPE", SECTION_SOURCE_TYPE),
				new DataParameter("SECTION_SOURCE_NAME", SECTION_SOURCE_NAME),
				new DataParameter("MEMBER",              MEMBER),
				new DataParameter("EXPLAIN_SCHEMA",      EXPLAIN_SCHEMA)      { Direction = ParameterDirection.InputOutput, Size = 128 });

			EXPLAIN_SCHEMA    = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_SCHEMA"]).   Value);
			EXPLAIN_REQUESTER = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_REQUESTER"]).Value);
			EXPLAIN_TIME      = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["EXPLAIN_TIME"]).     Value);
			SOURCE_NAME       = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_NAME"]).      Value);
			SOURCE_SCHEMA     = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_SCHEMA"]).    Value);
			SOURCE_VERSION    = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["SOURCE_VERSION"]).   Value);

			return ret;
		}

		#endregion

		#region FCLOSE

		public static int FCLOSE(this DataConnection dataConnection, object FILE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.FCLOSE",
				new DataParameter("FILE", FILE));
		}

		#endregion

		#region FCLOSE_ALL

		public static int FCLOSE_ALL(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.FCLOSE_ALL");
		}

		#endregion

		#region FETCH_ROWS

		public static int FETCH_ROWS(this DataConnection dataConnection, int? C, out int? RET)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.FETCH_ROWS",
				new DataParameter("C", C));

			RET = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RET"]).Value);

			return ret;
		}

		#endregion

		#region FFLUSH

		public static int FFLUSH(this DataConnection dataConnection, object FILE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.FFLUSH",
				new DataParameter("FILE", FILE));
		}

		#endregion

		#region FREMOVE

		public static int FREMOVE(this DataConnection dataConnection, string LOCATION, string FILENAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.FREMOVE",
				new DataParameter("LOCATION", LOCATION),
				new DataParameter("FILENAME", FILENAME));
		}

		#endregion

		#region GENERATE_DISTFILE

		public static int GENERATE_DISTFILE(this DataConnection dataConnection, string TBSCHEMA, string TBNAME, ref string FILENAME)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.GENERATE_DISTFILE",
				new DataParameter("TBSCHEMA", TBSCHEMA),
				new DataParameter("TBNAME",   TBNAME),
				new DataParameter("FILENAME", FILENAME) { Direction = ParameterDirection.InputOutput, Size = 255 });

			FILENAME = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["FILENAME"]).Value);

			return ret;
		}

		#endregion

		#region GETANALYZEOPTIONS

		public static int GETANALYZEOPTIONS(this DataConnection dataConnection, string METHOD_OPT, ref object ALLCOLUMNS, ref object ALLINDEXES, ref object ALLINDEXEDCOLUMNS, ref object FORTABLE, ref object ALLLOCALINDEXES, ref object CASCADE, out string ERRORTEXT)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GETANALYZEOPTIONS",
				new DataParameter("METHOD_OPT",        METHOD_OPT),
				new DataParameter("ALLCOLUMNS",        ALLCOLUMNS)        { Direction = ParameterDirection.InputOutput, Size = 1 },
				new DataParameter("ALLINDEXES",        ALLINDEXES)        { Direction = ParameterDirection.InputOutput, Size = 1 },
				new DataParameter("ALLINDEXEDCOLUMNS", ALLINDEXEDCOLUMNS) { Direction = ParameterDirection.InputOutput, Size = 1 },
				new DataParameter("FORTABLE",          FORTABLE)          { Direction = ParameterDirection.InputOutput, Size = 1 },
				new DataParameter("ALLLOCALINDEXES",   ALLLOCALINDEXES)   { Direction = ParameterDirection.InputOutput, Size = 1 },
				new DataParameter("CASCADE",           CASCADE)           { Direction = ParameterDirection.InputOutput, Size = 1 });

			ALLCOLUMNS        = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ALLCOLUMNS"]).       Value);
			ALLINDEXES        = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ALLINDEXES"]).       Value);
			ALLINDEXEDCOLUMNS = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ALLINDEXEDCOLUMNS"]).Value);
			FORTABLE          = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["FORTABLE"]).         Value);
			ALLLOCALINDEXES   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ALLLOCALINDEXES"]).  Value);
			CASCADE           = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CASCADE"]).          Value);
			ERRORTEXT         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ERRORTEXT"]).        Value);

			return ret;
		}

		#endregion

		#region GETCONTROLDEPENDENCY

		public static int GETCONTROLDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETCONTROLDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETFUNCTIONDEPENDENCY

		public static int GETFUNCTIONDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETFUNCTIONDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETINDEXDEPENDENCY

		public static int GETINDEXDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETINDEXDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETPACKAGEDEPENDENCY

		public static int GETPACKAGEDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETPACKAGEDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETROUTINEDEPENDENCY

		public static int GETROUTINEDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETROUTINEDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETSAMPLECLAUSE

		public static int GETSAMPLECLAUSE(this DataConnection dataConnection, string SAMPLE_CLAUSE, out string ROWSCOUNT, out string ANALYZETYPE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GETSAMPLECLAUSE",
				new DataParameter("SAMPLE_CLAUSE", SAMPLE_CLAUSE));

			ROWSCOUNT   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ROWSCOUNT"]).  Value);
			ANALYZETYPE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ANALYZETYPE"]).Value);

			return ret;
		}

		#endregion

		#region GETTABLEDEPENDENCY

		public static int GETTABLEDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETTABLEDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETTOKEN

		public static int GETTOKEN(this DataConnection dataConnection, string SOURCE, ref int? POS, out string TOKEN, out short? TOKENTYPE, out short? DELIMITER, object EATSPACES)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GETTOKEN",
				new DataParameter("SOURCE",    SOURCE),
				new DataParameter("POS",       POS)       { Direction = ParameterDirection.InputOutput, Size = 4 },
				new DataParameter("EATSPACES", EATSPACES));

			POS       = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["POS"]).      Value);
			TOKEN     = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["TOKEN"]).    Value);
			TOKENTYPE = Converter.ChangeTypeTo<short?>(((IDbDataParameter)dataConnection.Command.Parameters["TOKENTYPE"]).Value);
			DELIMITER = Converter.ChangeTypeTo<short?>(((IDbDataParameter)dataConnection.Command.Parameters["DELIMITER"]).Value);

			return ret;
		}

		#endregion

		#region GETTRIGGERDEPENDENCY

		public static int GETTRIGGERDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETTRIGGERDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETUSAGELISTDEPENDENCY

		public static int GETUSAGELISTDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETUSAGELISTDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETVARIABLEDEPENDENCY

		public static int GETVARIABLEDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETVARIABLEDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GETVIEWDEPENDENCY

		public static int GETVIEWDEPENDENCY(this DataConnection dataConnection, string SCHEMA, string NAME, object BASETYPE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GETVIEWDEPENDENCY",
				new DataParameter("SCHEMA",   SCHEMA),
				new DataParameter("NAME",     NAME),
				new DataParameter("BASETYPE", BASETYPE));
		}

		#endregion

		#region GET_DB2_SQLROUTINE_PREOPTS

		public static int GET_DB2_SQLROUTINE_PREOPTS(this DataConnection dataConnection, out string PREPOPTIONS, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.GET_DB2_SQLROUTINE_PREOPTS");

			PREPOPTIONS = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PREPOPTIONS"]).Value);
			RESULT      = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).     Value);

			return ret;
		}

		#endregion

		#region GET_DBSIZE_INFO

		public static int GET_DBSIZE_INFO(this DataConnection dataConnection, out DateTime? SNAPSHOTTIMESTAMP, out long? DATABASESIZE, out long? DATABASECAPACITY, int? REFRESHWINDOW)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.GET_DBSIZE_INFO",
				new DataParameter("REFRESHWINDOW", REFRESHWINDOW));

			SNAPSHOTTIMESTAMP = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["SNAPSHOTTIMESTAMP"]).Value);
			DATABASESIZE      = Converter.ChangeTypeTo<long?>    (((IDbDataParameter)dataConnection.Command.Parameters["DATABASESIZE"]).     Value);
			DATABASECAPACITY  = Converter.ChangeTypeTo<long?>    (((IDbDataParameter)dataConnection.Command.Parameters["DATABASECAPACITY"]). Value);

			return ret;
		}

		#endregion

		#region GET_DB_CONFIG

		public static int GET_DB_CONFIG(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSPROC.GET_DB_CONFIG");
		}

		#endregion

		#region GET_DEPENDENCY

		public static int GET_DEPENDENCY(this DataConnection dataConnection, string TYPE, string SCHEMA, string NAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.GET_DEPENDENCY",
				new DataParameter("TYPE",   TYPE),
				new DataParameter("SCHEMA", SCHEMA),
				new DataParameter("NAME",   NAME));
		}

		#endregion

		#region GET_DIRECTORY_PATH

		public static int GET_DIRECTORY_PATH(this DataConnection dataConnection, string ALIAS, out string PATH)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_DIRECTORY_PATH",
				new DataParameter("ALIAS", ALIAS));

			PATH = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PATH"]).Value);

			return ret;
		}

		#endregion

		#region GET_DIRECTORY_PATH_INTERNAL

		public static int GET_DIRECTORY_PATH_INTERNAL(this DataConnection dataConnection, string ALIAS, out string PATH)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_DIRECTORY_PATH_INTERNAL",
				new DataParameter("ALIAS", ALIAS));

			PATH = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PATH"]).Value);

			return ret;
		}

		#endregion

		#region GET_LINE

		public static int GET_LINE(this DataConnection dataConnection, out string LINE, object FILE, out int? STATUS, out string BUFFER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_LINE",
				new DataParameter("FILE", FILE));

			LINE   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LINE"]).  Value);
			STATUS = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["STATUS"]).Value);
			BUFFER = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["BUFFER"]).Value);

			return ret;
		}

		#endregion

		#region GET_LINES

		public static int GET_LINES(this DataConnection dataConnection, out object LINES, ref int? NUMLINES)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_LINES",
				new DataParameter("NUMLINES", NUMLINES) { Direction = ParameterDirection.InputOutput, Size = 4 });

			LINES    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["LINES"]).   Value);
			NUMLINES = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["NUMLINES"]).Value);

			return ret;
		}

		#endregion

		#region GET_NEXTRUN_TIME

		public static int GET_NEXTRUN_TIME(this DataConnection dataConnection, DateTime? INTERVAL, out DateTime? NEXTRUN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_NEXTRUN_TIME",
				new DataParameter("INTERVAL", INTERVAL));

			NEXTRUN = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["NEXTRUN"]).Value);

			return ret;
		}

		#endregion

		#region GET_SCHEMA_QUALIFIED

		public static int GET_SCHEMA_QUALIFIED(this DataConnection dataConnection, string IN_VALUE, out string OUT_VALUE, object ISWHAT)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_SCHEMA_QUALIFIED",
				new DataParameter("IN_VALUE", IN_VALUE),
				new DataParameter("ISWHAT",   ISWHAT));

			OUT_VALUE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_VALUE"]).Value);

			return ret;
		}

		#endregion

		#region GET_SWRD_SETTINGS

		public static int GET_SWRD_SETTINGS(this DataConnection dataConnection, string DBPGNAME, short? MATCHINGSPEC, out short? REDISTMETHOD, out string PMAPFILE, out string DISTFILE, out long? STEPSIZE, out short? TOTALSTEPS, out short? STAGESIZE, out short? NEXTSTEP, out short? PROCESSSTATE, out string PNUMBER, out string PWEIGHT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.GET_SWRD_SETTINGS",
				new DataParameter("DBPGNAME",     DBPGNAME),
				new DataParameter("MATCHINGSPEC", MATCHINGSPEC));

			REDISTMETHOD = Converter.ChangeTypeTo<short?>(((IDbDataParameter)dataConnection.Command.Parameters["REDISTMETHOD"]).Value);
			PMAPFILE     = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PMAPFILE"]).    Value);
			DISTFILE     = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DISTFILE"]).    Value);
			STEPSIZE     = Converter.ChangeTypeTo<long?> (((IDbDataParameter)dataConnection.Command.Parameters["STEPSIZE"]).    Value);
			TOTALSTEPS   = Converter.ChangeTypeTo<short?>(((IDbDataParameter)dataConnection.Command.Parameters["TOTALSTEPS"]).  Value);
			STAGESIZE    = Converter.ChangeTypeTo<short?>(((IDbDataParameter)dataConnection.Command.Parameters["STAGESIZE"]).   Value);
			NEXTSTEP     = Converter.ChangeTypeTo<short?>(((IDbDataParameter)dataConnection.Command.Parameters["NEXTSTEP"]).    Value);
			PROCESSSTATE = Converter.ChangeTypeTo<short?>(((IDbDataParameter)dataConnection.Command.Parameters["PROCESSSTATE"]).Value);
			PNUMBER      = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PNUMBER"]).     Value);
			PWEIGHT      = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PWEIGHT"]).     Value);

			return ret;
		}

		#endregion

		#region GET_TASK_INFO

		public static int GET_TASK_INFO(this DataConnection dataConnection, string TASKNAME, out string WHAT, out DateTime? NEXTDATE, out string INTERVAL, out short? MAXINVOCATION)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_TASK_INFO",
				new DataParameter("TASKNAME", TASKNAME));

			WHAT          = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["WHAT"]).         Value);
			NEXTDATE      = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["NEXTDATE"]).     Value);
			INTERVAL      = Converter.ChangeTypeTo<string>   (((IDbDataParameter)dataConnection.Command.Parameters["INTERVAL"]).     Value);
			MAXINVOCATION = Converter.ChangeTypeTo<short?>   (((IDbDataParameter)dataConnection.Command.Parameters["MAXINVOCATION"]).Value);

			return ret;
		}

		#endregion

		#region GET_TASK_NAME

		public static int GET_TASK_NAME(this DataConnection dataConnection, decimal? JOB, out string TASKNAME)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.GET_TASK_NAME",
				new DataParameter("JOB", JOB));

			TASKNAME = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["TASKNAME"]).Value);

			return ret;
		}

		#endregion

		#region GET_WRAP_CFG_C

		public static int GET_WRAP_CFG_C(this DataConnection dataConnection, string WRAPPERID, string CLIENTLOCALE, out string SERVERPLATFORM, out string TRACELOG, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.GET_WRAP_CFG_C",
				new DataParameter("WRAPPERID",    WRAPPERID),
				new DataParameter("CLIENTLOCALE", CLIENTLOCALE));

			SERVERPLATFORM = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SERVERPLATFORM"]).Value);
			TRACELOG       = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["TRACELOG"]).      Value);
			OUT_SQLCODE    = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).   Value);

			return ret;
		}

		#endregion

		#region GET_WRAP_CFG_C2

		public static int GET_WRAP_CFG_C2(this DataConnection dataConnection, string WRAPPERID, string CLIENTLOCALE, out string SERVERPLATFORM, out string TRACELOG)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.GET_WRAP_CFG_C2",
				new DataParameter("WRAPPERID",    WRAPPERID),
				new DataParameter("CLIENTLOCALE", CLIENTLOCALE));

			SERVERPLATFORM = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SERVERPLATFORM"]).Value);
			TRACELOG       = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["TRACELOG"]).      Value);

			return ret;
		}

		#endregion

		#region HANDLEOPTION

		public static int HANDLEOPTION(this DataConnection dataConnection, ref string CURRENTTOKEN, ref object OPTION, out string ERRORTEXT, object RESETSTATE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.HANDLEOPTION",
				new DataParameter("CURRENTTOKEN", CURRENTTOKEN) { Direction = ParameterDirection.InputOutput, Size = 1024 },
				new DataParameter("OPTION",       OPTION)       { Direction = ParameterDirection.InputOutput, Size = 1 },
				new DataParameter("RESETSTATE",   RESETSTATE));

			CURRENTTOKEN = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["CURRENTTOKEN"]).Value);
			OPTION       = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["OPTION"]).      Value);
			ERRORTEXT    = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ERRORTEXT"]).   Value);

			return ret;
		}

		#endregion

		#region HANDLE_TASK_NEXT_RUN

		public static int HANDLE_TASK_NEXT_RUN(this DataConnection dataConnection, string TASKNAME, DateTime? NEXTDATE, object EXCEPTIONFLAG)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.HANDLE_TASK_NEXT_RUN",
				new DataParameter("TASKNAME",      TASKNAME),
				new DataParameter("NEXTDATE",      NEXTDATE),
				new DataParameter("EXCEPTIONFLAG", EXCEPTIONFLAG));
		}

		#endregion

		#region HASNICKNAMECHANGED

		public static int HASNICKNAMECHANGED(this DataConnection dataConnection, string INSERVERNAME, string INTABSCHEMA, string INTABNAME, DateTime? INTIMESTAMP, out object OUTYESNO, out int? OUTSQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.HASNICKNAMECHANGED",
				new DataParameter("INSERVERNAME", INSERVERNAME),
				new DataParameter("INTABSCHEMA",  INTABSCHEMA),
				new DataParameter("INTABNAME",    INTABNAME),
				new DataParameter("INTIMESTAMP",  INTIMESTAMP));

			OUTYESNO   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["OUTYESNO"]).  Value);
			OUTSQLCODE = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["OUTSQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_ALL_RECIPIENTS

		public static int IMP_ADD_ALL_RECIPIENTS(this DataConnection dataConnection, ref object CONN, string SENDER, ref string RECIPIENTADDRESSES, ref string CCADDRESSES, ref string BCCADDRESSES)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_ALL_RECIPIENTS",
				new DataParameter("CONN",               CONN)               { Direction = ParameterDirection.InputOutput },
				new DataParameter("SENDER",             SENDER),
				new DataParameter("RECIPIENTADDRESSES", RECIPIENTADDRESSES) { Direction = ParameterDirection.InputOutput, Size = 32672 },
				new DataParameter("CCADDRESSES",        CCADDRESSES)        { Direction = ParameterDirection.InputOutput, Size = 32672 },
				new DataParameter("BCCADDRESSES",       BCCADDRESSES)       { Direction = ParameterDirection.InputOutput, Size = 32672 });

			CONN               = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).              Value);
			RECIPIENTADDRESSES = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["RECIPIENTADDRESSES"]).Value);
			CCADDRESSES        = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["CCADDRESSES"]).       Value);
			BCCADDRESSES       = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["BCCADDRESSES"]).      Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_BOUNDARY_TEXT

		public static int IMP_ADD_BOUNDARY_TEXT(this DataConnection dataConnection, object CONN, string BOUNDARYTEXT)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_BOUNDARY_TEXT",
				new DataParameter("CONN",         CONN),
				new DataParameter("BOUNDARYTEXT", BOUNDARYTEXT));
		}

		#endregion

		#region IMP_ADD_BOUNDARY_TEXT_AT_END

		public static int IMP_ADD_BOUNDARY_TEXT_AT_END(this DataConnection dataConnection, ref object CONN, string BOUNDARYTEXT)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_BOUNDARY_TEXT_AT_END",
				new DataParameter("CONN",         CONN)         { Direction = ParameterDirection.InputOutput },
				new DataParameter("BOUNDARYTEXT", BOUNDARYTEXT));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_CONTENT_DISPOSITION

		public static int IMP_ADD_CONTENT_DISPOSITION(this DataConnection dataConnection, ref object CONN, object ATT_INLINE, string ATT_FILENAME)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_CONTENT_DISPOSITION",
				new DataParameter("CONN",         CONN)         { Direction = ParameterDirection.InputOutput },
				new DataParameter("ATT_INLINE",   ATT_INLINE),
				new DataParameter("ATT_FILENAME", ATT_FILENAME));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_CONTENT_TRANSFER_ENCODING

		public static int IMP_ADD_CONTENT_TRANSFER_ENCODING(this DataConnection dataConnection, ref object CONN, string ENCODING)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_CONTENT_TRANSFER_ENCODING",
				new DataParameter("CONN",     CONN)     { Direction = ParameterDirection.InputOutput },
				new DataParameter("ENCODING", ENCODING));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_CONTENT_TYPE

		public static int IMP_ADD_CONTENT_TYPE(this DataConnection dataConnection, ref object CONN, string MIME_TYPE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_CONTENT_TYPE",
				new DataParameter("CONN",      CONN)      { Direction = ParameterDirection.InputOutput },
				new DataParameter("MIME_TYPE", MIME_TYPE));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_MIME

		public static int IMP_ADD_MIME(this DataConnection dataConnection, ref object CONN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_MIME",
				new DataParameter("CONN", CONN) { Direction = ParameterDirection.InputOutput });

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_PRIORITY

		public static int IMP_ADD_PRIORITY(this DataConnection dataConnection, ref object CONN, int? PRIORITY)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_PRIORITY",
				new DataParameter("CONN",     CONN)     { Direction = ParameterDirection.InputOutput },
				new DataParameter("PRIORITY", PRIORITY));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_RECIPIENTS

		public static int IMP_ADD_RECIPIENTS(this DataConnection dataConnection, ref object CONN, ref string COMMASEPERATEDADDRESSES, ref string MESSAGEHEADER, string TYPEOFCOPY)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_RECIPIENTS",
				new DataParameter("CONN",                    CONN)                    { Direction = ParameterDirection.InputOutput },
				new DataParameter("COMMASEPERATEDADDRESSES", COMMASEPERATEDADDRESSES) { Direction = ParameterDirection.InputOutput, Size = 32672 },
				new DataParameter("MESSAGEHEADER",           MESSAGEHEADER)           { Direction = ParameterDirection.InputOutput, Size = 32672 },
				new DataParameter("TYPEOFCOPY",              TYPEOFCOPY));

			CONN                    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).                   Value);
			COMMASEPERATEDADDRESSES = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["COMMASEPERATEDADDRESSES"]).Value);
			MESSAGEHEADER           = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGEHEADER"]).          Value);

			return ret;
		}

		#endregion

		#region IMP_ADD_SUBJECT

		public static int IMP_ADD_SUBJECT(this DataConnection dataConnection, ref object CONN, string SUBJECT)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_ADD_SUBJECT",
				new DataParameter("CONN",    CONN)    { Direction = ParameterDirection.InputOutput },
				new DataParameter("SUBJECT", SUBJECT));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_CHANGE

		public static int IMP_CHANGE(this DataConnection dataConnection, decimal? JOB, string WHAT, DateTime? NEXT_DATE, string INTERVAL, int? INSTANCE, object FORCE, string ROUTINENAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_CHANGE",
				new DataParameter("JOB",         JOB),
				new DataParameter("WHAT",        WHAT),
				new DataParameter("NEXT_DATE",   NEXT_DATE),
				new DataParameter("INTERVAL",    INTERVAL),
				new DataParameter("INSTANCE",    INSTANCE),
				new DataParameter("FORCE",       FORCE),
				new DataParameter("ROUTINENAME", ROUTINENAME));
		}

		#endregion

		#region IMP_CLOSE_CONNECTION

		public static int IMP_CLOSE_CONNECTION(this DataConnection dataConnection, int? PRIVATE_SD)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_CLOSE_CONNECTION",
				new DataParameter("PRIVATE_SD", PRIVATE_SD));
		}

		#endregion

		#region IMP_COMMAND

		public static int IMP_COMMAND(this DataConnection dataConnection, ref object C, string CMD, string ARG, out object REPLY, int? RAISEEXCEPTION, string ROUTINENAME)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_COMMAND",
				new DataParameter("C",              C)              { Direction = ParameterDirection.InputOutput },
				new DataParameter("CMD",            CMD),
				new DataParameter("ARG",            ARG),
				new DataParameter("RAISEEXCEPTION", RAISEEXCEPTION),
				new DataParameter("ROUTINENAME",    ROUTINENAME));

			C     = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).    Value);
			REPLY = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["REPLY"]).Value);

			return ret;
		}

		#endregion

		#region IMP_COMMAND2

		public static int IMP_COMMAND2(this DataConnection dataConnection, ref object C, string CMD, string ARG, string ROUTINENAME)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_COMMAND2",
				new DataParameter("C",           C)           { Direction = ParameterDirection.InputOutput },
				new DataParameter("CMD",         CMD),
				new DataParameter("ARG",         ARG),
				new DataParameter("ROUTINENAME", ROUTINENAME));

			C = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).Value);

			return ret;
		}

		#endregion

		#region IMP_CONVERTREPLYTOSTRUCT

		public static int IMP_CONVERTREPLYTOSTRUCT(this DataConnection dataConnection, string STRREPLY, out object REPLY, out object ISLASTREPLYLINE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_CONVERTREPLYTOSTRUCT",
				new DataParameter("STRREPLY", STRREPLY));

			REPLY           = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["REPLY"]).          Value);
			ISLASTREPLYLINE = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["ISLASTREPLYLINE"]).Value);

			return ret;
		}

		#endregion

		#region IMP_CONVERTSMTPTOTCPSTRUCT

		public static int IMP_CONVERTSMTPTOTCPSTRUCT(this DataConnection dataConnection, object SMTPCON, out object TCPCONN, string ROUTINENAME)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_CONVERTSMTPTOTCPSTRUCT",
				new DataParameter("SMTPCON",     SMTPCON),
				new DataParameter("ROUTINENAME", ROUTINENAME));

			TCPCONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TCPCONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_DESCRIBE_COLUMNS

		public static int IMP_DESCRIBE_COLUMNS(this DataConnection dataConnection, int? C, out int? COL_CNT)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_DESCRIBE_COLUMNS",
				new DataParameter("C", C));

			COL_CNT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["COL_CNT"]).Value);

			return ret;
		}

		#endregion

		#region IMP_DISCONNECT

		public static int IMP_DISCONNECT(this DataConnection dataConnection, int? PRIVATE_SD)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_DISCONNECT",
				new DataParameter("PRIVATE_SD", PRIVATE_SD));
		}

		#endregion

		#region IMP_FCOPY

		public static int IMP_FCOPY(this DataConnection dataConnection, string DIRNAME, string FILENAME, string DESTDIR, string DESTFILE, int? BEGIN, int? END)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_FCOPY",
				new DataParameter("DIRNAME",  DIRNAME),
				new DataParameter("FILENAME", FILENAME),
				new DataParameter("DESTDIR",  DESTDIR),
				new DataParameter("DESTFILE", DESTFILE),
				new DataParameter("BEGIN",    BEGIN),
				new DataParameter("END",      END));
		}

		#endregion

		#region IMP_FOLD_AND_WRITE_DATA

		public static int IMP_FOLD_AND_WRITE_DATA(this DataConnection dataConnection, ref object CONN, string DATA)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_FOLD_AND_WRITE_DATA",
				new DataParameter("CONN", CONN) { Direction = ParameterDirection.InputOutput },
				new DataParameter("DATA", DATA));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_FREMOVE

		public static int IMP_FREMOVE(this DataConnection dataConnection, string DIRNAME, string FILENAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_FREMOVE",
				new DataParameter("DIRNAME",  DIRNAME),
				new DataParameter("FILENAME", FILENAME));
		}

		#endregion

		#region IMP_FRENAME

		public static int IMP_FRENAME(this DataConnection dataConnection, string DIRNAME, string FILENAME, string DESTDIR, string DESTFILE, int? REPLACE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_FRENAME",
				new DataParameter("DIRNAME",  DIRNAME),
				new DataParameter("FILENAME", FILENAME),
				new DataParameter("DESTDIR",  DESTDIR),
				new DataParameter("DESTFILE", DESTFILE),
				new DataParameter("REPLACE",  REPLACE));
		}

		#endregion

		#region IMP_GENERATE_BOUNDARY_TEXT

		public static int IMP_GENERATE_BOUNDARY_TEXT(this DataConnection dataConnection, out string RETURNVALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_GENERATE_BOUNDARY_TEXT");

			RETURNVALUE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["RETURNVALUE"]).Value);

			return ret;
		}

		#endregion

		#region IMP_IS_OPEN

		public static int IMP_IS_OPEN(this DataConnection dataConnection, object FILE, out int? IS_OPEN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_IS_OPEN",
				new DataParameter("FILE", FILE));

			IS_OPEN = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["IS_OPEN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_NEW_LINE

		public static int IMP_NEW_LINE(this DataConnection dataConnection, object FILETYPE, long? NUMEOL)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_NEW_LINE",
				new DataParameter("FILETYPE", FILETYPE),
				new DataParameter("NUMEOL",   NUMEOL));
		}

		#endregion

		#region IMP_PERFORM_ATTACHMENT_TASKS

		public static int IMP_PERFORM_ATTACHMENT_TASKS(this DataConnection dataConnection, ref object CONN, string BOUNDARYTEXT, string ATT_MIME_TYPE, object ATT_INLINE, string ATT_FILENAME)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_PERFORM_ATTACHMENT_TASKS",
				new DataParameter("CONN",          CONN)          { Direction = ParameterDirection.InputOutput },
				new DataParameter("BOUNDARYTEXT",  BOUNDARYTEXT),
				new DataParameter("ATT_MIME_TYPE", ATT_MIME_TYPE),
				new DataParameter("ATT_INLINE",    ATT_INLINE),
				new DataParameter("ATT_FILENAME",  ATT_FILENAME));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_PERFORM_FINAL_TASKS

		public static int IMP_PERFORM_FINAL_TASKS(this DataConnection dataConnection, ref object CONN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_PERFORM_FINAL_TASKS",
				new DataParameter("CONN", CONN) { Direction = ParameterDirection.InputOutput });

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_PERFORM_INITIAL_TASKS

		public static int IMP_PERFORM_INITIAL_TASKS(this DataConnection dataConnection, out object CONN, string SENDER, string RECIPIENTS, string CC, string BCC, string SUBJECT, int? PRIORITY)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_PERFORM_INITIAL_TASKS",
				new DataParameter("SENDER",     SENDER),
				new DataParameter("RECIPIENTS", RECIPIENTS),
				new DataParameter("CC",         CC),
				new DataParameter("BCC",        BCC),
				new DataParameter("SUBJECT",    SUBJECT),
				new DataParameter("PRIORITY",   PRIORITY));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_PERFORM_PRE_ATTACHMENT_TASKS

		public static int IMP_PERFORM_PRE_ATTACHMENT_TASKS(this DataConnection dataConnection, ref object CONN, out string BOUNDARYTEXT, string MIME_TYPE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_PERFORM_PRE_ATTACHMENT_TASKS",
				new DataParameter("CONN",      CONN)      { Direction = ParameterDirection.InputOutput },
				new DataParameter("MIME_TYPE", MIME_TYPE));

			CONN         = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).        Value);
			BOUNDARYTEXT = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["BOUNDARYTEXT"]).Value);

			return ret;
		}

		#endregion

		#region IMP_PREPARE

		public static int IMP_PREPARE(this DataConnection dataConnection, string SENDER, out object CONN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_PREPARE",
				new DataParameter("SENDER", SENDER));

			CONN = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CONN"]).Value);

			return ret;
		}

		#endregion

		#region IMP_PUTF

		public static int IMP_PUTF(this DataConnection dataConnection, object FILETYPE, string FORMAT, short? ARGC, string ARG1, string ARG2, string ARG3, string ARG4, string ARG5)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_PUTF",
				new DataParameter("FILETYPE", FILETYPE),
				new DataParameter("FORMAT",   FORMAT),
				new DataParameter("ARGC",     ARGC),
				new DataParameter("ARG1",     ARG1),
				new DataParameter("ARG2",     ARG2),
				new DataParameter("ARG3",     ARG3),
				new DataParameter("ARG4",     ARG4),
				new DataParameter("ARG5",     ARG5));
		}

		#endregion

		#region IMP_PUT_LINE

		public static int IMP_PUT_LINE(this DataConnection dataConnection, object FILETYPE, string LINE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_PUT_LINE",
				new DataParameter("FILETYPE", FILETYPE),
				new DataParameter("LINE",     LINE));
		}

		#endregion

		#region IMP_READ_LINE

		public static int IMP_READ_LINE(this DataConnection dataConnection, int? PRIVATE_SD, int? TX_TIMEOUT, out string DATA, out int? RET_VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_READ_LINE",
				new DataParameter("PRIVATE_SD", PRIVATE_SD),
				new DataParameter("TX_TIMEOUT", TX_TIMEOUT));

			DATA      = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DATA"]).     Value);
			RET_VALUE = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RET_VALUE"]).Value);

			return ret;
		}

		#endregion

		#region IMP_SEPARATE_ADDRESS

		public static int IMP_SEPARATE_ADDRESS(this DataConnection dataConnection, ref string COMMASEPARATEDADDRESSES, out string SEPARATEDADDRESS, out int? MOREADDRESSESFOLLOW)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IMP_SEPARATE_ADDRESS",
				new DataParameter("COMMASEPARATEDADDRESSES", COMMASEPARATEDADDRESSES) { Direction = ParameterDirection.InputOutput, Size = 32672 });

			COMMASEPARATEDADDRESSES = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["COMMASEPARATEDADDRESSES"]).Value);
			SEPARATEDADDRESS        = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SEPARATEDADDRESS"]).       Value);
			MOREADDRESSESFOLLOW     = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["MOREADDRESSESFOLLOW"]).    Value);

			return ret;
		}

		#endregion

		#region IMP_SUBMIT

		public static int IMP_SUBMIT(this DataConnection dataConnection, decimal? JOB, string WHAT, DateTime? NEXTDATE, string INTERVAL, object NOPARSE, int? INSTANCE, object FORCE, string ROUTINENAME, short? MAXINVOCATIONS)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.IMP_SUBMIT",
				new DataParameter("JOB",            JOB),
				new DataParameter("WHAT",           WHAT),
				new DataParameter("NEXTDATE",       NEXTDATE),
				new DataParameter("INTERVAL",       INTERVAL),
				new DataParameter("NOPARSE",        NOPARSE),
				new DataParameter("INSTANCE",       INSTANCE),
				new DataParameter("FORCE",          FORCE),
				new DataParameter("ROUTINENAME",    ROUTINENAME),
				new DataParameter("MAXINVOCATIONS", MAXINVOCATIONS));
		}

		#endregion

		#region INIT

		public static int INIT(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.INIT");
		}

		#endregion

		#region INITMSGCACHE

		public static int INITMSGCACHE(this DataConnection dataConnection, ref object CACHEARRAY, int? ARRAYINDEX, int? MSGINDEX, int? NUMMSGS, string LOC)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.INITMSGCACHE",
				new DataParameter("CACHEARRAY", CACHEARRAY) { Direction = ParameterDirection.InputOutput },
				new DataParameter("ARRAYINDEX", ARRAYINDEX),
				new DataParameter("MSGINDEX",   MSGINDEX),
				new DataParameter("NUMMSGS",    NUMMSGS),
				new DataParameter("LOC",        LOC));

			CACHEARRAY = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["CACHEARRAY"]).Value);

			return ret;
		}

		#endregion

		#region INIT_ATS

		public static int INIT_ATS(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.INIT_ATS");
		}

		#endregion

		#region INTERVAL

		public static int INTERVAL(this DataConnection dataConnection, decimal? JOB, string INTERVAL)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.INTERVAL",
				new DataParameter("JOB",      JOB),
				new DataParameter("INTERVAL", INTERVAL));
		}

		#endregion

		#region IS_OPEN

		public static int IS_OPEN(this DataConnection dataConnection, int? C, out int? RET)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IS_OPEN",
				new DataParameter("C", C));

			RET = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RET"]).Value);

			return ret;
		}

		#endregion

		#region IS_VALID

		public static int IS_VALID(this DataConnection dataConnection, string WHAT, object NOPARSE, string INTERVAL, string ROUTINENAME, out object VALID)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.IS_VALID",
				new DataParameter("WHAT",        WHAT),
				new DataParameter("NOPARSE",     NOPARSE),
				new DataParameter("INTERVAL",    INTERVAL),
				new DataParameter("ROUTINENAME", ROUTINENAME));

			VALID = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["VALID"]).Value);

			return ret;
		}

		#endregion

		#region ITMAGENT_SET_CONFIG

		public static int ITMAGENT_SET_CONFIG(this DataConnection dataConnection, string HOST, int? PORT, string OPTIONS, short? ACTION, out int? SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ITMAGENT_SET_CONFIG",
				new DataParameter("HOST",    HOST),
				new DataParameter("PORT",    PORT),
				new DataParameter("OPTIONS", OPTIONS),
				new DataParameter("ACTION",  ACTION));

			SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LAST_ROW_COUNT

		public static int LAST_ROW_COUNT(this DataConnection dataConnection, out int? RET)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.LAST_ROW_COUNT");

			RET = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RET"]).Value);

			return ret;
		}

		#endregion

		#region LIST_SRVR_NODES

		public static int LIST_SRVR_NODES(this DataConnection dataConnection, string WRAPPERNAME, string SERVERTYPE, string SERVERVERSION, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.LIST_SRVR_NODES",
				new DataParameter("WRAPPERNAME",   WRAPPERNAME),
				new DataParameter("SERVERTYPE",    SERVERTYPE),
				new DataParameter("SERVERVERSION", SERVERVERSION));

			OUT_SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LIST_SRVR_OPTIONS

		public static int LIST_SRVR_OPTIONS(this DataConnection dataConnection, string WRAPPERNAME, string SERVERTYPE, string SERVERVERSION, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.LIST_SRVR_OPTIONS",
				new DataParameter("WRAPPERNAME",   WRAPPERNAME),
				new DataParameter("SERVERTYPE",    SERVERTYPE),
				new DataParameter("SERVERVERSION", SERVERVERSION));

			OUT_SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LIST_SRVR_OPTVALS

		public static int LIST_SRVR_OPTVALS(this DataConnection dataConnection, string WRAPPERNAME, string SERVERTYPE, string SERVERVERSION, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.LIST_SRVR_OPTVALS",
				new DataParameter("WRAPPERNAME",   WRAPPERNAME),
				new DataParameter("SERVERTYPE",    SERVERTYPE),
				new DataParameter("SERVERVERSION", SERVERVERSION));

			OUT_SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LIST_SRVR_TYPES

		public static int LIST_SRVR_TYPES(this DataConnection dataConnection, string WRAPPERNAME, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.LIST_SRVR_TYPES",
				new DataParameter("WRAPPERNAME", WRAPPERNAME));

			OUT_SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LIST_SRVR_VERSIONS

		public static int LIST_SRVR_VERSIONS(this DataConnection dataConnection, string WRAPPERNAME, string SERVERTYPE, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.LIST_SRVR_VERSIONS",
				new DataParameter("WRAPPERNAME", WRAPPERNAME),
				new DataParameter("SERVERTYPE",  SERVERTYPE));

			OUT_SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LIST_WRAPPERS

		public static int LIST_WRAPPERS(this DataConnection dataConnection, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.LIST_WRAPPERS");

			OUT_SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LIST_WRAP_OPTIONS

		public static int LIST_WRAP_OPTIONS(this DataConnection dataConnection, string WRAPPERNAME, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.LIST_WRAP_OPTIONS",
				new DataParameter("WRAPPERNAME", WRAPPERNAME));

			OUT_SQLCODE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region LOCKWAIT

		public static int LOCKWAIT(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.LOCKWAIT");
		}

		#endregion

		#region MON_INCREMENT_INTERVAL_ID

		public static int MON_INCREMENT_INTERVAL_ID(this DataConnection dataConnection, out long? NEW_ID)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.MON_INCREMENT_INTERVAL_ID");

			NEW_ID = Converter.ChangeTypeTo<long?>(((IDbDataParameter)dataConnection.Command.Parameters["NEW_ID"]).Value);

			return ret;
		}

		#endregion

		#region MY_SYS_INIT

		public static int MY_SYS_INIT(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.MY_SYS_INIT");
		}

		#endregion

		#region NAMERESOLVEFP

		public static int NAMERESOLVEFP(this DataConnection dataConnection, string NAME, string A, string B, string C, out string SCHEMA_NAME, out string PART1, out string PART2, out int? PART1_TYPE, out int? OBJECT_NUMBER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.NAMERESOLVEFP",
				new DataParameter("NAME", NAME),
				new DataParameter("A",    A),
				new DataParameter("B",    B),
				new DataParameter("C",    C));

			SCHEMA_NAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SCHEMA_NAME"]).  Value);
			PART1         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART1"]).        Value);
			PART2         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART2"]).        Value);
			PART1_TYPE    = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["PART1_TYPE"]).   Value);
			OBJECT_NUMBER = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["OBJECT_NUMBER"]).Value);

			return ret;
		}

		#endregion

		#region NAMERESOLVET

		public static int NAMERESOLVET(this DataConnection dataConnection, string NAME, string A, string B, string C, out string SCHEMA_NAME, out string PART1, out string PART2, out int? PART1_TYPE, out int? OBJECT_NUMBER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.NAMERESOLVET",
				new DataParameter("NAME", NAME),
				new DataParameter("A",    A),
				new DataParameter("B",    B),
				new DataParameter("C",    C));

			SCHEMA_NAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SCHEMA_NAME"]).  Value);
			PART1         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART1"]).        Value);
			PART2         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART2"]).        Value);
			PART1_TYPE    = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["PART1_TYPE"]).   Value);
			OBJECT_NUMBER = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["OBJECT_NUMBER"]).Value);

			return ret;
		}

		#endregion

		#region NAMERESOLVETVSS

		public static int NAMERESOLVETVSS(this DataConnection dataConnection, string NAME, string A, string B, string C, out string SCHEMA_NAME, out string PART1, out string PART2, out int? PART1_TYPE, out int? OBJECT_NUMBER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.NAMERESOLVETVSS",
				new DataParameter("NAME", NAME),
				new DataParameter("A",    A),
				new DataParameter("B",    B),
				new DataParameter("C",    C));

			SCHEMA_NAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SCHEMA_NAME"]).  Value);
			PART1         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART1"]).        Value);
			PART2         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART2"]).        Value);
			PART1_TYPE    = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["PART1_TYPE"]).   Value);
			OBJECT_NUMBER = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["OBJECT_NUMBER"]).Value);

			return ret;
		}

		#endregion

		#region NAME_RESOLVE

		public static int NAME_RESOLVE(this DataConnection dataConnection, string NAME, int? CONTEXT, out string SCHEMA_NAME, out string PART1, out string PART2, out string DBLINK, out int? PART1_TYPE, out int? OBJECT_NUMBER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.NAME_RESOLVE",
				new DataParameter("NAME",    NAME),
				new DataParameter("CONTEXT", CONTEXT));

			SCHEMA_NAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SCHEMA_NAME"]).  Value);
			PART1         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART1"]).        Value);
			PART2         = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PART2"]).        Value);
			DBLINK        = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DBLINK"]).       Value);
			PART1_TYPE    = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["PART1_TYPE"]).   Value);
			OBJECT_NUMBER = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["OBJECT_NUMBER"]).Value);

			return ret;
		}

		#endregion

		#region NAME_TOKENIZE

		public static int NAME_TOKENIZE(this DataConnection dataConnection, string NAME, out string A, out string B, out string C, out string DBLINK, out int? NEXTPOSITION)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.NAME_TOKENIZE",
				new DataParameter("NAME", NAME));

			A            = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["A"]).           Value);
			B            = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["B"]).           Value);
			C            = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).           Value);
			DBLINK       = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DBLINK"]).      Value);
			NEXTPOSITION = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["NEXTPOSITION"]).Value);

			return ret;
		}

		#endregion

		#region NEXT_DATE

		public static int NEXT_DATE(this DataConnection dataConnection, decimal? JOB, DateTime? NEXT_DATE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.NEXT_DATE",
				new DataParameter("JOB",       JOB),
				new DataParameter("NEXT_DATE", NEXT_DATE));
		}

		#endregion

		#region ODBC_DISCOVERY

		public static int ODBC_DISCOVERY(this DataConnection dataConnection, string SERVERNAME, string USERNAME, string AUTHENTICATION, string CATALOGNAMEOPERATOR, string CATALOGNAMEPATTERN, string SCHEMANAMEOPERATOR, string SCHEMANAMEPATTERN, string TABLENAMEOPERATOR, string TABLENAMEPATTERN, out int? SQLCODE, out string SQLSTATE, out string MESSAGETEXT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ODBC_DISCOVERY",
				new DataParameter("SERVERNAME",          SERVERNAME),
				new DataParameter("USERNAME",            USERNAME),
				new DataParameter("AUTHENTICATION",      AUTHENTICATION),
				new DataParameter("CATALOGNAMEOPERATOR", CATALOGNAMEOPERATOR),
				new DataParameter("CATALOGNAMEPATTERN",  CATALOGNAMEPATTERN),
				new DataParameter("SCHEMANAMEOPERATOR",  SCHEMANAMEOPERATOR),
				new DataParameter("SCHEMANAMEPATTERN",   SCHEMANAMEPATTERN),
				new DataParameter("TABLENAMEOPERATOR",   TABLENAMEOPERATOR),
				new DataParameter("TABLENAMEPATTERN",    TABLENAMEPATTERN));

			SQLCODE     = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["SQLCODE"]).    Value);
			SQLSTATE    = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SQLSTATE"]).   Value);
			MESSAGETEXT = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGETEXT"]).Value);

			return ret;
		}

		#endregion

		#region ODBC_DISCOVERY2

		public static int ODBC_DISCOVERY2(this DataConnection dataConnection, string SERVERNAME, string USERNAME, string AUTHENTICATION, string CATALOGNAMEOPERATOR, string CATALOGNAMEPATTERN, string SCHEMANAMEOPERATOR, string SCHEMANAMEPATTERN, string TABLENAMEOPERATOR, string TABLENAMEPATTERN)
		{
			return dataConnection.ExecuteProc("SYSPROC.ODBC_DISCOVERY2",
				new DataParameter("SERVERNAME",          SERVERNAME),
				new DataParameter("USERNAME",            USERNAME),
				new DataParameter("AUTHENTICATION",      AUTHENTICATION),
				new DataParameter("CATALOGNAMEOPERATOR", CATALOGNAMEOPERATOR),
				new DataParameter("CATALOGNAMEPATTERN",  CATALOGNAMEPATTERN),
				new DataParameter("SCHEMANAMEOPERATOR",  SCHEMANAMEOPERATOR),
				new DataParameter("SCHEMANAMEPATTERN",   SCHEMANAMEPATTERN),
				new DataParameter("TABLENAMEOPERATOR",   TABLENAMEOPERATOR),
				new DataParameter("TABLENAMEPATTERN",    TABLENAMEPATTERN));
		}

		#endregion

		#region ODBC_DISCOVERY2_32

		public static int ODBC_DISCOVERY2_32(this DataConnection dataConnection, string SERVERNAME, string USERNAME, string AUTHENTICATION, string CATALOGNAMEOPERATOR, string CATALOGNAMEPATTERN, string SCHEMANAMEOPERATOR, string SCHEMANAMEPATTERN, string TABLENAMEOPERATOR, string TABLENAMEPATTERN)
		{
			return dataConnection.ExecuteProc("SYSPROC.ODBC_DISCOVERY2_32",
				new DataParameter("SERVERNAME",          SERVERNAME),
				new DataParameter("USERNAME",            USERNAME),
				new DataParameter("AUTHENTICATION",      AUTHENTICATION),
				new DataParameter("CATALOGNAMEOPERATOR", CATALOGNAMEOPERATOR),
				new DataParameter("CATALOGNAMEPATTERN",  CATALOGNAMEPATTERN),
				new DataParameter("SCHEMANAMEOPERATOR",  SCHEMANAMEOPERATOR),
				new DataParameter("SCHEMANAMEPATTERN",   SCHEMANAMEPATTERN),
				new DataParameter("TABLENAMEOPERATOR",   TABLENAMEOPERATOR),
				new DataParameter("TABLENAMEPATTERN",    TABLENAMEPATTERN));
		}

		#endregion

		#region ODBC_DISCOVERY_32

		public static int ODBC_DISCOVERY_32(this DataConnection dataConnection, string SERVERNAME, string USERNAME, string AUTHENTICATION, string CATALOGNAMEOPERATOR, string CATALOGNAMEPATTERN, string SCHEMANAMEOPERATOR, string SCHEMANAMEPATTERN, string TABLENAMEOPERATOR, string TABLENAMEPATTERN, out int? SQLCODE, out string SQLSTATE, out string MESSAGETEXT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.ODBC_DISCOVERY_32",
				new DataParameter("SERVERNAME",          SERVERNAME),
				new DataParameter("USERNAME",            USERNAME),
				new DataParameter("AUTHENTICATION",      AUTHENTICATION),
				new DataParameter("CATALOGNAMEOPERATOR", CATALOGNAMEOPERATOR),
				new DataParameter("CATALOGNAMEPATTERN",  CATALOGNAMEPATTERN),
				new DataParameter("SCHEMANAMEOPERATOR",  SCHEMANAMEOPERATOR),
				new DataParameter("SCHEMANAMEPATTERN",   SCHEMANAMEPATTERN),
				new DataParameter("TABLENAMEOPERATOR",   TABLENAMEOPERATOR),
				new DataParameter("TABLENAMEPATTERN",    TABLENAMEPATTERN));

			SQLCODE     = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["SQLCODE"]).    Value);
			SQLSTATE    = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["SQLSTATE"]).   Value);
			MESSAGETEXT = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGETEXT"]).Value);

			return ret;
		}

		#endregion

		#region OPEN_CLOB

		public static int OPEN_CLOB(this DataConnection dataConnection, string LOB_LOC, int? OPEN_MODE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.OPEN_CLOB",
				new DataParameter("LOB_LOC",   LOB_LOC),
				new DataParameter("OPEN_MODE", OPEN_MODE));
		}

		#endregion

		#region OPEN_CURSOR

		public static int OPEN_CURSOR(this DataConnection dataConnection, out int? C)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.OPEN_CURSOR");

			C = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).Value);

			return ret;
		}

		#endregion

		#region PARSE

		public static int PARSE(this DataConnection dataConnection, int? C, string STATEMENT, int? LANGUAGE_FLAG)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.PARSE",
				new DataParameter("C",             C),
				new DataParameter("STATEMENT",     STATEMENT),
				new DataParameter("LANGUAGE_FLAG", LANGUAGE_FLAG));
		}

		#endregion

		#region PARSE_VALUES

		public static int PARSE_VALUES(this DataConnection dataConnection, string JOB, string INTERVALIN, string WHATIN, out string WHATOUT, out string INTERVALOUT)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.PARSE_VALUES",
				new DataParameter("JOB",        JOB),
				new DataParameter("INTERVALIN", INTERVALIN),
				new DataParameter("WHATIN",     WHATIN));

			WHATOUT     = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["WHATOUT"]).    Value);
			INTERVALOUT = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["INTERVALOUT"]).Value);

			return ret;
		}

		#endregion

		#region PKGCACHE

		public static int PKGCACHE(this DataConnection dataConnection, int? CACHE_INTERVAL, object SECTION_TYPE, short? MEMBER)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.PKGCACHE",
				new DataParameter("CACHE_INTERVAL", CACHE_INTERVAL),
				new DataParameter("SECTION_TYPE",   SECTION_TYPE),
				new DataParameter("MEMBER",         MEMBER));
		}

		#endregion

		#region POLICY_INSTALLOC

		public static int POLICY_INSTALLOC(this DataConnection dataConnection, object ACTION, string MED, string DECISION, string NAME, string FILENAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.POLICY_INSTALLOC",
				new DataParameter("ACTION",   ACTION),
				new DataParameter("MED",      MED),
				new DataParameter("DECISION", DECISION),
				new DataParameter("NAME",     NAME),
				new DataParameter("FILENAME", FILENAME));
		}

		#endregion

		#region POLICY_RETRIEVE

		public static int POLICY_RETRIEVE(this DataConnection dataConnection, string MED, string DECISION, string NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.POLICY_RETRIEVE",
				new DataParameter("MED",      MED),
				new DataParameter("DECISION", DECISION),
				new DataParameter("NAME",     NAME));
		}

		#endregion

		#region PREPARE_TASK_INFO

		public static int PREPARE_TASK_INFO(this DataConnection dataConnection, decimal? JOB, string WHAT, string INTERVAL, out string TASKNAME, out string PROCSCHEMA, out string PROCNAME, out string PROCINPUT)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.PREPARE_TASK_INFO",
				new DataParameter("JOB",      JOB),
				new DataParameter("WHAT",     WHAT),
				new DataParameter("INTERVAL", INTERVAL));

			TASKNAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["TASKNAME"]).  Value);
			PROCSCHEMA = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PROCSCHEMA"]).Value);
			PROCNAME   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PROCNAME"]).  Value);
			PROCINPUT  = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["PROCINPUT"]). Value);

			return ret;
		}

		#endregion

		#region PSMD_CLEAR_SESSION

		public static int PSMD_CLEAR_SESSION(this DataConnection dataConnection, double? SESSIONID, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_CLEAR_SESSION",
				new DataParameter("SESSIONID", SESSIONID));

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region PSMD_GET_LEVEL

		public static int PSMD_GET_LEVEL(this DataConnection dataConnection, string REQUESTXML, out string REPLYXML)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_GET_LEVEL",
				new DataParameter("REQUESTXML", REQUESTXML));

			REPLYXML = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["REPLYXML"]).Value);

			return ret;
		}

		#endregion

		#region PSMD_GET_REPORT

		public static int PSMD_GET_REPORT(this DataConnection dataConnection, double? SESSIONID, out string XMLDATA, out string BINDATA, int? WAITTIME, out int? MOREDATA, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_GET_REPORT",
				new DataParameter("SESSIONID", SESSIONID),
				new DataParameter("WAITTIME",  WAITTIME));

			XMLDATA  = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["XMLDATA"]). Value);
			BINDATA  = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["BINDATA"]). Value);
			MOREDATA = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["MOREDATA"]).Value);
			RESULT   = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).  Value);

			return ret;
		}

		#endregion

		#region PSMD_INIT_SESSION

		public static int PSMD_INIT_SESSION(this DataConnection dataConnection, double? SESSIONID, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_INIT_SESSION",
				new DataParameter("SESSIONID", SESSIONID));

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region PSMD_PUT_COMMAND

		public static int PSMD_PUT_COMMAND(this DataConnection dataConnection, double? SESSIONID, string XMLDATA, string BINDATA, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_PUT_COMMAND",
				new DataParameter("SESSIONID", SESSIONID),
				new DataParameter("XMLDATA",   XMLDATA),
				new DataParameter("BINDATA",   BINDATA));

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region PSMD_SET_COMPILEMODE

		public static int PSMD_SET_COMPILEMODE(this DataConnection dataConnection, int? COMPILEMODE)
		{
			return dataConnection.ExecuteProc("SYSPROC.PSMD_SET_COMPILEMODE",
				new DataParameter("COMPILEMODE", COMPILEMODE));
		}

		#endregion

		#region PSMD_SET_DEBUGINFO

		public static int PSMD_SET_DEBUGINFO(this DataConnection dataConnection, string DEBUGINFO, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_SET_DEBUGINFO",
				new DataParameter("DEBUGINFO", DEBUGINFO));

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region PSMD_SET_SESSION

		public static int PSMD_SET_SESSION(this DataConnection dataConnection, double? SESSIONID, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_SET_SESSION",
				new DataParameter("SESSIONID", SESSIONID));

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region PSMD_TERM_SESSION

		public static int PSMD_TERM_SESSION(this DataConnection dataConnection, double? SESSIONID, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.PSMD_TERM_SESSION",
				new DataParameter("SESSIONID", SESSIONID));

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region PURGE

		public static int PURGE(this DataConnection dataConnection, string PIPENAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.PURGE",
				new DataParameter("PIPENAME", PIPENAME));
		}

		#endregion

		#region PUT

		public static int PUT(this DataConnection dataConnection, string ITEM, object FILE, string BUFFER)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.PUT",
				new DataParameter("ITEM",   ITEM),
				new DataParameter("FILE",   FILE),
				new DataParameter("BUFFER", BUFFER));
		}

		#endregion

		#region PUT_LINE

		public static int PUT_LINE(this DataConnection dataConnection, string ITEM, object FILE, string BUFFER)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.PUT_LINE",
				new DataParameter("ITEM",   ITEM),
				new DataParameter("FILE",   FILE),
				new DataParameter("BUFFER", BUFFER));
		}

		#endregion

		#region READ_CLOB

		public static int READ_CLOB(this DataConnection dataConnection, string LOB_LOC, ref int? AMOUNT, int? OFFSET, out string BUFFER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.READ_CLOB",
				new DataParameter("LOB_LOC", LOB_LOC),
				new DataParameter("AMOUNT",  AMOUNT)  { Direction = ParameterDirection.InputOutput, Size = 4 },
				new DataParameter("OFFSET",  OFFSET));

			AMOUNT = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["AMOUNT"]).Value);
			BUFFER = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["BUFFER"]).Value);

			return ret;
		}

		#endregion

		#region READ_LINE

		public static int READ_LINE(this DataConnection dataConnection, object C, out string DATA, out int? RVALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.READ_LINE",
				new DataParameter("C", C));

			DATA   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["DATA"]).  Value);
			RVALUE = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RVALUE"]).Value);

			return ret;
		}

		#endregion

		#region RECOVERJAR

		public static int RECOVERJAR(this DataConnection dataConnection, string JARID)
		{
			return dataConnection.ExecuteProc("SQLJ.RECOVERJAR",
				new DataParameter("JARID", JARID));
		}

		#endregion

		#region REFRESH_CLASSES

		public static int REFRESH_CLASSES(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SQLJ.REFRESH_CLASSES");
		}

		#endregion

		#region REGISTER

		public static int REGISTER(this DataConnection dataConnection, string NAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.REGISTER",
				new DataParameter("NAME", NAME));
		}

		#endregion

		#region REGISTER_INTERNAL

		public static int REGISTER_INTERNAL(this DataConnection dataConnection, string NAME, string APPLICATIONID)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.REGISTER_INTERNAL",
				new DataParameter("NAME",          NAME),
				new DataParameter("APPLICATIONID", APPLICATIONID));
		}

		#endregion

		#region REMOTE_QUERY

		public static int REMOTE_QUERY(this DataConnection dataConnection, string SERVERNAME, string SCHEMAOPERATOR, string SCHEMAPATTERN, string TABLEOPERATOR, string TABLEPATTERN, short? PERFORMCOUNT, out string REMOTESQL, out int? OUT_SQLCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.REMOTE_QUERY",
				new DataParameter("SERVERNAME",     SERVERNAME),
				new DataParameter("SCHEMAOPERATOR", SCHEMAOPERATOR),
				new DataParameter("SCHEMAPATTERN",  SCHEMAPATTERN),
				new DataParameter("TABLEOPERATOR",  TABLEOPERATOR),
				new DataParameter("TABLEPATTERN",   TABLEPATTERN),
				new DataParameter("PERFORMCOUNT",   PERFORMCOUNT));

			REMOTESQL   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["REMOTESQL"]).  Value);
			OUT_SQLCODE = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["OUT_SQLCODE"]).Value);

			return ret;
		}

		#endregion

		#region REMOTE_QUERY2

		public static int REMOTE_QUERY2(this DataConnection dataConnection, string SERVERNAME, string SCHEMAOPERATOR, string SCHEMAPATTERN, string TABLEOPERATOR, string TABLEPATTERN, short? PERFORMCOUNT, out string REMOTESQL)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.REMOTE_QUERY2",
				new DataParameter("SERVERNAME",     SERVERNAME),
				new DataParameter("SCHEMAOPERATOR", SCHEMAOPERATOR),
				new DataParameter("SCHEMAPATTERN",  SCHEMAPATTERN),
				new DataParameter("TABLEOPERATOR",  TABLEOPERATOR),
				new DataParameter("TABLEPATTERN",   TABLEPATTERN),
				new DataParameter("PERFORMCOUNT",   PERFORMCOUNT));

			REMOTESQL = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["REMOTESQL"]).Value);

			return ret;
		}

		#endregion

		#region REMOVE

		public static int REMOVE(this DataConnection dataConnection, string NAME, decimal? JOB)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.REMOVE",
				new DataParameter("NAME", NAME),
				new DataParameter("JOB",  JOB));
		}

		#endregion

		#region REMOVEALL

		public static int REMOVEALL(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.REMOVEALL");
		}

		#endregion

		#region REMOVEALL_INTERNAL

		public static int REMOVEALL_INTERNAL(this DataConnection dataConnection, string APPLICATIONID)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.REMOVEALL_INTERNAL",
				new DataParameter("APPLICATIONID", APPLICATIONID));
		}

		#endregion

		#region REMOVE_INTERNAL

		public static int REMOVE_INTERNAL(this DataConnection dataConnection, string NAME, string APPLICATIONID)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.REMOVE_INTERNAL",
				new DataParameter("NAME",          NAME),
				new DataParameter("APPLICATIONID", APPLICATIONID));
		}

		#endregion

		#region REORGCHK_IX_STATS

		public static int REORGCHK_IX_STATS(this DataConnection dataConnection, object SCOPE, string CRITERIA)
		{
			return dataConnection.ExecuteProc("SYSPROC.REORGCHK_IX_STATS",
				new DataParameter("SCOPE",    SCOPE),
				new DataParameter("CRITERIA", CRITERIA));
		}

		#endregion

		#region REORGCHK_TB_STATS

		public static int REORGCHK_TB_STATS(this DataConnection dataConnection, object SCOPE, string CRITERIA)
		{
			return dataConnection.ExecuteProc("SYSPROC.REORGCHK_TB_STATS",
				new DataParameter("SCOPE",    SCOPE),
				new DataParameter("CRITERIA", CRITERIA));
		}

		#endregion

		#region RESET_BUFFER

		public static int RESET_BUFFER(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.RESET_BUFFER");
		}

		#endregion

		#region RUN

		public static int RUN(this DataConnection dataConnection, decimal? JOB, object FORCE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.RUN",
				new DataParameter("JOB",   JOB),
				new DataParameter("FORCE", FORCE));
		}

		#endregion

		#region SAVE_EXEC_INFO

		public static int SAVE_EXEC_INFO(this DataConnection dataConnection, string EXEC_ID, string STMT_TEXT, ref object EXEC_ID_ARRAY, ref object EXEC_STMT_ARRAY, ref int? LAST_EXEC_NUM, out int? EXEC_NUM)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.SAVE_EXEC_INFO",
				new DataParameter("EXEC_ID",         EXEC_ID),
				new DataParameter("STMT_TEXT",       STMT_TEXT),
				new DataParameter("EXEC_ID_ARRAY",   EXEC_ID_ARRAY)   { Direction = ParameterDirection.InputOutput },
				new DataParameter("EXEC_STMT_ARRAY", EXEC_STMT_ARRAY) { Direction = ParameterDirection.InputOutput },
				new DataParameter("LAST_EXEC_NUM",   LAST_EXEC_NUM)   { Direction = ParameterDirection.InputOutput, Size = 4 });

			EXEC_ID_ARRAY   = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["EXEC_ID_ARRAY"]).  Value);
			EXEC_STMT_ARRAY = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["EXEC_STMT_ARRAY"]).Value);
			LAST_EXEC_NUM   = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["LAST_EXEC_NUM"]).  Value);
			EXEC_NUM        = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["EXEC_NUM"]).       Value);

			return ret;
		}

		#endregion

		#region SEND

		public static int SEND(this DataConnection dataConnection, string SENDER, string RECIPIENTS, string CC, string BCC, string SUBJECT, string MESSAGE, string MIME_TYPE, int? PRIORITY)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SEND",
				new DataParameter("SENDER",     SENDER),
				new DataParameter("RECIPIENTS", RECIPIENTS),
				new DataParameter("CC",         CC),
				new DataParameter("BCC",        BCC),
				new DataParameter("SUBJECT",    SUBJECT),
				new DataParameter("MESSAGE",    MESSAGE),
				new DataParameter("MIME_TYPE",  MIME_TYPE),
				new DataParameter("PRIORITY",   PRIORITY));
		}

		#endregion

		#region SEND_ATTACH_VARCHAR2

		public static int SEND_ATTACH_VARCHAR2(this DataConnection dataConnection, string SENDER, string RECIPIENTS, string CC, string BCC, string SUBJECT, string MESSAGE, string MIME_TYPE, int? PRIORITY, string ATTACHMENT, object ATT_INLINE, string ATT_MIME_TYPE, string ATT_FILENAME)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SEND_ATTACH_VARCHAR2",
				new DataParameter("SENDER",        SENDER),
				new DataParameter("RECIPIENTS",    RECIPIENTS),
				new DataParameter("CC",            CC),
				new DataParameter("BCC",           BCC),
				new DataParameter("SUBJECT",       SUBJECT),
				new DataParameter("MESSAGE",       MESSAGE),
				new DataParameter("MIME_TYPE",     MIME_TYPE),
				new DataParameter("PRIORITY",      PRIORITY),
				new DataParameter("ATTACHMENT",    ATTACHMENT),
				new DataParameter("ATT_INLINE",    ATT_INLINE),
				new DataParameter("ATT_MIME_TYPE", ATT_MIME_TYPE),
				new DataParameter("ATT_FILENAME",  ATT_FILENAME));
		}

		#endregion

		#region SET_DB2_SQLROUTINE_PREOPTS

		public static int SET_DB2_SQLROUTINE_PREOPTS(this DataConnection dataConnection, string PREPOPTIONS, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SET_DB2_SQLROUTINE_PREOPTS",
				new DataParameter("PREPOPTIONS", PREPOPTIONS));

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region SET_DEFAULTS

		public static int SET_DEFAULTS(this DataConnection dataConnection, int? SENSITIVITY)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SET_DEFAULTS",
				new DataParameter("SENSITIVITY", SENSITIVITY));
		}

		#endregion

		#region SET_ROUTINE_OPTS

		public static int SET_ROUTINE_OPTS(this DataConnection dataConnection, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSPROC.SET_ROUTINE_OPTS",
				new DataParameter("OPTIONS", OPTIONS));
		}

		#endregion

		#region SET_SWRD_SETTINGS

		public static int SET_SWRD_SETTINGS(this DataConnection dataConnection, string DBPGNAME, short? OVERWRITESPEC, short? REDISTMETHOD, string PMAPFILE, string DISTFILE, long? STEPSIZE, short? TOTALSTEPS, short? STAGESIZE, short? NEXTSTEP, short? PROCESSSTATE, string PNUMBER, string PWEIGHT)
		{
			return dataConnection.ExecuteProc("SYSPROC.SET_SWRD_SETTINGS",
				new DataParameter("DBPGNAME",      DBPGNAME),
				new DataParameter("OVERWRITESPEC", OVERWRITESPEC),
				new DataParameter("REDISTMETHOD",  REDISTMETHOD),
				new DataParameter("PMAPFILE",      PMAPFILE),
				new DataParameter("DISTFILE",      DISTFILE),
				new DataParameter("STEPSIZE",      STEPSIZE),
				new DataParameter("TOTALSTEPS",    TOTALSTEPS),
				new DataParameter("STAGESIZE",     STAGESIZE),
				new DataParameter("NEXTSTEP",      NEXTSTEP),
				new DataParameter("PROCESSSTATE",  PROCESSSTATE),
				new DataParameter("PNUMBER",       PNUMBER),
				new DataParameter("PWEIGHT",       PWEIGHT));
		}

		#endregion

		#region SIGNAL

		public static int SIGNAL(this DataConnection dataConnection, string NAME, string MESSAGE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SIGNAL",
				new DataParameter("NAME",    NAME),
				new DataParameter("MESSAGE", MESSAGE));
		}

		#endregion

		#region SIGNAL_INTERNAL

		public static int SIGNAL_INTERNAL(this DataConnection dataConnection, string NAME, string MESSAGE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SIGNAL_INTERNAL",
				new DataParameter("NAME",    NAME),
				new DataParameter("MESSAGE", MESSAGE));
		}

		#endregion

		#region SLEEP

		public static int SLEEP(this DataConnection dataConnection, int? TIMEOUT)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SLEEP",
				new DataParameter("TIMEOUT", TIMEOUT));
		}

		#endregion

		#region SLEEP2

		public static int SLEEP2(this DataConnection dataConnection, string APPLICATIONID)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SLEEP2",
				new DataParameter("APPLICATIONID", APPLICATIONID));
		}

		#endregion

		#region SNAPSHOT_FILEW

		public static int SNAPSHOT_FILEW(this DataConnection dataConnection, short? REQUESTTYPE, string DBNAME, short? PARTITIONNUM)
		{
			return dataConnection.ExecuteProc("SYSPROC.SNAPSHOT_FILEW",
				new DataParameter("REQUESTTYPE",  REQUESTTYPE),
				new DataParameter("DBNAME",       DBNAME),
				new DataParameter("PARTITIONNUM", PARTITIONNUM));
		}

		#endregion

		#region SNAP_WRITE_FILE

		public static int SNAP_WRITE_FILE(this DataConnection dataConnection, string REQUEST_TYPE, string DBNAME, int? MEMBER)
		{
			return dataConnection.ExecuteProc("SYSPROC.SNAP_WRITE_FILE",
				new DataParameter("REQUEST_TYPE", REQUEST_TYPE),
				new DataParameter("DBNAME",       DBNAME),
				new DataParameter("MEMBER",       MEMBER));
		}

		#endregion

		#region SPLIT

		public static int SPLIT(this DataConnection dataConnection, string LIST, out int? TABLEN, out object TAB, out int? RC)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.SPLIT",
				new DataParameter("LIST", LIST));

			TABLEN = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["TABLEN"]).Value);
			TAB    = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["TAB"]).   Value);
			RC     = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RC"]).    Value);

			return ret;
		}

		#endregion

		#region SQLATTRIBUTES

		public static int SQLATTRIBUTES(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TYPE_NAME, string ATTRIBUTE_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLATTRIBUTES",
				new DataParameter("CATALOG_NAME",   CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",    SCHEMA_NAME),
				new DataParameter("TYPE_NAME",      TYPE_NAME),
				new DataParameter("ATTRIBUTE_NAME", ATTRIBUTE_NAME),
				new DataParameter("OPTIONS",        OPTIONS));
		}

		#endregion

		#region SQLCAMESSAGE

		public static int SQLCAMESSAGE(this DataConnection dataConnection, int? SQLCODE, short? SQLERRML, string SQLERRMC, object SQLERRP, int? SQLERRD0, int? SQLERRD1, int? SQLERRD2, int? SQLERRD3, int? SQLERRD4, int? SQLERRD5, object SQLWARN, object SQLSTATE, string MESSAGEFILENAME, ref string LOCALE, out string MESSAGE, out int? RCODE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBM.SQLCAMESSAGE",
				new DataParameter("SQLCODE",         SQLCODE),
				new DataParameter("SQLERRML",        SQLERRML),
				new DataParameter("SQLERRMC",        SQLERRMC),
				new DataParameter("SQLERRP",         SQLERRP),
				new DataParameter("SQLERRD0",        SQLERRD0),
				new DataParameter("SQLERRD1",        SQLERRD1),
				new DataParameter("SQLERRD2",        SQLERRD2),
				new DataParameter("SQLERRD3",        SQLERRD3),
				new DataParameter("SQLERRD4",        SQLERRD4),
				new DataParameter("SQLERRD5",        SQLERRD5),
				new DataParameter("SQLWARN",         SQLWARN),
				new DataParameter("SQLSTATE",        SQLSTATE),
				new DataParameter("MESSAGEFILENAME", MESSAGEFILENAME),
				new DataParameter("LOCALE",          LOCALE)          { Direction = ParameterDirection.InputOutput, Size = 33 });

			LOCALE  = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LOCALE"]). Value);
			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);
			RCODE   = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RCODE"]).  Value);

			return ret;
		}

		#endregion

		#region SQLCAMESSAGECCSID

		public static int SQLCAMESSAGECCSID(this DataConnection dataConnection, int? SQLCODE, short? SQLERRML, string SQLERRMC, object SQLERRP, int? SQLERRD0, int? SQLERRD1, int? SQLERRD2, int? SQLERRD3, int? SQLERRD4, int? SQLERRD5, object SQLWARN, object SQLSTATE, string MESSAGEFILENAME, ref string LOCALE, out string MESSAGE, out int? RCODE, ref int? CCSID)
		{
			var ret = dataConnection.ExecuteProc("SYSIBM.SQLCAMESSAGECCSID",
				new DataParameter("SQLCODE",         SQLCODE),
				new DataParameter("SQLERRML",        SQLERRML),
				new DataParameter("SQLERRMC",        SQLERRMC),
				new DataParameter("SQLERRP",         SQLERRP),
				new DataParameter("SQLERRD0",        SQLERRD0),
				new DataParameter("SQLERRD1",        SQLERRD1),
				new DataParameter("SQLERRD2",        SQLERRD2),
				new DataParameter("SQLERRD3",        SQLERRD3),
				new DataParameter("SQLERRD4",        SQLERRD4),
				new DataParameter("SQLERRD5",        SQLERRD5),
				new DataParameter("SQLWARN",         SQLWARN),
				new DataParameter("SQLSTATE",        SQLSTATE),
				new DataParameter("MESSAGEFILENAME", MESSAGEFILENAME),
				new DataParameter("LOCALE",          LOCALE)          { Direction = ParameterDirection.InputOutput, Size = 33 },
				new DataParameter("CCSID",           CCSID)           { Direction = ParameterDirection.InputOutput, Size = 4 });

			LOCALE  = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LOCALE"]). Value);
			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);
			RCODE   = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["RCODE"]).  Value);
			CCSID   = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["CCSID"]).  Value);

			return ret;
		}

		#endregion

		#region SQLCOLPRIVILEGES

		public static int SQLCOLPRIVILEGES(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, string COL_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLCOLPRIVILEGES",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("COL_NAME",     COL_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLCOLUMNS

		public static int SQLCOLUMNS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, string COL_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLCOLUMNS",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("COL_NAME",     COL_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLFOREIGNKEYS

		public static int SQLFOREIGNKEYS(this DataConnection dataConnection, string PKCATALOG_NAME, string PKSCHEMA_NAME, string PKTABLE_NAME, string FKCATALOG_NAME, string FKSCHEMA_NAME, string FKTABLE_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLFOREIGNKEYS",
				new DataParameter("PKCATALOG_NAME", PKCATALOG_NAME),
				new DataParameter("PKSCHEMA_NAME",  PKSCHEMA_NAME),
				new DataParameter("PKTABLE_NAME",   PKTABLE_NAME),
				new DataParameter("FKCATALOG_NAME", FKCATALOG_NAME),
				new DataParameter("FKSCHEMA_NAME",  FKSCHEMA_NAME),
				new DataParameter("FKTABLE_NAME",   FKTABLE_NAME),
				new DataParameter("OPTIONS",        OPTIONS));
		}

		#endregion

		#region SQLFUNCTIONCOLS

		public static int SQLFUNCTIONCOLS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string FUNCTION_NAME, string PARAMETER_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLFUNCTIONCOLS",
				new DataParameter("CATALOG_NAME",   CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",    SCHEMA_NAME),
				new DataParameter("FUNCTION_NAME",  FUNCTION_NAME),
				new DataParameter("PARAMETER_NAME", PARAMETER_NAME),
				new DataParameter("OPTIONS",        OPTIONS));
		}

		#endregion

		#region SQLFUNCTIONS

		public static int SQLFUNCTIONS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string FUNCTION_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLFUNCTIONS",
				new DataParameter("CATALOG_NAME",  CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",   SCHEMA_NAME),
				new DataParameter("FUNCTION_NAME", FUNCTION_NAME),
				new DataParameter("OPTIONS",       OPTIONS));
		}

		#endregion

		#region SQLGETTYPEINFO

		public static int SQLGETTYPEINFO(this DataConnection dataConnection, short? DATATYPE, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLGETTYPEINFO",
				new DataParameter("DATATYPE", DATATYPE),
				new DataParameter("OPTIONS",  OPTIONS));
		}

		#endregion

		#region SQLPRIMARYKEYS

		public static int SQLPRIMARYKEYS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLPRIMARYKEYS",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLPROCEDURECOLS

		public static int SQLPROCEDURECOLS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string PROC_NAME, string COL_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLPROCEDURECOLS",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("PROC_NAME",    PROC_NAME),
				new DataParameter("COL_NAME",     COL_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLPROCEDURES

		public static int SQLPROCEDURES(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string PROC_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLPROCEDURES",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("PROC_NAME",    PROC_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLPSEUDOCOLUMNS

		public static int SQLPSEUDOCOLUMNS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, string COL_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLPSEUDOCOLUMNS",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("COL_NAME",     COL_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLSPECIALCOLUMNS

		public static int SQLSPECIALCOLUMNS(this DataConnection dataConnection, short? COLTYPE, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, short? SCOPE, short? NULLABLE, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLSPECIALCOLUMNS",
				new DataParameter("COLTYPE",      COLTYPE),
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("SCOPE",        SCOPE),
				new DataParameter("NULLABLE",     NULLABLE),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLSTATISTICS

		public static int SQLSTATISTICS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, short? UNIQUE, short? RESERVED, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLSTATISTICS",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("UNIQUE",       UNIQUE),
				new DataParameter("RESERVED",     RESERVED),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLSUPERTABLES

		public static int SQLSUPERTABLES(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLSUPERTABLES",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLSUPERTYPES

		public static int SQLSUPERTYPES(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TYPE_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLSUPERTYPES",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TYPE_NAME",    TYPE_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLTABLEPRIVILEGES

		public static int SQLTABLEPRIVILEGES(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLTABLEPRIVILEGES",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLTABLES

		public static int SQLTABLES(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TABLE_NAME, string TABLE_TYPE, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLTABLES",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TABLE_NAME",   TABLE_NAME),
				new DataParameter("TABLE_TYPE",   TABLE_TYPE),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region SQLUDTS

		public static int SQLUDTS(this DataConnection dataConnection, string CATALOG_NAME, string SCHEMA_NAME, string TYPE_NAME, string TYPES, string OPTIONS)
		{
			return dataConnection.ExecuteProc("SYSIBM.SQLUDTS",
				new DataParameter("CATALOG_NAME", CATALOG_NAME),
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME),
				new DataParameter("TYPE_NAME",    TYPE_NAME),
				new DataParameter("TYPES",        TYPES),
				new DataParameter("OPTIONS",      OPTIONS));
		}

		#endregion

		#region STEPWISE_REDISTRIBUTE_DBPG

		public static int STEPWISE_REDISTRIBUTE_DBPG(this DataConnection dataConnection, string DBPGNAME, short? STARTINGPOINT, short? NUMSTEPS)
		{
			return dataConnection.ExecuteProc("SYSPROC.STEPWISE_REDISTRIBUTE_DBPG",
				new DataParameter("DBPGNAME",      DBPGNAME),
				new DataParameter("STARTINGPOINT", STARTINGPOINT),
				new DataParameter("NUMSTEPS",      NUMSTEPS));
		}

		#endregion

		#region SUBMIT

		public static int SUBMIT(this DataConnection dataConnection, out decimal? JOB, string WHAT, DateTime? NEXT_DATE, string INTERVAL, object NO_PARSE, int? INSTANCE, object FORCE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.SUBMIT",
				new DataParameter("WHAT",      WHAT),
				new DataParameter("NEXT_DATE", NEXT_DATE),
				new DataParameter("INTERVAL",  INTERVAL),
				new DataParameter("NO_PARSE",  NO_PARSE),
				new DataParameter("INSTANCE",  INSTANCE),
				new DataParameter("FORCE",     FORCE));

			JOB = Converter.ChangeTypeTo<decimal?>(((IDbDataParameter)dataConnection.Command.Parameters["JOB"]).Value);

			return ret;
		}

		#endregion

		#region SYSINSTALLOBJECTS

		public static int SYSINSTALLOBJECTS(this DataConnection dataConnection, string TOOL_NAME, object ACTION, string TABLESPACE_NAME, string SCHEMA_NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.SYSINSTALLOBJECTS",
				new DataParameter("TOOL_NAME",       TOOL_NAME),
				new DataParameter("ACTION",          ACTION),
				new DataParameter("TABLESPACE_NAME", TABLESPACE_NAME),
				new DataParameter("SCHEMA_NAME",     SCHEMA_NAME));
		}

		#endregion

		#region SYSINSTALLROUTINES

		public static int SYSINSTALLROUTINES(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSPROC.SYSINSTALLROUTINES");
		}

		#endregion

		#region SYSTS_ADMIN_CMD

		public static int SYSTS_ADMIN_CMD(this DataConnection dataConnection, string CMD, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_ADMIN_CMD",
				new DataParameter("CMD",            CMD),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_ALTER

		public static int SYSTS_ALTER(this DataConnection dataConnection, string INDEX_SCHEMA, string INDEX_NAME, string ALTER_OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_ALTER",
				new DataParameter("INDEX_SCHEMA",   INDEX_SCHEMA),
				new DataParameter("INDEX_NAME",     INDEX_NAME),
				new DataParameter("ALTER_OPTIONS",  ALTER_OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_BACKUP

		public static int SYSTS_BACKUP(this DataConnection dataConnection, string INDEX_SCHEMA, string INDEX_NAME, string OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_BACKUP",
				new DataParameter("INDEX_SCHEMA",   INDEX_SCHEMA),
				new DataParameter("INDEX_NAME",     INDEX_NAME),
				new DataParameter("OPTIONS",        OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_CLEANUP

		public static int SYSTS_CLEANUP(this DataConnection dataConnection, string OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_CLEANUP",
				new DataParameter("OPTIONS",        OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_CLEAR_COMMANDLOCKS

		public static int SYSTS_CLEAR_COMMANDLOCKS(this DataConnection dataConnection, string INDEX_SCHEMA, string INDEX_NAME, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_CLEAR_COMMANDLOCKS",
				new DataParameter("INDEX_SCHEMA",   INDEX_SCHEMA),
				new DataParameter("INDEX_NAME",     INDEX_NAME),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_CLEAR_EVENTS

		public static int SYSTS_CLEAR_EVENTS(this DataConnection dataConnection, string INDEX_SCHEMA, string INDEX_NAME, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_CLEAR_EVENTS",
				new DataParameter("INDEX_SCHEMA",   INDEX_SCHEMA),
				new DataParameter("INDEX_NAME",     INDEX_NAME),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_CONFIGURE

		public static int SYSTS_CONFIGURE(this DataConnection dataConnection, string OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_CONFIGURE",
				new DataParameter("OPTIONS",        OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_CREATE

		public static int SYSTS_CREATE(this DataConnection dataConnection, string INDEX_SCHEMA, string INDEX_NAME, string TEXT_SOURCE, string OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_CREATE",
				new DataParameter("INDEX_SCHEMA",   INDEX_SCHEMA),
				new DataParameter("INDEX_NAME",     INDEX_NAME),
				new DataParameter("TEXT_SOURCE",    TEXT_SOURCE),
				new DataParameter("OPTIONS",        OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_DISABLE

		public static int SYSTS_DISABLE(this DataConnection dataConnection, string OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_DISABLE",
				new DataParameter("OPTIONS",        OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_RESTORE

		public static int SYSTS_RESTORE(this DataConnection dataConnection, string INDEX_SCHEMA, string INDEX_NAME, string OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_RESTORE",
				new DataParameter("INDEX_SCHEMA",   INDEX_SCHEMA),
				new DataParameter("INDEX_NAME",     INDEX_NAME),
				new DataParameter("OPTIONS",        OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_UPDATE

		public static int SYSTS_UPDATE(this DataConnection dataConnection, string INDEX_SCHEMA, string INDEX_NAME, string UPDATE_OPTIONS, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_UPDATE",
				new DataParameter("INDEX_SCHEMA",   INDEX_SCHEMA),
				new DataParameter("INDEX_NAME",     INDEX_NAME),
				new DataParameter("UPDATE_OPTIONS", UPDATE_OPTIONS),
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_UPGRADE_CATALOG

		public static int SYSTS_UPGRADE_CATALOG(this DataConnection dataConnection, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_UPGRADE_CATALOG",
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYSTS_UPGRADE_INDEX

		public static int SYSTS_UPGRADE_INDEX(this DataConnection dataConnection, string MESSAGE_LOCALE, out string MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.SYSTS_UPGRADE_INDEX",
				new DataParameter("MESSAGE_LOCALE", MESSAGE_LOCALE));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SYS_INIT

		public static int SYS_INIT(this DataConnection dataConnection)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.SYS_INIT");
		}

		#endregion

		#region TABLE_TO_COMMA_LNAME

		public static int TABLE_TO_COMMA_LNAME(this DataConnection dataConnection, object TAB, out int? TABLEN, out string LIST)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.TABLE_TO_COMMA_LNAME",
				new DataParameter("TAB", TAB));

			TABLEN = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["TABLEN"]).Value);
			LIST   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LIST"]).  Value);

			return ret;
		}

		#endregion

		#region TABLE_TO_COMMA_UNCL

		public static int TABLE_TO_COMMA_UNCL(this DataConnection dataConnection, object TAB, out int? TABLEN, out string LIST)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.TABLE_TO_COMMA_UNCL",
				new DataParameter("TAB", TAB));

			TABLEN = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["TABLEN"]).Value);
			LIST   = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LIST"]).  Value);

			return ret;
		}

		#endregion

		#region TRIM_CLOB

		public static int TRIM_CLOB(this DataConnection dataConnection, ref string LOB_LOC, int? NEWLEN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.TRIM_CLOB",
				new DataParameter("LOB_LOC", LOB_LOC) { Direction = ParameterDirection.InputOutput, Size = 10485760 },
				new DataParameter("NEWLEN",  NEWLEN));

			LOB_LOC = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LOB_LOC"]).Value);

			return ret;
		}

		#endregion

		#region UNPACK_MESSAGE

		public static int UNPACK_MESSAGE(this DataConnection dataConnection, out string ITEM)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.UNPACK_MESSAGE");

			ITEM = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ITEM"]).Value);

			return ret;
		}

		#endregion

		#region UNPACK_MESSAGE_CHAR

		public static int UNPACK_MESSAGE_CHAR(this DataConnection dataConnection, out string ITEM)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.UNPACK_MESSAGE_CHAR");

			ITEM = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["ITEM"]).Value);

			return ret;
		}

		#endregion

		#region UNPACK_MESSAGE_DATE

		public static int UNPACK_MESSAGE_DATE(this DataConnection dataConnection, out DateTime? ITEM)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.UNPACK_MESSAGE_DATE");

			ITEM = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["ITEM"]).Value);

			return ret;
		}

		#endregion

		#region UNPACK_MESSAGE_INT

		public static int UNPACK_MESSAGE_INT(this DataConnection dataConnection, out int? ITEM)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.UNPACK_MESSAGE_INT");

			ITEM = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["ITEM"]).Value);

			return ret;
		}

		#endregion

		#region UNPACK_MESSAGE_NUMBER

		public static int UNPACK_MESSAGE_NUMBER(this DataConnection dataConnection, out decimal? ITEM)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.UNPACK_MESSAGE_NUMBER");

			ITEM = Converter.ChangeTypeTo<decimal?>(((IDbDataParameter)dataConnection.Command.Parameters["ITEM"]).Value);

			return ret;
		}

		#endregion

		#region VALIDATE

		public static int VALIDATE(this DataConnection dataConnection, int? OBJECT_ID)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.VALIDATE",
				new DataParameter("OBJECT_ID", OBJECT_ID));
		}

		#endregion

		#region VALIDATE_LENGTH

		public static int VALIDATE_LENGTH(this DataConnection dataConnection, int? LENGTH1, int? LENGTH2, string ERRORCODE)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.VALIDATE_LENGTH",
				new DataParameter("LENGTH1",   LENGTH1),
				new DataParameter("LENGTH2",   LENGTH2),
				new DataParameter("ERRORCODE", ERRORCODE));
		}

		#endregion

		#region VARIABLE_VALUE_CHAR

		public static int VARIABLE_VALUE_CHAR(this DataConnection dataConnection, int? C, string NAME, out object VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_CHAR",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VARIABLE_VALUE_CLOB

		public static int VARIABLE_VALUE_CLOB(this DataConnection dataConnection, int? C, string NAME, out string VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_CLOB",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VARIABLE_VALUE_DATE

		public static int VARIABLE_VALUE_DATE(this DataConnection dataConnection, int? C, string NAME, out DateTime? VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_DATE",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VARIABLE_VALUE_DOUBLE

		public static int VARIABLE_VALUE_DOUBLE(this DataConnection dataConnection, int? C, string NAME, out double? VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_DOUBLE",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<double?>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VARIABLE_VALUE_INT

		public static int VARIABLE_VALUE_INT(this DataConnection dataConnection, int? C, string NAME, out int? VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_INT",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VARIABLE_VALUE_NUMBER

		public static int VARIABLE_VALUE_NUMBER(this DataConnection dataConnection, int? C, string NAME, out decimal? VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_NUMBER",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<decimal?>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VARIABLE_VALUE_TIMESTAMP

		public static int VARIABLE_VALUE_TIMESTAMP(this DataConnection dataConnection, int? C, string NAME, out DateTime? VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_TIMESTAMP",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VARIABLE_VALUE_VARCHAR

		public static int VARIABLE_VALUE_VARCHAR(this DataConnection dataConnection, int? C, string NAME, out string VALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VARIABLE_VALUE_VARCHAR",
				new DataParameter("C",    C),
				new DataParameter("NAME", NAME));

			VALUE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["VALUE"]).Value);

			return ret;
		}

		#endregion

		#region VRFY

		public static int VRFY(this DataConnection dataConnection, ref object C, string RECIPIENT, out object REPLY)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.VRFY",
				new DataParameter("C",         C)         { Direction = ParameterDirection.InputOutput },
				new DataParameter("RECIPIENT", RECIPIENT));

			C     = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).    Value);
			REPLY = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["REPLY"]).Value);

			return ret;
		}

		#endregion

		#region WAITANY_INTERNAL

		public static int WAITANY_INTERNAL(this DataConnection dataConnection, out string NAME, out string MESSAGE, out int? STATUS, int? TIMEOUT, string APPLICATIONID)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.WAITANY_INTERNAL",
				new DataParameter("TIMEOUT",       TIMEOUT),
				new DataParameter("APPLICATIONID", APPLICATIONID));

			NAME    = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["NAME"]).   Value);
			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);
			STATUS  = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["STATUS"]). Value);

			return ret;
		}

		#endregion

		#region WAITONE_INTERNAL

		public static int WAITONE_INTERNAL(this DataConnection dataConnection, string NAME, out string MESSAGE, out int? STATUS, int? TIMEOUT, string APPLICATIONID)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.WAITONE_INTERNAL",
				new DataParameter("NAME",          NAME),
				new DataParameter("TIMEOUT",       TIMEOUT),
				new DataParameter("APPLICATIONID", APPLICATIONID));

			MESSAGE = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);
			STATUS  = Converter.ChangeTypeTo<int?>  (((IDbDataParameter)dataConnection.Command.Parameters["STATUS"]). Value);

			return ret;
		}

		#endregion

		#region WHAT

		public static int WHAT(this DataConnection dataConnection, decimal? JOB, string WHAT)
		{
			return dataConnection.ExecuteProc("SYSIBMADM.WHAT",
				new DataParameter("JOB",  JOB),
				new DataParameter("WHAT", WHAT));
		}

		#endregion

		#region WLM_CANCEL_ACTIVITY

		public static int WLM_CANCEL_ACTIVITY(this DataConnection dataConnection, long? APPLICATION_HANDLE, int? UOW_ID, int? ACTIVITY_ID)
		{
			return dataConnection.ExecuteProc("SYSPROC.WLM_CANCEL_ACTIVITY",
				new DataParameter("APPLICATION_HANDLE", APPLICATION_HANDLE),
				new DataParameter("UOW_ID",             UOW_ID),
				new DataParameter("ACTIVITY_ID",        ACTIVITY_ID));
		}

		#endregion

		#region WLM_CAPTURE_ACTIVITY_IN_PROGRESS

		public static int WLM_CAPTURE_ACTIVITY_IN_PROGRESS(this DataConnection dataConnection, long? APPLICATION_HANDLE, int? UOW_ID, int? ACTIVITY_ID)
		{
			return dataConnection.ExecuteProc("SYSPROC.WLM_CAPTURE_ACTIVITY_IN_PROGRESS",
				new DataParameter("APPLICATION_HANDLE", APPLICATION_HANDLE),
				new DataParameter("UOW_ID",             UOW_ID),
				new DataParameter("ACTIVITY_ID",        ACTIVITY_ID));
		}

		#endregion

		#region WLM_COLLECT_STATS

		public static int WLM_COLLECT_STATS(this DataConnection dataConnection, object WAIT, out DateTime? STATISTICS_TIMESTAMP)
		{
			var ret = dataConnection.ExecuteProc("SYSPROC.WLM_COLLECT_STATS",
				new DataParameter("WAIT", WAIT));

			STATISTICS_TIMESTAMP = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["STATISTICS_TIMESTAMP"]).Value);

			return ret;
		}

		#endregion

		#region WLM_SET_CLIENT_INFO

		public static int WLM_SET_CLIENT_INFO(this DataConnection dataConnection, string CLIENT_USERID, string CLIENT_WRKSTNNAME, string CLIENT_APPLNAME, string CLIENT_ACCTSTR, string CLIENT_WORKLOAD)
		{
			return dataConnection.ExecuteProc("SYSPROC.WLM_SET_CLIENT_INFO",
				new DataParameter("CLIENT_USERID",     CLIENT_USERID),
				new DataParameter("CLIENT_WRKSTNNAME", CLIENT_WRKSTNNAME),
				new DataParameter("CLIENT_APPLNAME",   CLIENT_APPLNAME),
				new DataParameter("CLIENT_ACCTSTR",    CLIENT_ACCTSTR),
				new DataParameter("CLIENT_WORKLOAD",   CLIENT_WORKLOAD));
		}

		#endregion

		#region WLM_SET_CONN_ENV

		public static int WLM_SET_CONN_ENV(this DataConnection dataConnection, long? APPLICATION_HANDLE, string SETTINGS)
		{
			return dataConnection.ExecuteProc("SYSPROC.WLM_SET_CONN_ENV",
				new DataParameter("APPLICATION_HANDLE", APPLICATION_HANDLE),
				new DataParameter("SETTINGS",           SETTINGS));
		}

		#endregion

		#region WRITEAPPEND_CLOB

		public static int WRITEAPPEND_CLOB(this DataConnection dataConnection, ref string LOB_LOC, int? AMOUNT, string BUFFER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.WRITEAPPEND_CLOB",
				new DataParameter("LOB_LOC", LOB_LOC) { Direction = ParameterDirection.InputOutput, Size = 10485760 },
				new DataParameter("AMOUNT",  AMOUNT),
				new DataParameter("BUFFER",  BUFFER));

			LOB_LOC = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LOB_LOC"]).Value);

			return ret;
		}

		#endregion

		#region WRITE_CLOB

		public static int WRITE_CLOB(this DataConnection dataConnection, ref string LOB_LOC, int? AMOUNT, int? OFFSET, string BUFFER)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.WRITE_CLOB",
				new DataParameter("LOB_LOC", LOB_LOC) { Direction = ParameterDirection.InputOutput, Size = 10485760 },
				new DataParameter("AMOUNT",  AMOUNT),
				new DataParameter("OFFSET",  OFFSET),
				new DataParameter("BUFFER",  BUFFER));

			LOB_LOC = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["LOB_LOC"]).Value);

			return ret;
		}

		#endregion

		#region WRITE_DATA

		public static int WRITE_DATA(this DataConnection dataConnection, ref object C, string DATA)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.WRITE_DATA",
				new DataParameter("C",    C)    { Direction = ParameterDirection.InputOutput },
				new DataParameter("DATA", DATA));

			C = Converter.ChangeTypeTo<object>(((IDbDataParameter)dataConnection.Command.Parameters["C"]).Value);

			return ret;
		}

		#endregion

		#region WRITE_LINE

		public static int WRITE_LINE(this DataConnection dataConnection, object C, string DATA, out int? BYTESWRITTEN)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.WRITE_LINE",
				new DataParameter("C",    C),
				new DataParameter("DATA", DATA));

			BYTESWRITTEN = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["BYTESWRITTEN"]).Value);

			return ret;
		}

		#endregion

		#region WRITE_TEXT

		public static int WRITE_TEXT(this DataConnection dataConnection, object C, string DATA, int? LEN, out int? RETURNVALUE)
		{
			var ret = dataConnection.ExecuteProc("SYSIBMADM.WRITE_TEXT",
				new DataParameter("C",    C),
				new DataParameter("DATA", DATA),
				new DataParameter("LEN",  LEN));

			RETURNVALUE = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RETURNVALUE"]).Value);

			return ret;
		}

		#endregion

		#region XSR_REMOVE

		public static int XSR_REMOVE(this DataConnection dataConnection, string RSCHEMA, string NAME)
		{
			return dataConnection.ExecuteProc("SYSPROC.XSR_REMOVE",
				new DataParameter("RSCHEMA", RSCHEMA),
				new DataParameter("NAME",    NAME));
		}

		#endregion

		#region XSR_UPDATE

		public static int XSR_UPDATE(this DataConnection dataConnection, string RSCHEMA1, string NAME1, string RSCHEMA2, string NAME2, int? DELETED)
		{
			return dataConnection.ExecuteProc("SYSPROC.XSR_UPDATE",
				new DataParameter("RSCHEMA1", RSCHEMA1),
				new DataParameter("NAME1",    NAME1),
				new DataParameter("RSCHEMA2", RSCHEMA2),
				new DataParameter("NAME2",    NAME2),
				new DataParameter("DELETED",  DELETED));
		}

		#endregion
	}
}
