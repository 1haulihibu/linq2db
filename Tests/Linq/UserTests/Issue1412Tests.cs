//---------------------------------------------------------------------------------------------------
// This code was generated by LinqToDB.
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;
using LinqToDB;
using NUnit.Framework;

namespace Tests.UserTests.TestXXX
{
	public interface IModifiedTimeStamp
	{
	}

	public class BasicDTO : BasicDTOwithoutID
	{
		public Guid Id { get; set; }
	}

	public class BasicDTOwithExtensionData : BasicDTO
	{ }

	public class BasicDTOwithoutID
	{ }

	public abstract class WmsBasicDTO<T> : WmsBasicWithoutCustomFieldsDTO<T>
	{ }

	public abstract class WmsBasicWithoutCustomFieldsDTO<T> : BasicDTOwithExtensionData
	{ }

	public class WmsLoadCarrierDTO : WmsBasicDTO<WmsLoadCarrierDTO>
	{
		public Guid? TypeID { get; set; }
	}

	public class WmsResourceCombinedDTO 
	{
		public WmsLoadCarrierDTO LoadCarrier { get; set; }

		public WmsResourceTypeDTO ResourceType { get; set; }
	}

	public class WmsResourceTypeDTO : BasicDTOwithExtensionData
	{
		public string Name { get; set; }

		public string ShortName { get; set; }

		public int Height { get; set; }

		public int Depth { get; set; }

		public int Width { get; set; }
	}

	[TestFixture]
	public class UserTest : TestBase
	{
		[Test, DataContextSource]
		public void Test(string context)
		{
			// Table([WMS_Resource]).Union(Table([WMS_ResourceA]).TableName("WMS_ResourceA")).GroupJoin(Table([WMS_ResourceType]), res => res.TypeID, type => Convert(type.Id), (res, tpList) => new <>f__AnonymousType97`2(res = res, tpList = tpList)).SelectMany(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.tpList.DefaultIfEmpty(), (<>h__TransparentIdentifier0, tp) => new WmsResourceCombinedDTO() {LoadCarrier = <>h__TransparentIdentifier0.res, ResourceType = tp})
			using (var db = GetDataContext(context))
			{
				var qry = from res in db.GetTable<WmsLoadCarrierDTO>()
					join type in db.GetTable<WmsResourceTypeDTO>() on res.TypeID equals type.Id into tpList
					from tp in tpList.DefaultIfEmpty()
					select new WmsResourceCombinedDTO()
						{ LoadCarrier = res, ResourceType = tp };

				var qryUnion = from res in db.GetTable<WmsLoadCarrierDTO>().Union(db.GetTable<WmsLoadCarrierDTO>().TableName("WMS_ResourceA"))
					join type in db.GetTable<WmsResourceTypeDTO>() on res.TypeID equals type.Id into tpList
					from tp in tpList.DefaultIfEmpty()
					select new WmsResourceCombinedDTO()
						{ LoadCarrier = res, ResourceType = tp };

				var sql = qry.ToString();
				var sql2 = qryUnion.ToString();
			}
		}
	}
}
